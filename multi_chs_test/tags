!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALARM_HEADER_STR	network/inc/command.h	/^static uint8_t ALARM_HEADER_STR[TCP_CMD_HEADER_LEN] = { 0x00,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xFF };$/;"	v
ARGET	build/Makefile	/^	make libs TARGET=depend$/;"	m
AUDIO_ENCODE_THR	core/src/main.c	15;"	d	file:
AUDIO_TIME_STAMP_INC	utils/com/inc/rtpsend.h	39;"	d
AUDIO_TIME_STAMP_INC_STD	utils/com/inc/rtpsend.h	38;"	d
AUTO_TEST_DELAY	utils/osa/src/osa_test.c	5;"	d	file:
Alarm	network/inc/command.h	/^		}Alarm;$/;"	m	union:_ReturnPack::__anon7	typeref:struct:_ReturnPack::__anon7::__anon9	access:public
Alarm	network/inc/command.h	/^		}Alarm;$/;"	m	union:_ServerPack::__anon1	typeref:struct:_ServerPack::__anon1::__anon6	access:public
AlarmStatePack	network/inc/command.h	/^}AlarmStatePack;$/;"	t	typeref:struct:_AlarmStatePack
BITS_PER_SAMPLE	utils/ortp/src/avprofile.c	36;"	d	file:
BITS_PER_SAMPLE	utils/ortp/src/avprofile.c	47;"	d	file:
BOOL	core/inc/common.h	/^typedef unsigned char BOOL;$/;"	t
BPRI_MED	utils/ortp/inc/ortp/str_utils.h	78;"	d
Bitrate	network/inc/command.h	/^		}Bitrate;$/;"	m	union:_ServerPack::__anon1	typeref:struct:_ServerPack::__anon1::__anon5	access:public
Bool	utils/osa/inc/osa.h	/^typedef int Bool;                 \/\/\/< Boolean type$/;"	t
CHS_PER_SESSION	utils/com/inc/rtpsend.h	28;"	d
CLIENTNUM	network/inc/serverIf.h	7;"	d
CLOCK_RATE	utils/ortp/src/avprofile.c	35;"	d	file:
CLOCK_RATE	utils/ortp/src/avprofile.c	46;"	d	file:
CMD_HEADER_LEN	utils/com/inc/rtpsend.h	49;"	d
CMD_HEADER_STR	utils/com/inc/rtpsend.h	/^static uint8_t CMD_HEADER_STR[CMD_HEADER_LEN] = { 0xAA,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xA7,0xA8,0xFF };$/;"	v
CMD_SESSION_BUFFER	core/inc/session.h	7;"	d
CMD_SESSION_FLUSH	core/inc/session.h	8;"	d
COMMAND_H_	network/inc/command.h	20;"	d
ClientEnv	network/inc/serverIf.h	/^}ClientEnv;$/;"	t	typeref:struct:_ClientEnv
ClientHndl	core/src/session.c	/^typedef ClientObj* ClientHndl;$/;"	t	file:
ClientMgr	core/src/session.c	/^}ClientMgr;$/;"	t	typeref:struct:_clientMgr	file:
ClientObj	core/src/session.c	/^}ClientObj;$/;"	t	typeref:struct:_clientObj	file:
DEFAULT_CIF_BITRATE	core/inc/common.h	53;"	d
DEFAULT_D1_BITRATE	core/inc/common.h	52;"	d
DVS_BITRATE_VARAY	network/inc/command.h	54;"	d
DVS_CMD_ADD_CLIENT	network/inc/command.h	/^	DVS_CMD_ADD_CLIENT,         \/** 添加一个新的客户端 *\/$/;"	e	enum:_ServerCMD
DVS_CMD_CLOSE_CHANNEL	network/inc/command.h	/^	DVS_CMD_CLOSE_CHANNEL,      \/** 关闭指定的通道 *\/$/;"	e	enum:_ServerCMD
DVS_CMD_DEL_CLIENT	network/inc/command.h	/^	DVS_CMD_DEL_CLIENT,         \/** 删除一个已存在的客户端 *\/$/;"	e	enum:_ServerCMD
DVS_CMD_GET_ALARMIN	network/inc/command.h	/^	DVS_CMD_GET_ALARMIN,        \/** 获取指定通道的报警输入**\/$/;"	e	enum:_ServerCMD
DVS_CMD_GET_ALARMOUT	network/inc/command.h	/^	DVS_CMD_GET_ALARMOUT,		\/** 获取指定通道的报警输出**\/$/;"	e	enum:_ServerCMD
DVS_CMD_GET_RESOLUTION	network/inc/command.h	/^    DVS_CMD_GET_RESOLUTION,     \/** 获取视频的分辨率 *\/ $/;"	e	enum:_ServerCMD
DVS_CMD_OFF_ALARMOUT	network/inc/command.h	/^	DVS_CMD_OFF_ALARMOUT,       \/** 关闭指定通道的报警输出**\/$/;"	e	enum:_ServerCMD
DVS_CMD_OFF_AUDIO	network/inc/command.h	/^	DVS_CMD_OFF_AUDIO,          \/** 休眠整个音频模块**\/$/;"	e	enum:_ServerCMD
DVS_CMD_ON_ALARMOUT	network/inc/command.h	/^	DVS_CMD_ON_ALARMOUT,        \/** 打开指定通道的报警输出**\/$/;"	e	enum:_ServerCMD
DVS_CMD_ON_AUDIO	network/inc/command.h	/^	DVS_CMD_ON_AUDIO,			\/**唤醒整个音频模块**\/$/;"	e	enum:_ServerCMD
DVS_CMD_OPEN_CHANNEL	network/inc/command.h	/^	DVS_CMD_OPEN_CHANNEL,       \/** 打开指定的通道 *\/$/;"	e	enum:_ServerCMD
DVS_CMD_RESET_BOARD	network/inc/command.h	/^	DVS_CMD_RESET_BOARD,        \/** 重启下位机程序 *\/$/;"	e	enum:_ServerCMD
DVS_CMD_SET_BITRATE	network/inc/command.h	/^	DVS_CMD_SET_BITRATE,        \/** 设置固定码率 *\/$/;"	e	enum:_ServerCMD
DVS_CMD_SET_RESOLUTION	network/inc/command.h	/^	DVS_CMD_SET_RESOLUTION,     \/** 设置视频的分辨率 *\/$/;"	e	enum:_ServerCMD
DVS_EXIT_FAIL	core/inc/common.h	/^    DVS_EXIT_FAIL,$/;"	e	enum:_ExitState
DVS_EXIT_RESET_BOARD	core/inc/common.h	/^    DVS_EXIT_RESET_BOARD,$/;"	e	enum:_ExitState
DVS_EXIT_SUCCESS	core/inc/common.h	/^    DVS_EXIT_SUCCESS,$/;"	e	enum:_ExitState
DVS_RESOLUTION_CIF	network/inc/command.h	/^	DVS_RESOLUTION_CIF = 0,$/;"	e	enum:_EResolution
DVS_RESOLUTION_D1	network/inc/command.h	/^	DVS_RESOLUTION_D1$/;"	e	enum:_EResolution
DVS_RETURN_FAIL	network/inc/command.h	/^	DVS_RETURN_FAIL,             \/** 操作失败 *\/$/;"	e	enum:_ReturnCMD
DVS_RETURN_INVLID_CMD	network/inc/command.h	/^	DVS_RETURN_INVLID_CMD,       \/** 无效的命令 *\/$/;"	e	enum:_ReturnCMD
DVS_RETURN_INVLID_HEADER	network/inc/command.h	/^	DVS_RETURN_INVLID_HEADER,    \/** 无效的命令头 *\/$/;"	e	enum:_ReturnCMD
DVS_RETURN_INVLID_PRM	network/inc/command.h	/^	DVS_RETURN_INVLID_PRM,       \/** 无效的参数 *\/$/;"	e	enum:_ReturnCMD
DVS_RETURN_SUCCESS	network/inc/command.h	/^	DVS_RETURN_SUCCESS = 0,      \/** 操作成功 *\/$/;"	e	enum:_ReturnCMD
DVS_RETURN_TIMEOUT	network/inc/command.h	/^	DVS_RETURN_TIMEOUT,          \/** 操作超时 *\/$/;"	e	enum:_ReturnCMD
DVS_WORKING	core/inc/common.h	/^    DVS_WORKING = 0,	$/;"	e	enum:_ExitState
E	utils/ortp/inc/ortp/telephonyevents.h	/^	uint32_t E:1;$/;"	m	struct:_telephone_event	access:public
ENDLINE	utils/ortp/src/ortp.c	190;"	d	file:
ENDLINE	utils/ortp/src/ortp.c	192;"	d	file:
EResolution	network/inc/command.h	/^}EResolution;$/;"	t	typeref:enum:_EResolution
ExitState	core/inc/common.h	/^}ExitState;$/;"	t	typeref:enum:_ExitState
FAILURE	core/inc/common.h	60;"	d
FALSE	core/inc/common.h	71;"	d
FALSE	utils/ortp/inc/ortp/port.h	164;"	d
FALSE	utils/ortp/inc/ortp/port.h	166;"	d
FALSE	utils/osa/inc/osa.h	26;"	d
FALSE	utils/osa/inc/pause.h	25;"	d
FIFOUTIL_FAILURE	utils/osa/inc/fifoutil.h	45;"	d
FIFOUTIL_SUCCESS	utils/osa/inc/fifoutil.h	40;"	d
FLUSHALL	utils/ortp/inc/ortp/str_utils.h	71;"	d
FMTP	utils/ortp/src/avprofile.c	41;"	d	file:
FMTP	utils/ortp/src/avprofile.c	52;"	d	file:
FRAME_HEADER_LEN	utils/com/inc/rtpsend.h	79;"	d
FifoUtil_Handle	utils/osa/inc/fifoutil.h	/^typedef FifoUtil_Obj *FifoUtil_Handle;$/;"	t
FifoUtil_Obj	utils/osa/inc/fifoutil.h	/^typedef struct FifoUtil_Obj {$/;"	s
FifoUtil_Obj	utils/osa/inc/fifoutil.h	/^} FifoUtil_Obj;$/;"	t	typeref:struct:FifoUtil_Obj
FifoUtil_Obj::pipes	utils/osa/inc/fifoutil.h	/^    int pipes[2];$/;"	m	struct:FifoUtil_Obj	access:public
FifoUtil_Obj::size	utils/osa/inc/fifoutil.h	/^    size_t size;$/;"	m	struct:FifoUtil_Obj	access:public
FifoUtil_close	utils/osa/inc/fifoutil.h	/^static inline int FifoUtil_close(FifoUtil_Handle hFifo)$/;"	f	signature:(FifoUtil_Handle hFifo)
FifoUtil_get	utils/osa/inc/fifoutil.h	/^static inline int FifoUtil_get(FifoUtil_Handle hFifo, void *buffer)$/;"	f	signature:(FifoUtil_Handle hFifo, void *buffer)
FifoUtil_open	utils/osa/inc/fifoutil.h	/^static inline int FifoUtil_open(FifoUtil_Handle hFifo, size_t size)$/;"	f	signature:(FifoUtil_Handle hFifo, size_t size)
FifoUtil_put	utils/osa/inc/fifoutil.h	/^static inline int FifoUtil_put(FifoUtil_Handle hFifo, void *buffer)$/;"	f	signature:(FifoUtil_Handle hFifo, void *buffer)
FrameHeader	utils/com/inc/rtpsend.h	/^}FrameHeader;$/;"	t	typeref:struct:_sFrameHeader
GET_LINE_NUM	core/inc/common.h	56;"	d
GlobalData	core/inc/common.h	/^typedef struct GlobalData $/;"	s
GlobalData	core/inc/common.h	/^} GlobalData;$/;"	t	typeref:struct:GlobalData
GlobalData::audioBitRate	core/inc/common.h	/^    int audioBitRate;$/;"	m	struct:GlobalData	access:public
GlobalData::audioChannels	core/inc/common.h	/^    int audioChannels;$/;"	m	struct:GlobalData	access:public
GlobalData::audioFlag	core/inc/common.h	/^    BOOL audioFlag[MAX_VIDEO_CHANNEL];   \/\/ indicate which channel need send audio$/;"	m	struct:GlobalData	access:public
GlobalData::bitrate	core/inc/common.h	/^    int  bitrate;               \/\/ bitrate$/;"	m	struct:GlobalData	access:public
GlobalData::bitsPerSample	core/inc/common.h	/^    int bitsPerSample;$/;"	m	struct:GlobalData	access:public
GlobalData::mutex	core/inc/common.h	/^    pthread_mutex_t mutex;               \/\/ Mutex to protect the global data $/;"	m	struct:GlobalData	access:public
GlobalData::quit	core/inc/common.h	/^    int  quit;                  \/\/ Global quit flag$/;"	m	struct:GlobalData	access:public
GlobalData::resolution	core/inc/common.h	/^    int  resolution;            \/\/ Video resolution CIF or D1$/;"	m	struct:GlobalData	access:public
GlobalData::sampleRate	core/inc/common.h	/^    int sampleRate;$/;"	m	struct:GlobalData	access:public
GlobalData::storePath	core/inc/common.h	/^    char storePath[STORAGE_PATH_LEN]; \/\/ storage path$/;"	m	struct:GlobalData	access:public
GlobalData::sysmode	core/inc/common.h	/^    int  sysmode;               \/\/ sys mode PAL or NTSC$/;"	m	struct:GlobalData	access:public
GlobalData::videoChannels	core/inc/common.h	/^	int  videoChannels;$/;"	m	struct:GlobalData	access:public
GlobalData::videoFlag	core/inc/common.h	/^    BOOL videoFlag[MAX_VIDEO_CHANNEL];   \/\/ indicate which channel need send video$/;"	m	struct:GlobalData	access:public
HAVE_DLFCN_H	utils/ortp/src/ortp-config.h	8;"	d
HAVE_FCNTL_H	utils/ortp/src/ortp-config.h	11;"	d
HAVE_INTTYPES_H	utils/ortp/src/ortp-config.h	14;"	d
HAVE_LINUX_SOUNDCARD_H	utils/ortp/src/ortp-config.h	17;"	d
HAVE_MEMORY_H	utils/ortp/src/ortp-config.h	20;"	d
HAVE_POLL_H	utils/ortp/src/ortp-config.h	23;"	d
HAVE_SELECT	utils/ortp/src/ortp-config.h	26;"	d
HAVE_SETEUID	utils/ortp/src/ortp-config.h	29;"	d
HAVE_SOCKET	utils/ortp/src/ortp-config.h	32;"	d
HAVE_STDINT_H	utils/ortp/src/ortp-config.h	35;"	d
HAVE_STDLIB_H	utils/ortp/src/ortp-config.h	38;"	d
HAVE_STRERROR	utils/ortp/src/ortp-config.h	41;"	d
HAVE_STRINGS_H	utils/ortp/src/ortp-config.h	44;"	d
HAVE_STRING_H	utils/ortp/src/ortp-config.h	47;"	d
HAVE_SYS_POLL_H	utils/ortp/src/ortp-config.h	53;"	d
HAVE_SYS_STAT_H	utils/ortp/src/ortp-config.h	56;"	d
HAVE_SYS_TIME_H	utils/ortp/src/ortp-config.h	59;"	d
HAVE_SYS_TYPES_H	utils/ortp/src/ortp-config.h	62;"	d
HAVE_SYS_UIO_H	utils/ortp/src/ortp-config.h	65;"	d
HAVE_UNISTD_H	utils/ortp/src/ortp-config.h	68;"	d
HextoDec	utils/osa/src/osa.c	/^static int HextoDec(char *hex, int l)$/;"	f	file:	signature:(char *hex, int l)
IMAGE_SIZE_MATRIX	core/inc/common.h	/^static int IMAGE_SIZE_MATRIX[4][2] = $/;"	v
INT_TO_POINTER	utils/ortp/src/utils.h	55;"	d
IPMAXLEN	utils/ortp/inc/ortp/rtp.h	26;"	d
Int16	utils/osa/inc/osa.h	/^typedef short Int16;                   \/\/\/< Signed 16-bit integer$/;"	t
Int32	utils/osa/inc/osa.h	/^typedef int Int32;                     \/\/\/< Signed 32-bit integer$/;"	t
Int64	utils/osa/inc/osa.h	/^typedef long long Int64;               \/\/\/< Signed 64-bit integer$/;"	t
Int8	utils/osa/inc/osa.h	/^typedef char Int8;                     \/\/\/< Signed  8-bit integer$/;"	t
JC_BETA	utils/ortp/src/jitterctl.c	33;"	d	file:
JC_GAMMA	utils/ortp/src/jitterctl.c	34;"	d	file:
JITTERCTL_H	utils/ortp/src/jitterctl.h	28;"	d
JitterControl	utils/ortp/inc/ortp/rtpsession.h	/^} JitterControl;$/;"	t	typeref:struct:_JitterControl
KB	utils/osa/inc/osa.h	45;"	d
LOCAL_TCP_PORT	network/inc/server.h	6;"	d
ListenPort	network/inc/command.h	/^		}ListenPort;$/;"	m	union:_ServerPack::__anon1	typeref:struct:_ServerPack::__anon1::__anon2	access:public
MANUAL_TEST_DELAY	utils/osa/src/osa_test.c	6;"	d	file:
MAX	utils/ortp/src/utils.h	48;"	d
MAX_CLIENT_NUM	core/src/session.c	13;"	d	file:
MAX_FILENAME_LEN	core/src/videoEncode.c	10;"	d	file:
MAX_IOV	utils/ortp/src/rtpsession.c	720;"	d	file:
MAX_IP_ADDR_LEN	network/inc/command.h	25;"	d
MAX_PACKET_SIZE	network/inc/command.h	28;"	d
MAX_PTZ_CMD_LEN	network/inc/command.h	37;"	d
MAX_SESSION_NUM	utils/com/inc/rtpsend.h	29;"	d
MAX_VIDEO_BUFFER_LEN	core/src/videoEncode.c	9;"	d	file:
MAX_VIDEO_CHANNEL	core/inc/common.h	44;"	d
MB	utils/osa/inc/osa.h	49;"	d
MIME_TYPE	utils/ortp/src/avprofile.c	40;"	d	file:
MIME_TYPE	utils/ortp/src/avprofile.c	51;"	d	file:
MIN	utils/ortp/src/utils.h	45;"	d
NORMAL_BITRATE	utils/ortp/src/avprofile.c	39;"	d	file:
NORMAL_BITRATE	utils/ortp/src/avprofile.c	50;"	d	file:
NUM_OF_THREADS	core/src/main.c	12;"	d	file:
OList	utils/ortp/src/utils.h	/^typedef struct _OList OList;$/;"	t	typeref:struct:_OList
ORTP_DEBUG	utils/ortp/inc/ortp/ortp.h	/^	ORTP_DEBUG=1,$/;"	e	enum:__anon15
ORTP_DEBUG	utils/ortp/src/ortp.h	/^	ORTP_DEBUG=1,$/;"	e	enum:__anon17
ORTP_ERROR	utils/ortp/inc/ortp/ortp.h	/^	ORTP_ERROR=1<<3,$/;"	e	enum:__anon15
ORTP_ERROR	utils/ortp/src/ortp.h	/^	ORTP_ERROR=1<<3,$/;"	e	enum:__anon17
ORTP_FATAL	utils/ortp/inc/ortp/ortp.h	/^	ORTP_FATAL=1<<4,$/;"	e	enum:__anon15
ORTP_FATAL	utils/ortp/src/ortp.h	/^	ORTP_FATAL=1<<4,$/;"	e	enum:__anon17
ORTP_FD_CLR	utils/ortp/inc/ortp/sessionset.h	38;"	d
ORTP_FD_CLR	utils/ortp/inc/ortp/sessionset.h	56;"	d
ORTP_FD_ISSET	utils/ortp/inc/ortp/sessionset.h	39;"	d
ORTP_FD_ISSET	utils/ortp/inc/ortp/sessionset.h	57;"	d
ORTP_FD_SET	utils/ortp/inc/ortp/sessionset.h	37;"	d
ORTP_FD_SET	utils/ortp/inc/ortp/sessionset.h	55;"	d
ORTP_FD_ZERO	utils/ortp/inc/ortp/sessionset.h	40;"	d
ORTP_FD_ZERO	utils/ortp/inc/ortp/sessionset.h	48;"	d
ORTP_H	utils/ortp/inc/ortp/ortp.h	22;"	d
ORTP_H	utils/ortp/src/ortp.h	22;"	d
ORTP_LOGLEV_END	utils/ortp/inc/ortp/ortp.h	/^	ORTP_LOGLEV_END=1<<5$/;"	e	enum:__anon15
ORTP_LOGLEV_END	utils/ortp/src/ortp.h	/^	ORTP_LOGLEV_END=1<<5$/;"	e	enum:__anon17
ORTP_MAJOR_VERSION	utils/ortp/src/ortp-config.h	74;"	d
ORTP_MESSAGE	utils/ortp/inc/ortp/ortp.h	/^	ORTP_MESSAGE=1<<1,$/;"	e	enum:__anon15
ORTP_MESSAGE	utils/ortp/src/ortp.h	/^	ORTP_MESSAGE=1<<1,$/;"	e	enum:__anon17
ORTP_MICRO_VERSION	utils/ortp/src/ortp-config.h	77;"	d
ORTP_MINOR_VERSION	utils/ortp/src/ortp-config.h	80;"	d
ORTP_PORT_H	utils/ortp/inc/ortp/port.h	15;"	d
ORTP_SESSION_THR	core/src/main.c	13;"	d	file:
ORTP_VERSION	utils/ortp/src/ortp-config.h	83;"	d
ORTP_WARNING	utils/ortp/inc/ortp/ortp.h	/^	ORTP_WARNING=1<<2,$/;"	e	enum:__anon15
ORTP_WARNING	utils/ortp/src/ortp.h	/^	ORTP_WARNING=1<<2,$/;"	e	enum:__anon17
ORTP__FDELT	utils/ortp/inc/ortp/sessionset.h	70;"	d
ORTP__FDMASK	utils/ortp/inc/ortp/sessionset.h	71;"	d
ORTP__FDS_BITS	utils/ortp/inc/ortp/sessionset.h	78;"	d
ORTP__FD_SETSIZE	utils/ortp/inc/ortp/sessionset.h	66;"	d
ORTP__NFDBITS	utils/ortp/inc/ortp/sessionset.h	69;"	d
OSA_BUF_ID_INVALID	utils/osa/inc/osa_buf.h	11;"	d
OSA_BUF_NUM_MAX	utils/osa/inc/osa_buf.h	9;"	d
OSA_BufCreate	utils/osa/inc/osa_buf.h	/^} OSA_BufCreate;$/;"	t	typeref:struct:__anon28
OSA_BufHndl	utils/osa/inc/osa_buf.h	/^} OSA_BufHndl;$/;"	t	typeref:struct:__anon27
OSA_BufInfo	utils/osa/inc/osa_buf.h	/^} OSA_BufInfo;$/;"	t	typeref:struct:__anon26
OSA_DEBUG	utils/osa/inc/osa_debug.h	19;"	d
OSA_DEBUG	utils/osa/inc/osa_debug.h	31;"	d
OSA_DEBUG_FILE	utils/osa/inc/osa.h	12;"	d
OSA_DEBUG_MODE	utils/osa/inc/osa.h	11;"	d
OSA_DEBUG_WAIT	utils/osa/inc/osa_debug.h	23;"	d
OSA_DEBUG_WAIT	utils/osa/inc/osa_debug.h	32;"	d
OSA_EFAIL	utils/osa/inc/osa.h	16;"	d
OSA_ERROR	utils/osa/inc/osa_debug.h	38;"	d
OSA_FLG_MODE_AND	utils/osa/inc/osa_flg.h	17;"	d
OSA_FLG_MODE_AND_CLR	utils/osa/inc/osa_flg.h	21;"	d
OSA_FLG_MODE_CLR	utils/osa/inc/osa_flg.h	19;"	d
OSA_FLG_MODE_OR	utils/osa/inc/osa_flg.h	18;"	d
OSA_FLG_MODE_OR_CLR	utils/osa/inc/osa_flg.h	22;"	d
OSA_FlgHndl	utils/osa/inc/osa_flg.h	/^} OSA_FlgHndl;$/;"	t	typeref:struct:__anon23
OSA_IPC_FLAG_CREATE	utils/osa/inc/osa_ipc.h	8;"	d
OSA_IPC_FLAG_OPEN	utils/osa/inc/osa_ipc.h	7;"	d
OSA_IPC_KEY_INVALID	utils/osa/inc/osa_ipc.h	10;"	d
OSA_IPC_MBX_MSG_SIZE_MAX	utils/osa/inc/osa_ipc.h	12;"	d
OSA_IPC_MBX_MSG_TYPE_ID	utils/osa/src/osa_ipc.c	8;"	d	file:
OSA_IPC_SEM_MEMBERS_MAX	utils/osa/src/osa_ipc.c	9;"	d	file:
OSA_IpcMbxHndl	utils/osa/inc/osa_ipc.h	/^} OSA_IpcMbxHndl;$/;"	t	typeref:struct:__anon19
OSA_IpcMsgHndl	utils/osa/inc/osa_ipc.h	/^} OSA_IpcMsgHndl;$/;"	t	typeref:struct:__anon21
OSA_IpcSemHndl	utils/osa/inc/osa_ipc.h	/^} OSA_IpcSemHndl;$/;"	t	typeref:struct:__anon20
OSA_IpcShmHndl	utils/osa/inc/osa_ipc.h	/^} OSA_IpcShmHndl;$/;"	t	typeref:struct:__anon18
OSA_MBX_BROADCAST_MAX	utils/osa/inc/osa_mbx.h	11;"	d
OSA_MBX_FREE_PRM	utils/osa/inc/osa_mbx.h	9;"	d
OSA_MBX_WAIT_ACK	utils/osa/inc/osa_mbx.h	8;"	d
OSA_MSGQ_LEN_MAX	utils/osa/inc/osa_msgq.h	8;"	d
OSA_MbxHndl	utils/osa/inc/osa_mbx.h	/^} OSA_MbxHndl;$/;"	t	typeref:struct:__anon29
OSA_MsgHndl	utils/osa/inc/osa_msgq.h	/^typedef struct OSA_MsgHndl {$/;"	s
OSA_MsgHndl	utils/osa/inc/osa_msgq.h	/^} OSA_MsgHndl;$/;"	t	typeref:struct:OSA_MsgHndl
OSA_MsgHndl::cmd	utils/osa/inc/osa_msgq.h	/^  Uint16        cmd;$/;"	m	struct:OSA_MsgHndl	access:public
OSA_MsgHndl::flags	utils/osa/inc/osa_msgq.h	/^  Uint16        flags;$/;"	m	struct:OSA_MsgHndl	access:public
OSA_MsgHndl::pFrom	utils/osa/inc/osa_msgq.h	/^  OSA_MsgqHndl *pFrom;  $/;"	m	struct:OSA_MsgHndl	access:public
OSA_MsgHndl::pPrm	utils/osa/inc/osa_msgq.h	/^  void         *pPrm;$/;"	m	struct:OSA_MsgHndl	access:public
OSA_MsgHndl::pTo	utils/osa/inc/osa_msgq.h	/^  OSA_MsgqHndl *pTo;$/;"	m	struct:OSA_MsgHndl	access:public
OSA_MsgHndl::status	utils/osa/inc/osa_msgq.h	/^  int           status;$/;"	m	struct:OSA_MsgHndl	access:public
OSA_MsgqHndl	utils/osa/inc/osa_msgq.h	/^} OSA_MsgqHndl;$/;"	t	typeref:struct:__anon30
OSA_MutexHndl	utils/osa/inc/osa_mutex.h	/^} OSA_MutexHndl;$/;"	t	typeref:struct:__anon25
OSA_PRF_ENABLE	utils/osa/inc/osa.h	13;"	d
OSA_PRF_PRINT_ALL	utils/osa/inc/osa_prf.h	10;"	d
OSA_PRF_PRINT_COUNT	utils/osa/inc/osa_prf.h	15;"	d
OSA_PRF_PRINT_DEFAULT	utils/osa/inc/osa_prf.h	8;"	d
OSA_PRF_PRINT_MIN_MAX	utils/osa/inc/osa_prf.h	14;"	d
OSA_PRF_PRINT_TIME	utils/osa/inc/osa_prf.h	12;"	d
OSA_PRF_PRINT_VALUE	utils/osa/inc/osa_prf.h	13;"	d
OSA_PrfHndl	utils/osa/inc/osa_prf.h	/^} OSA_PrfHndl;$/;"	t	typeref:struct:__anon32
OSA_PrfHndl	utils/osa/inc/osa_prf.h	/^} OSA_PrfHndl;$/;"	t	typeref:struct:__anon33
OSA_QueHndl	utils/osa/inc/osa_que.h	/^} OSA_QueHndl;$/;"	t	typeref:struct:__anon31
OSA_SOK	utils/osa/inc/osa.h	15;"	d
OSA_SemHndl	utils/osa/inc/osa_sem.h	/^} OSA_SemHndl;$/;"	t	typeref:struct:__anon22
OSA_TEST_AutoTestRun	utils/osa/src/osa_test.c	/^int OSA_TEST_AutoTestRun()$/;"	f
OSA_TEST_AutoTestRun	utils/osa/src/osa_test.c	/^int OSA_TEST_AutoTestRun();$/;"	p	file:
OSA_TEST_CMD__INIT	utils/osa/src/osa_test.c	12;"	d	file:
OSA_TEST_CMD__PAUSE	utils/osa/src/osa_test.c	15;"	d	file:
OSA_TEST_CMD__RESUME	utils/osa/src/osa_test.c	16;"	d	file:
OSA_TEST_CMD__START	utils/osa/src/osa_test.c	13;"	d	file:
OSA_TEST_CMD__STOP	utils/osa/src/osa_test.c	14;"	d	file:
OSA_TEST_Exit	utils/osa/src/osa_test.c	/^int OSA_TEST_Exit()$/;"	f
OSA_TEST_Exit	utils/osa/src/osa_test.c	/^int OSA_TEST_Exit();$/;"	p	file:
OSA_TEST_GetInput	utils/osa/src/osa_test.c	/^char OSA_TEST_GetInput() $/;"	f
OSA_TEST_GetInput	utils/osa/src/osa_test.c	/^char OSA_TEST_GetInput();$/;"	p	file:
OSA_TEST_IPC_SEM_MAX_VALUE	utils/osa/src/osa_test_ipc.c	4;"	d	file:
OSA_TEST_Init	utils/osa/src/osa_test.c	/^int OSA_TEST_Init()$/;"	f
OSA_TEST_Init	utils/osa/src/osa_test.c	/^int OSA_TEST_Init();$/;"	p	file:
OSA_TEST_ManualTestRun	utils/osa/src/osa_test.c	/^int OSA_TEST_ManualTestRun()$/;"	f
OSA_TEST_ManualTestRun	utils/osa/src/osa_test.c	/^int OSA_TEST_ManualTestRun();$/;"	p	file:
OSA_TEST_PRC_STACK	utils/osa/src/osa_test.c	18;"	d	file:
OSA_TEST_PSEQ_Main	utils/osa/src/osa_test.c	/^int OSA_TEST_PSEQ_Main(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )$/;"	f	signature:(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )
OSA_TEST_PSEQ_Main	utils/osa/src/osa_test.c	/^int OSA_TEST_PSEQ_Main(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState );$/;"	p	file:	signature:(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )
OSA_TEST_PSEQ_Pause	utils/osa/src/osa_test.c	/^int OSA_TEST_PSEQ_Pause(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)
OSA_TEST_PSEQ_Resume	utils/osa/src/osa_test.c	/^int OSA_TEST_PSEQ_Resume(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)
OSA_TEST_PSEQ_Start	utils/osa/src/osa_test.c	/^int OSA_TEST_PSEQ_Start(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)
OSA_TEST_PSEQ_Stop	utils/osa/src/osa_test.c	/^int OSA_TEST_PSEQ_Stop(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)
OSA_TEST_PSTA_Main	utils/osa/src/osa_test.c	/^int OSA_TEST_PSTA_Main(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )$/;"	f	signature:(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )
OSA_TEST_PSTA_Main	utils/osa/src/osa_test.c	/^int OSA_TEST_PSTA_Main(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState );$/;"	p	file:	signature:(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )
OSA_TEST_PSTA_MainRun	utils/osa/src/osa_test.c	/^int OSA_TEST_PSTA_MainRun(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)
OSA_TEST_PSTB_Main	utils/osa/src/osa_test.c	/^int OSA_TEST_PSTB_Main(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )$/;"	f	signature:(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )
OSA_TEST_PSTB_Main	utils/osa/src/osa_test.c	/^int OSA_TEST_PSTB_Main(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState );$/;"	p	file:	signature:(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )
OSA_TEST_PSTB_MainRun	utils/osa/src/osa_test.c	/^int OSA_TEST_PSTB_MainRun(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)
OSA_TEST_PSTC_Main	utils/osa/src/osa_test.c	/^int OSA_TEST_PSTC_Main(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )$/;"	f	signature:(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )
OSA_TEST_PSTC_Main	utils/osa/src/osa_test.c	/^int OSA_TEST_PSTC_Main(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState );$/;"	p	file:	signature:(struct OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState )
OSA_TEST_PSTC_MainRun	utils/osa/src/osa_test.c	/^int OSA_TEST_PSTC_MainRun(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_MsgHndl *pMsg, Uint32 curState)
OSA_TEST_Pause	utils/osa/src/osa_test.c	/^int OSA_TEST_Pause()$/;"	f
OSA_TEST_Pause	utils/osa/src/osa_test.c	/^int OSA_TEST_Pause();$/;"	p	file:
OSA_TEST_Resume	utils/osa/src/osa_test.c	/^int OSA_TEST_Resume()$/;"	f
OSA_TEST_Resume	utils/osa/src/osa_test.c	/^int OSA_TEST_Resume();$/;"	p	file:
OSA_TEST_STATE__PAUSE	utils/osa/src/osa_test.c	10;"	d	file:
OSA_TEST_STATE__READY	utils/osa/src/osa_test.c	8;"	d	file:
OSA_TEST_STATE__RUN	utils/osa/src/osa_test.c	9;"	d	file:
OSA_TEST_SendCmdToPseq	utils/osa/src/osa_test.c	/^int OSA_TEST_SendCmdToPseq(Uint16 cmd, Uint32 delay) {$/;"	f	signature:(Uint16 cmd, Uint32 delay)
OSA_TEST_Start	utils/osa/src/osa_test.c	/^int OSA_TEST_Start(Uint32 delay)$/;"	f	signature:(Uint32 delay)
OSA_TEST_Start	utils/osa/src/osa_test.c	/^int OSA_TEST_Start(Uint32 delay);$/;"	p	file:	signature:(Uint32 delay)
OSA_TEST_Stop	utils/osa/src/osa_test.c	/^int OSA_TEST_Stop()$/;"	f
OSA_TEST_Stop	utils/osa/src/osa_test.c	/^int OSA_TEST_Stop();$/;"	p	file:
OSA_TEST_ipcClientMain	utils/osa/src/osa_test_ipc.c	/^int OSA_TEST_ipcClientMain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
OSA_TEST_ipcClientMain	utils/osa/src/osa_test_ipc.c	/^int OSA_TEST_ipcClientMain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
OSA_TEST_ipcServerMain	utils/osa/src/osa_test_ipc.c	/^int OSA_TEST_ipcServerMain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
OSA_TEST_ipcServerMain	utils/osa/src/osa_test_ipc.c	/^int OSA_TEST_ipcServerMain(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
OSA_TEST_showUsage	utils/osa/src/osa_test_ipc.c	/^void OSA_TEST_showUsage(char *name)$/;"	f	signature:(char *name)
OSA_THR_PRI_DEFAULT	utils/osa/inc/osa_thr.h	11;"	d
OSA_THR_PRI_MAX	utils/osa/inc/osa_thr.h	8;"	d
OSA_THR_PRI_MIN	utils/osa/inc/osa_thr.h	9;"	d
OSA_THR_STACK_SIZE_DEFAULT	utils/osa/inc/osa_thr.h	13;"	d
OSA_TIMEOUT_FOREVER	utils/osa/inc/osa.h	53;"	d
OSA_TIMEOUT_NONE	utils/osa/inc/osa.h	52;"	d
OSA_ThrEntryFunc	utils/osa/inc/osa_thr.h	/^typedef void * (*OSA_ThrEntryFunc)(void *);$/;"	t
OSA_ThrHndl	utils/osa/inc/osa_thr.h	/^} OSA_ThrHndl;$/;"	t	typeref:struct:__anon24
OSA_TskFncMain	utils/osa/inc/osa_tsk.h	/^typedef int (*OSA_TskFncMain)(struct OSA_TskHndl *pTsk, OSA_MsgHndl *pMsg, Uint32 curState );$/;"	t
OSA_TskHndl	utils/osa/inc/osa_tsk.h	/^typedef struct OSA_TskHndl {$/;"	s
OSA_TskHndl	utils/osa/inc/osa_tsk.h	/^} OSA_TskHndl;$/;"	t	typeref:struct:OSA_TskHndl
OSA_TskHndl::curState	utils/osa/inc/osa_tsk.h	/^  Uint32 curState;          \/\/\/< Task state as defined by user$/;"	m	struct:OSA_TskHndl	access:public
OSA_TskHndl::fncMain	utils/osa/inc/osa_tsk.h	/^  OSA_TskFncMain fncMain;   \/\/\/< Task Main, this function is entered when a message is received by the process$/;"	m	struct:OSA_TskHndl	access:public
OSA_TskHndl::mbxHndl	utils/osa/inc/osa_tsk.h	/^  OSA_MbxHndl mbxHndl;      \/\/\/< Mailbox handle$/;"	m	struct:OSA_TskHndl	access:public
OSA_TskHndl::thrHndl	utils/osa/inc/osa_tsk.h	/^  OSA_ThrHndl thrHndl;      \/\/\/< OS thread handle$/;"	m	struct:OSA_TskHndl	access:public
OSA_align	utils/osa/inc/osa.h	58;"	d
OSA_assert	utils/osa/inc/osa_debug.h	12;"	d
OSA_assert	utils/osa/inc/osa_debug.h	30;"	d
OSA_assertSuccess	utils/osa/inc/osa_debug.h	46;"	d
OSA_attachSignalHandler	utils/osa/inc/osa.h	/^int    OSA_attachSignalHandler(int sigId, void (*handler)(int ) );$/;"	p	signature:(int sigId, void (*handler)(int ) )
OSA_attachSignalHandler	utils/osa/src/osa.c	/^int OSA_attachSignalHandler(int sigId, void (*handler)(int ) )$/;"	f	signature:(int sigId, void (*handler)(int ) )
OSA_bufCreate	utils/osa/inc/osa_buf.h	/^int  OSA_bufCreate(OSA_BufHndl *hndl, OSA_BufCreate *bufInit);$/;"	p	signature:(OSA_BufHndl *hndl, OSA_BufCreate *bufInit)
OSA_bufCreate	utils/osa/src/osa_buf.c	/^int OSA_bufCreate(OSA_BufHndl *hndl, OSA_BufCreate *bufInit)$/;"	f	signature:(OSA_BufHndl *hndl, OSA_BufCreate *bufInit)
OSA_bufDelete	utils/osa/inc/osa_buf.h	/^int  OSA_bufDelete(OSA_BufHndl *hndl);$/;"	p	signature:(OSA_BufHndl *hndl)
OSA_bufDelete	utils/osa/src/osa_buf.c	/^int OSA_bufDelete(OSA_BufHndl *hndl)$/;"	f	signature:(OSA_BufHndl *hndl)
OSA_bufGetBufInfo	utils/osa/inc/osa_buf.h	/^OSA_BufInfo *OSA_bufGetBufInfo(OSA_BufHndl *hndl, int bufId);$/;"	p	signature:(OSA_BufHndl *hndl, int bufId)
OSA_bufGetBufInfo	utils/osa/src/osa_buf.c	/^OSA_BufInfo *OSA_bufGetBufInfo(OSA_BufHndl *hndl, int bufId)$/;"	f	signature:(OSA_BufHndl *hndl, int bufId)
OSA_bufGetEmpty	utils/osa/inc/osa_buf.h	/^int  OSA_bufGetEmpty(OSA_BufHndl *hndl, int *bufId, Uint32 timeout);$/;"	p	signature:(OSA_BufHndl *hndl, int *bufId, Uint32 timeout)
OSA_bufGetEmpty	utils/osa/src/osa_buf.c	/^int OSA_bufGetEmpty(OSA_BufHndl *hndl, int *bufId, Uint32 timeout)$/;"	f	signature:(OSA_BufHndl *hndl, int *bufId, Uint32 timeout)
OSA_bufGetFull	utils/osa/inc/osa_buf.h	/^int  OSA_bufGetFull(OSA_BufHndl *hndl, int *bufId, Uint32 timeout);$/;"	p	signature:(OSA_BufHndl *hndl, int *bufId, Uint32 timeout)
OSA_bufGetFull	utils/osa/src/osa_buf.c	/^int OSA_bufGetFull(OSA_BufHndl *hndl, int *bufId, Uint32 timeout)$/;"	f	signature:(OSA_BufHndl *hndl, int *bufId, Uint32 timeout)
OSA_bufPutEmpty	utils/osa/inc/osa_buf.h	/^int  OSA_bufPutEmpty(OSA_BufHndl *hndl, int bufId);$/;"	p	signature:(OSA_BufHndl *hndl, int bufId)
OSA_bufPutEmpty	utils/osa/src/osa_buf.c	/^int OSA_bufPutEmpty(OSA_BufHndl *hndl, int bufId)$/;"	f	signature:(OSA_BufHndl *hndl, int bufId)
OSA_bufPutFull	utils/osa/inc/osa_buf.h	/^int  OSA_bufPutFull(OSA_BufHndl *hndl, int bufId);$/;"	p	signature:(OSA_BufHndl *hndl, int bufId)
OSA_bufPutFull	utils/osa/src/osa_buf.c	/^int OSA_bufPutFull (OSA_BufHndl *hndl, int bufId)$/;"	f	signature:(OSA_BufHndl *hndl, int bufId)
OSA_bufSwitchEmpty	utils/osa/inc/osa_buf.h	/^int  OSA_bufSwitchEmpty(OSA_BufHndl *hndl, int *bufId);$/;"	p	signature:(OSA_BufHndl *hndl, int *bufId)
OSA_bufSwitchEmpty	utils/osa/src/osa_buf.c	/^int OSA_bufSwitchEmpty(OSA_BufHndl *hndl, int *bufId)$/;"	f	signature:(OSA_BufHndl *hndl, int *bufId)
OSA_bufSwitchFull	utils/osa/inc/osa_buf.h	/^int  OSA_bufSwitchFull (OSA_BufHndl *hndl, int *bufId);$/;"	p	signature:(OSA_BufHndl *hndl, int *bufId)
OSA_bufSwitchFull	utils/osa/src/osa_buf.c	/^int OSA_bufSwitchFull(OSA_BufHndl *hndl, int *bufId)$/;"	f	signature:(OSA_BufHndl *hndl, int *bufId)
OSA_ceil	utils/osa/inc/osa.h	61;"	d
OSA_fileReadFile	utils/osa/inc/osa_file.h	/^int OSA_fileReadFile(char *fileName, Uint8 *addr, Uint32 readSize, Uint32 *actualReadSize);$/;"	p	signature:(char *fileName, Uint8 *addr, Uint32 readSize, Uint32 *actualReadSize)
OSA_fileReadFile	utils/osa/src/osa_file.c	/^int OSA_fileReadFile(char *fileName, Uint8 *addr, Uint32 readSize, Uint32 *actualReadSize)$/;"	f	signature:(char *fileName, Uint8 *addr, Uint32 readSize, Uint32 *actualReadSize)
OSA_fileWriteFile	utils/osa/inc/osa_file.h	/^int OSA_fileWriteFile(char *fileName, Uint8 *addr, Uint32 size);$/;"	p	signature:(char *fileName, Uint8 *addr, Uint32 size)
OSA_fileWriteFile	utils/osa/src/osa_file.c	/^int OSA_fileWriteFile(char *fileName, Uint8 *addr, Uint32 size)$/;"	f	signature:(char *fileName, Uint8 *addr, Uint32 size)
OSA_flgClear	utils/osa/inc/osa_flg.h	/^int  OSA_flgClear(OSA_FlgHndl *hndl, Uint32 pattern);$/;"	p	signature:(OSA_FlgHndl *hndl, Uint32 pattern)
OSA_flgClear	utils/osa/src/osa_flg.c	/^int  OSA_flgClear(OSA_FlgHndl *hndl, Uint32 pattern)$/;"	f	signature:(OSA_FlgHndl *hndl, Uint32 pattern)
OSA_flgCreate	utils/osa/inc/osa_flg.h	/^int  OSA_flgCreate(OSA_FlgHndl *hndl, Uint32 initPattern);$/;"	p	signature:(OSA_FlgHndl *hndl, Uint32 initPattern)
OSA_flgCreate	utils/osa/src/osa_flg.c	/^int  OSA_flgCreate(OSA_FlgHndl *hndl, Uint32 initPattern)$/;"	f	signature:(OSA_FlgHndl *hndl, Uint32 initPattern)
OSA_flgDelete	utils/osa/inc/osa_flg.h	/^int  OSA_flgDelete(OSA_FlgHndl *hndl);$/;"	p	signature:(OSA_FlgHndl *hndl)
OSA_flgDelete	utils/osa/src/osa_flg.c	/^int  OSA_flgDelete(OSA_FlgHndl *hndl)$/;"	f	signature:(OSA_FlgHndl *hndl)
OSA_flgIsSet	utils/osa/inc/osa_flg.h	/^int  OSA_flgIsSet(OSA_FlgHndl *hndl, Uint32 pattern);$/;"	p	signature:(OSA_FlgHndl *hndl, Uint32 pattern)
OSA_flgIsSet	utils/osa/src/osa_flg.c	/^int OSA_flgIsSet(OSA_FlgHndl *hndl, Uint32 pattern)$/;"	f	signature:(OSA_FlgHndl *hndl, Uint32 pattern)
OSA_flgSet	utils/osa/inc/osa_flg.h	/^int  OSA_flgSet(OSA_FlgHndl *hndl, Uint32 pattern);$/;"	p	signature:(OSA_FlgHndl *hndl, Uint32 pattern)
OSA_flgSet	utils/osa/src/osa_flg.c	/^int  OSA_flgSet(OSA_FlgHndl *hndl, Uint32 pattern)$/;"	f	signature:(OSA_FlgHndl *hndl, Uint32 pattern)
OSA_flgWait	utils/osa/inc/osa_flg.h	/^int  OSA_flgWait(OSA_FlgHndl *hndl, Uint32 pattern, Uint32 mode, Uint32 timeout);$/;"	p	signature:(OSA_FlgHndl *hndl, Uint32 pattern, Uint32 mode, Uint32 timeout)
OSA_flgWait	utils/osa/src/osa_flg.c	/^int  OSA_flgWait(OSA_FlgHndl *hndl, Uint32 pattern, Uint32 mode, Uint32 timeout)$/;"	f	signature:(OSA_FlgHndl *hndl, Uint32 pattern, Uint32 mode, Uint32 timeout)
OSA_floor	utils/osa/inc/osa.h	60;"	d
OSA_getCurTimeInMsec	utils/osa/inc/osa.h	/^Uint32 OSA_getCurTimeInMsec();$/;"	p	signature:()
OSA_getCurTimeInMsec	utils/osa/src/osa.c	/^Uint32 OSA_getCurTimeInMsec()$/;"	f
OSA_ipcMakeKey	utils/osa/inc/osa_ipc.h	/^Uint32 OSA_ipcMakeKey(char *path, char id);$/;"	p	signature:(char *path, char id)
OSA_ipcMakeKey	utils/osa/src/osa_ipc.c	/^Uint32 OSA_ipcMakeKey(char *path, char id)$/;"	f	signature:(char *path, char id)
OSA_ipcMbxClose	utils/osa/inc/osa_ipc.h	/^int OSA_ipcMbxClose(OSA_IpcMbxHndl *hndl);$/;"	p	signature:(OSA_IpcMbxHndl *hndl)
OSA_ipcMbxClose	utils/osa/src/osa_ipc.c	/^int OSA_ipcMbxClose(OSA_IpcMbxHndl *hndl)$/;"	f	signature:(OSA_IpcMbxHndl *hndl)
OSA_ipcMbxOpen	utils/osa/inc/osa_ipc.h	/^int OSA_ipcMbxOpen(OSA_IpcMbxHndl *hndl, Uint32 key, Uint32 flags);$/;"	p	signature:(OSA_IpcMbxHndl *hndl, Uint32 key, Uint32 flags)
OSA_ipcMbxOpen	utils/osa/src/osa_ipc.c	/^int OSA_ipcMbxOpen(OSA_IpcMbxHndl *hndl, Uint32 key, Uint32 flags)$/;"	f	signature:(OSA_IpcMbxHndl *hndl, Uint32 key, Uint32 flags)
OSA_ipcMbxRecv	utils/osa/inc/osa_ipc.h	/^int OSA_ipcMbxRecv(OSA_IpcMbxHndl *hndl, OSA_IpcMsgHndl *msgData, Uint32 msgSize);$/;"	p	signature:(OSA_IpcMbxHndl *hndl, OSA_IpcMsgHndl *msgData, Uint32 msgSize)
OSA_ipcMbxRecv	utils/osa/src/osa_ipc.c	/^int OSA_ipcMbxRecv(OSA_IpcMbxHndl *hndl, OSA_IpcMsgHndl *msgData, Uint32 msgSize)$/;"	f	signature:(OSA_IpcMbxHndl *hndl, OSA_IpcMsgHndl *msgData, Uint32 msgSize)
OSA_ipcMbxSend	utils/osa/inc/osa_ipc.h	/^int OSA_ipcMbxSend(OSA_IpcMbxHndl *hndl, OSA_IpcMsgHndl *msgData, Uint32 msgSize);$/;"	p	signature:(OSA_IpcMbxHndl *hndl, OSA_IpcMsgHndl *msgData, Uint32 msgSize)
OSA_ipcMbxSend	utils/osa/src/osa_ipc.c	/^int OSA_ipcMbxSend(OSA_IpcMbxHndl *hndl, OSA_IpcMsgHndl *msgData, Uint32 msgSize)$/;"	f	signature:(OSA_IpcMbxHndl *hndl, OSA_IpcMsgHndl *msgData, Uint32 msgSize)
OSA_ipcSemClose	utils/osa/inc/osa_ipc.h	/^int OSA_ipcSemClose(OSA_IpcSemHndl *hndl);$/;"	p	signature:(OSA_IpcSemHndl *hndl)
OSA_ipcSemClose	utils/osa/src/osa_ipc.c	/^int OSA_ipcSemClose(OSA_IpcSemHndl *hndl)$/;"	f	signature:(OSA_IpcSemHndl *hndl)
OSA_ipcSemGetVal	utils/osa/inc/osa_ipc.h	/^int OSA_ipcSemGetVal(OSA_IpcSemHndl *hndl, Uint32 member);$/;"	p	signature:(OSA_IpcSemHndl *hndl, Uint32 member)
OSA_ipcSemGetVal	utils/osa/src/osa_ipc.c	/^int OSA_ipcSemGetVal(OSA_IpcSemHndl *hndl, Uint32 member)$/;"	f	signature:(OSA_IpcSemHndl *hndl, Uint32 member)
OSA_ipcSemLock	utils/osa/inc/osa_ipc.h	/^int OSA_ipcSemLock(OSA_IpcSemHndl *hndl, Uint32 member, Uint32 timeout);$/;"	p	signature:(OSA_IpcSemHndl *hndl, Uint32 member, Uint32 timeout)
OSA_ipcSemLock	utils/osa/src/osa_ipc.c	/^int OSA_ipcSemLock(OSA_IpcSemHndl *hndl, Uint32 member, Uint32 timeout)$/;"	f	signature:(OSA_IpcSemHndl *hndl, Uint32 member, Uint32 timeout)
OSA_ipcSemOpen	utils/osa/inc/osa_ipc.h	/^int OSA_ipcSemOpen(OSA_IpcSemHndl *hndl, Uint32 key, Uint32 members, Uint32 initVal, Uint32 maxVal, Uint32 flags);$/;"	p	signature:(OSA_IpcSemHndl *hndl, Uint32 key, Uint32 members, Uint32 initVal, Uint32 maxVal, Uint32 flags)
OSA_ipcSemOpen	utils/osa/src/osa_ipc.c	/^int OSA_ipcSemOpen(OSA_IpcSemHndl *hndl, Uint32 key, Uint32 members, Uint32 initVal, Uint32 maxVal, Uint32 flags)$/;"	f	signature:(OSA_IpcSemHndl *hndl, Uint32 key, Uint32 members, Uint32 initVal, Uint32 maxVal, Uint32 flags)
OSA_ipcSemUnlock	utils/osa/inc/osa_ipc.h	/^int OSA_ipcSemUnlock(OSA_IpcSemHndl *hndl, Uint32 member, Uint32 timeout);$/;"	p	signature:(OSA_IpcSemHndl *hndl, Uint32 member, Uint32 timeout)
OSA_ipcSemUnlock	utils/osa/src/osa_ipc.c	/^int OSA_ipcSemUnlock(OSA_IpcSemHndl *hndl, Uint32 member, Uint32 timeout)$/;"	f	signature:(OSA_IpcSemHndl *hndl, Uint32 member, Uint32 timeout)
OSA_ipcShmClose	utils/osa/inc/osa_ipc.h	/^int   OSA_ipcShmClose(OSA_IpcShmHndl *hndl);$/;"	p	signature:(OSA_IpcShmHndl *hndl)
OSA_ipcShmClose	utils/osa/src/osa_ipc.c	/^int   OSA_ipcShmClose(OSA_IpcShmHndl *hndl)$/;"	f	signature:(OSA_IpcShmHndl *hndl)
OSA_ipcShmOpen	utils/osa/inc/osa_ipc.h	/^char *OSA_ipcShmOpen(OSA_IpcShmHndl *hndl, Uint32 key, Uint32 size, Uint32 flags);$/;"	p	signature:(OSA_IpcShmHndl *hndl, Uint32 key, Uint32 size, Uint32 flags)
OSA_ipcShmOpen	utils/osa/src/osa_ipc.c	/^char *OSA_ipcShmOpen(OSA_IpcShmHndl *hndl, Uint32 key, Uint32 size, Uint32 flags)$/;"	f	signature:(OSA_IpcShmHndl *hndl, Uint32 key, Uint32 size, Uint32 flags)
OSA_ipcTestMain	utils/osa/src/osa_test_ipc.c	/^int OSA_ipcTestMain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
OSA_mbxAckOrFreeMsg	utils/osa/inc/osa_mbx.h	/^int OSA_mbxAckOrFreeMsg(OSA_MsgHndl *pMsg, int ackRetVal);$/;"	p	signature:(OSA_MsgHndl *pMsg, int ackRetVal)
OSA_mbxAckOrFreeMsg	utils/osa/src/osa_mbx.c	/^int OSA_mbxAckOrFreeMsg(OSA_MsgHndl *pMsg, int ackRetVal)$/;"	f	signature:(OSA_MsgHndl *pMsg, int ackRetVal)
OSA_mbxBroadcastMsg	utils/osa/inc/osa_mbx.h	/^int OSA_mbxBroadcastMsg(OSA_MbxHndl *pToList[], OSA_MbxHndl *pFrom, Uint16 cmd, void *pPrm, Uint16 flags);$/;"	p	signature:(OSA_MbxHndl *pToList[], OSA_MbxHndl *pFrom, Uint16 cmd, void *pPrm, Uint16 flags)
OSA_mbxBroadcastMsg	utils/osa/src/osa_mbx.c	/^int OSA_mbxBroadcastMsg(OSA_MbxHndl *pMbxToList[], OSA_MbxHndl *pMbxFrom, Uint16 cmd, void *pPrm, Uint16 flags)$/;"	f	signature:(OSA_MbxHndl *pMbxToList[], OSA_MbxHndl *pMbxFrom, Uint16 cmd, void *pPrm, Uint16 flags)
OSA_mbxCheckMsg	utils/osa/inc/osa_mbx.h	/^int OSA_mbxCheckMsg(OSA_MbxHndl *pHndl, OSA_MsgHndl **pMsg);$/;"	p	signature:(OSA_MbxHndl *pHndl, OSA_MsgHndl **pMsg)
OSA_mbxCheckMsg	utils/osa/src/osa_mbx.c	/^int OSA_mbxCheckMsg(OSA_MbxHndl *pMbxHndl, OSA_MsgHndl **pMsg)$/;"	f	signature:(OSA_MbxHndl *pMbxHndl, OSA_MsgHndl **pMsg)
OSA_mbxCreate	utils/osa/inc/osa_mbx.h	/^int OSA_mbxCreate(OSA_MbxHndl *pHndl);$/;"	p	signature:(OSA_MbxHndl *pHndl)
OSA_mbxCreate	utils/osa/src/osa_mbx.c	/^int OSA_mbxCreate(OSA_MbxHndl *pMbxHndl)$/;"	f	signature:(OSA_MbxHndl *pMbxHndl)
OSA_mbxDelete	utils/osa/inc/osa_mbx.h	/^int OSA_mbxDelete(OSA_MbxHndl *pHndl);$/;"	p	signature:(OSA_MbxHndl *pHndl)
OSA_mbxDelete	utils/osa/src/osa_mbx.c	/^int OSA_mbxDelete(OSA_MbxHndl *pMbxHndl)$/;"	f	signature:(OSA_MbxHndl *pMbxHndl)
OSA_mbxFlush	utils/osa/inc/osa_mbx.h	/^int OSA_mbxFlush(OSA_MbxHndl *pHndl);$/;"	p	signature:(OSA_MbxHndl *pHndl)
OSA_mbxFlush	utils/osa/src/osa_mbx.c	/^int OSA_mbxFlush(OSA_MbxHndl *pMbxHndl)$/;"	f	signature:(OSA_MbxHndl *pMbxHndl)
OSA_mbxFreeMsg	utils/osa/src/osa_mbx.c	/^int OSA_mbxFreeMsg(OSA_MsgHndl *pMsg)$/;"	f	signature:(OSA_MsgHndl *pMsg)
OSA_mbxSendMsg	utils/osa/inc/osa_mbx.h	/^int OSA_mbxSendMsg(OSA_MbxHndl *pTo, OSA_MbxHndl *pFrom, Uint16 cmd, void *pPrm, Uint16 flags);$/;"	p	signature:(OSA_MbxHndl *pTo, OSA_MbxHndl *pFrom, Uint16 cmd, void *pPrm, Uint16 flags)
OSA_mbxSendMsg	utils/osa/src/osa_mbx.c	/^int OSA_mbxSendMsg(OSA_MbxHndl *pMbxTo, OSA_MbxHndl *pMbxFrom, Uint16 cmd, void *pPrm, Uint16 flags)$/;"	f	signature:(OSA_MbxHndl *pMbxTo, OSA_MbxHndl *pMbxFrom, Uint16 cmd, void *pPrm, Uint16 flags)
OSA_mbxWaitCmd	utils/osa/inc/osa_mbx.h	/^int OSA_mbxWaitCmd(OSA_MbxHndl *pHndl, OSA_MsgHndl **pMsg, Uint16 waitCmd);$/;"	p	signature:(OSA_MbxHndl *pHndl, OSA_MsgHndl **pMsg, Uint16 waitCmd)
OSA_mbxWaitCmd	utils/osa/src/osa_mbx.c	/^int OSA_mbxWaitCmd(OSA_MbxHndl *pMbxHndl, OSA_MsgHndl **pMsg, Uint16 waitCmd)$/;"	f	signature:(OSA_MbxHndl *pMbxHndl, OSA_MsgHndl **pMsg, Uint16 waitCmd)
OSA_mbxWaitMsg	utils/osa/inc/osa_mbx.h	/^int OSA_mbxWaitMsg(OSA_MbxHndl *pHndl, OSA_MsgHndl **pMsg);$/;"	p	signature:(OSA_MbxHndl *pHndl, OSA_MsgHndl **pMsg)
OSA_mbxWaitMsg	utils/osa/src/osa_mbx.c	/^int OSA_mbxWaitMsg(OSA_MbxHndl *pMbxHndl, OSA_MsgHndl **pMsg)$/;"	f	signature:(OSA_MbxHndl *pMbxHndl, OSA_MsgHndl **pMsg)
OSA_memAlloc	utils/osa/inc/osa.h	55;"	d
OSA_memFree	utils/osa/inc/osa.h	56;"	d
OSA_msgGetAckStatus	utils/osa/inc/osa_msgq.h	40;"	d
OSA_msgGetCmd	utils/osa/inc/osa_msgq.h	38;"	d
OSA_msgGetPrm	utils/osa/inc/osa_msgq.h	39;"	d
OSA_msgqAllocMsgHndl	utils/osa/src/osa_msgq.c	/^OSA_MsgHndl *OSA_msgqAllocMsgHndl(OSA_MsgqHndl *to, OSA_MsgqHndl *from, Uint16 cmd, void *prm, Uint16 msgFlags)$/;"	f	signature:(OSA_MsgqHndl *to, OSA_MsgqHndl *from, Uint16 cmd, void *prm, Uint16 msgFlags)
OSA_msgqCreate	utils/osa/inc/osa_msgq.h	/^int OSA_msgqCreate(OSA_MsgqHndl *hndl);$/;"	p	signature:(OSA_MsgqHndl *hndl)
OSA_msgqCreate	utils/osa/src/osa_msgq.c	/^int OSA_msgqCreate(OSA_MsgqHndl *hndl)$/;"	f	signature:(OSA_MsgqHndl *hndl)
OSA_msgqDelete	utils/osa/inc/osa_msgq.h	/^int OSA_msgqDelete(OSA_MsgqHndl *hndl);$/;"	p	signature:(OSA_MsgqHndl *hndl)
OSA_msgqDelete	utils/osa/src/osa_msgq.c	/^int OSA_msgqDelete(OSA_MsgqHndl *hndl)$/;"	f	signature:(OSA_MsgqHndl *hndl)
OSA_msgqFreeMsgHndl	utils/osa/inc/osa_msgq.h	/^int OSA_msgqFreeMsgHndl(OSA_MsgHndl *msg);$/;"	p	signature:(OSA_MsgHndl *msg)
OSA_msgqFreeMsgHndl	utils/osa/src/osa_msgq.c	/^int OSA_msgqFreeMsgHndl(OSA_MsgHndl *msg)$/;"	f	signature:(OSA_MsgHndl *msg)
OSA_msgqRecvMsg	utils/osa/inc/osa_msgq.h	/^int OSA_msgqRecvMsg(OSA_MsgqHndl *hndl, OSA_MsgHndl **msg, Uint32 timeout);$/;"	p	signature:(OSA_MsgqHndl *hndl, OSA_MsgHndl **msg, Uint32 timeout)
OSA_msgqRecvMsg	utils/osa/src/osa_msgq.c	/^int OSA_msgqRecvMsg(OSA_MsgqHndl *hndl, OSA_MsgHndl **msg, Uint32 timeout)$/;"	f	signature:(OSA_MsgqHndl *hndl, OSA_MsgHndl **msg, Uint32 timeout)
OSA_msgqSend	utils/osa/src/osa_msgq.c	/^int OSA_msgqSend(OSA_MsgqHndl *hndl, OSA_MsgHndl *msg, Uint32 timeout)$/;"	f	signature:(OSA_MsgqHndl *hndl, OSA_MsgHndl *msg, Uint32 timeout)
OSA_msgqSendAck	utils/osa/inc/osa_msgq.h	/^int OSA_msgqSendAck(OSA_MsgHndl *msg, int ackRetVal);$/;"	p	signature:(OSA_MsgHndl *msg, int ackRetVal)
OSA_msgqSendAck	utils/osa/src/osa_msgq.c	/^int OSA_msgqSendAck(OSA_MsgHndl *msg, int ackRetVal)$/;"	f	signature:(OSA_MsgHndl *msg, int ackRetVal)
OSA_msgqSendMsg	utils/osa/inc/osa_msgq.h	/^int OSA_msgqSendMsg(OSA_MsgqHndl *to, OSA_MsgqHndl *from, Uint16 cmd, void *prm, Uint16 msgFlags, OSA_MsgHndl **msg);$/;"	p	signature:(OSA_MsgqHndl *to, OSA_MsgqHndl *from, Uint16 cmd, void *prm, Uint16 msgFlags, OSA_MsgHndl **msg)
OSA_msgqSendMsg	utils/osa/src/osa_msgq.c	/^int OSA_msgqSendMsg(OSA_MsgqHndl *to, OSA_MsgqHndl *from, Uint16 cmd, void *prm, Uint16 msgFlags, OSA_MsgHndl **msg)$/;"	f	signature:(OSA_MsgqHndl *to, OSA_MsgqHndl *from, Uint16 cmd, void *prm, Uint16 msgFlags, OSA_MsgHndl **msg)
OSA_mutexCreate	utils/osa/inc/osa_mutex.h	/^int OSA_mutexCreate(OSA_MutexHndl *hndl);$/;"	p	signature:(OSA_MutexHndl *hndl)
OSA_mutexCreate	utils/osa/src/osa_mutex.c	/^int OSA_mutexCreate(OSA_MutexHndl *hndl)$/;"	f	signature:(OSA_MutexHndl *hndl)
OSA_mutexDelete	utils/osa/inc/osa_mutex.h	/^int OSA_mutexDelete(OSA_MutexHndl *hndl);$/;"	p	signature:(OSA_MutexHndl *hndl)
OSA_mutexDelete	utils/osa/src/osa_mutex.c	/^int OSA_mutexDelete(OSA_MutexHndl *hndl)$/;"	f	signature:(OSA_MutexHndl *hndl)
OSA_mutexLock	utils/osa/inc/osa_mutex.h	/^int OSA_mutexLock(OSA_MutexHndl *hndl);$/;"	p	signature:(OSA_MutexHndl *hndl)
OSA_mutexLock	utils/osa/src/osa_mutex.c	/^int OSA_mutexLock(OSA_MutexHndl *hndl)$/;"	f	signature:(OSA_MutexHndl *hndl)
OSA_mutexUnlock	utils/osa/inc/osa_mutex.h	/^int OSA_mutexUnlock(OSA_MutexHndl *hndl);$/;"	p	signature:(OSA_MutexHndl *hndl)
OSA_mutexUnlock	utils/osa/src/osa_mutex.c	/^int OSA_mutexUnlock(OSA_MutexHndl *hndl)$/;"	f	signature:(OSA_MutexHndl *hndl)
OSA_prfBegin	utils/osa/inc/osa_prf.h	/^int OSA_prfBegin(OSA_PrfHndl *hndl);$/;"	p	signature:(OSA_PrfHndl *hndl)
OSA_prfBegin	utils/osa/inc/osa_prf.h	61;"	d
OSA_prfBegin	utils/osa/src/osa_prf.c	/^int OSA_prfBegin(OSA_PrfHndl *hndl)$/;"	f	signature:(OSA_PrfHndl *hndl)
OSA_prfEnd	utils/osa/inc/osa_prf.h	/^int OSA_prfEnd(OSA_PrfHndl *hndl, Uint32 value);$/;"	p	signature:(OSA_PrfHndl *hndl, Uint32 value)
OSA_prfEnd	utils/osa/inc/osa_prf.h	62;"	d
OSA_prfEnd	utils/osa/src/osa_prf.c	/^int OSA_prfEnd(OSA_PrfHndl *hndl, Uint32 value)$/;"	f	signature:(OSA_PrfHndl *hndl, Uint32 value)
OSA_prfPrint	utils/osa/inc/osa_prf.h	/^int OSA_prfPrint(OSA_PrfHndl *hndl, char *name, Uint32 flags);$/;"	p	signature:(OSA_PrfHndl *hndl, char *name, Uint32 flags)
OSA_prfPrint	utils/osa/inc/osa_prf.h	64;"	d
OSA_prfPrint	utils/osa/src/osa_prf.c	/^int OSA_prfPrint(OSA_PrfHndl *hndl, char *name, Uint32 flags)$/;"	f	signature:(OSA_PrfHndl *hndl, char *name, Uint32 flags)
OSA_prfReset	utils/osa/inc/osa_prf.h	/^int OSA_prfReset(OSA_PrfHndl *hndl);$/;"	p	signature:(OSA_PrfHndl *hndl)
OSA_prfReset	utils/osa/inc/osa_prf.h	63;"	d
OSA_prfReset	utils/osa/src/osa_prf.c	/^int OSA_prfReset(OSA_PrfHndl *hndl)$/;"	f	signature:(OSA_PrfHndl *hndl)
OSA_printf	utils/osa/inc/osa_debug.h	10;"	d
OSA_printf	utils/osa/inc/osa_debug.h	29;"	d
OSA_queCreate	utils/osa/inc/osa_que.h	/^int OSA_queCreate(OSA_QueHndl *hndl, Uint32 maxLen);$/;"	p	signature:(OSA_QueHndl *hndl, Uint32 maxLen)
OSA_queCreate	utils/osa/src/osa_que.c	/^int OSA_queCreate(OSA_QueHndl *hndl, Uint32 maxLen)$/;"	f	signature:(OSA_QueHndl *hndl, Uint32 maxLen)
OSA_queDelete	utils/osa/inc/osa_que.h	/^int OSA_queDelete(OSA_QueHndl *hndl);$/;"	p	signature:(OSA_QueHndl *hndl)
OSA_queDelete	utils/osa/src/osa_que.c	/^int OSA_queDelete(OSA_QueHndl *hndl)$/;"	f	signature:(OSA_QueHndl *hndl)
OSA_queGet	utils/osa/inc/osa_que.h	/^int OSA_queGet(OSA_QueHndl *hndl, Int32 *value, Uint32 timeout);$/;"	p	signature:(OSA_QueHndl *hndl, Int32 *value, Uint32 timeout)
OSA_queGet	utils/osa/src/osa_que.c	/^int OSA_queGet(OSA_QueHndl *hndl, Int32 *value, Uint32 timeout)$/;"	f	signature:(OSA_QueHndl *hndl, Int32 *value, Uint32 timeout)
OSA_quePut	utils/osa/inc/osa_que.h	/^int OSA_quePut(OSA_QueHndl *hndl, Int32  value, Uint32 timeout);$/;"	p	signature:(OSA_QueHndl *hndl, Int32 value, Uint32 timeout)
OSA_quePut	utils/osa/src/osa_que.c	/^int OSA_quePut(OSA_QueHndl *hndl, Int32 value, Uint32 timeout)$/;"	f	signature:(OSA_QueHndl *hndl, Int32 value, Uint32 timeout)
OSA_semCreate	utils/osa/inc/osa_sem.h	/^int OSA_semCreate(OSA_SemHndl *hndl, Uint32 maxCount, Uint32 initVal);$/;"	p	signature:(OSA_SemHndl *hndl, Uint32 maxCount, Uint32 initVal)
OSA_semCreate	utils/osa/src/osa_sem.c	/^int OSA_semCreate(OSA_SemHndl *hndl, Uint32 maxCount, Uint32 initVal)$/;"	f	signature:(OSA_SemHndl *hndl, Uint32 maxCount, Uint32 initVal)
OSA_semDelete	utils/osa/inc/osa_sem.h	/^int OSA_semDelete(OSA_SemHndl *hndl);$/;"	p	signature:(OSA_SemHndl *hndl)
OSA_semDelete	utils/osa/src/osa_sem.c	/^int OSA_semDelete(OSA_SemHndl *hndl)$/;"	f	signature:(OSA_SemHndl *hndl)
OSA_semSignal	utils/osa/inc/osa_sem.h	/^int OSA_semSignal(OSA_SemHndl *hndl);$/;"	p	signature:(OSA_SemHndl *hndl)
OSA_semSignal	utils/osa/src/osa_sem.c	/^int OSA_semSignal(OSA_SemHndl *hndl)$/;"	f	signature:(OSA_SemHndl *hndl)
OSA_semWait	utils/osa/inc/osa_sem.h	/^int OSA_semWait(OSA_SemHndl *hndl, Uint32 timeout);$/;"	p	signature:(OSA_SemHndl *hndl, Uint32 timeout)
OSA_semWait	utils/osa/src/osa_sem.c	/^int OSA_semWait(OSA_SemHndl *hndl, Uint32 timeout)$/;"	f	signature:(OSA_SemHndl *hndl, Uint32 timeout)
OSA_thrChangePri	utils/osa/inc/osa_thr.h	/^int OSA_thrChangePri(OSA_ThrHndl *hndl, Uint32 pri);$/;"	p	signature:(OSA_ThrHndl *hndl, Uint32 pri)
OSA_thrChangePri	utils/osa/src/osa_thr.c	/^int OSA_thrChangePri(OSA_ThrHndl *hndl, Uint32 pri)$/;"	f	signature:(OSA_ThrHndl *hndl, Uint32 pri)
OSA_thrCreate	utils/osa/inc/osa_thr.h	/^int OSA_thrCreate(OSA_ThrHndl *hndl, OSA_ThrEntryFunc entryFunc, Uint32 pri, Uint32 stackSize, void *prm);$/;"	p	signature:(OSA_ThrHndl *hndl, OSA_ThrEntryFunc entryFunc, Uint32 pri, Uint32 stackSize, void *prm)
OSA_thrCreate	utils/osa/src/osa_thr.c	/^int OSA_thrCreate(OSA_ThrHndl *hndl, OSA_ThrEntryFunc entryFunc, Uint32 pri, Uint32 stackSize, void *prm)$/;"	f	signature:(OSA_ThrHndl *hndl, OSA_ThrEntryFunc entryFunc, Uint32 pri, Uint32 stackSize, void *prm)
OSA_thrDelete	utils/osa/inc/osa_thr.h	/^int OSA_thrDelete(OSA_ThrHndl *hndl);$/;"	p	signature:(OSA_ThrHndl *hndl)
OSA_thrDelete	utils/osa/src/osa_thr.c	/^int OSA_thrDelete(OSA_ThrHndl *hndl)$/;"	f	signature:(OSA_ThrHndl *hndl)
OSA_thrExit	utils/osa/inc/osa_thr.h	/^int OSA_thrExit(void *returnVal);$/;"	p	signature:(void *returnVal)
OSA_thrExit	utils/osa/src/osa_thr.c	/^int OSA_thrExit(void *returnVal)$/;"	f	signature:(void *returnVal)
OSA_thrJoin	utils/osa/inc/osa_thr.h	/^int OSA_thrJoin(OSA_ThrHndl *hndl);$/;"	p	signature:(OSA_ThrHndl *hndl)
OSA_thrJoin	utils/osa/src/osa_thr.c	/^int OSA_thrJoin(OSA_ThrHndl *hndl)$/;"	f	signature:(OSA_ThrHndl *hndl)
OSA_tskAckOrFreeMsg	utils/osa/inc/osa_tsk.h	/^int OSA_tskAckOrFreeMsg(OSA_MsgHndl *pMsg, int ackRetVal);$/;"	p	signature:(OSA_MsgHndl *pMsg, int ackRetVal)
OSA_tskAckOrFreeMsg	utils/osa/src/osa_tsk.c	/^int OSA_tskAckOrFreeMsg(OSA_MsgHndl *pMsg, int ackRetVal)$/;"	f	signature:(OSA_MsgHndl *pMsg, int ackRetVal)
OSA_tskBroadcastMsg	utils/osa/inc/osa_tsk.h	/^int OSA_tskBroadcastMsg(OSA_TskHndl *pTskToList[], OSA_TskHndl *pTskFrom, Uint16 cmd, void *pPrm, Uint16 flags);$/;"	p	signature:(OSA_TskHndl *pTskToList[], OSA_TskHndl *pTskFrom, Uint16 cmd, void *pPrm, Uint16 flags)
OSA_tskBroadcastMsg	utils/osa/src/osa_tsk.c	/^int OSA_tskBroadcastMsg(OSA_TskHndl *pPrcToList[], OSA_TskHndl *pPrcFrom, Uint16 cmd, void *pPrm, Uint16 flags)$/;"	f	signature:(OSA_TskHndl *pPrcToList[], OSA_TskHndl *pPrcFrom, Uint16 cmd, void *pPrm, Uint16 flags)
OSA_tskCheckMsg	utils/osa/inc/osa_tsk.h	/^int OSA_tskCheckMsg(OSA_TskHndl *pTsk, OSA_MsgHndl **pMsg);$/;"	p	signature:(OSA_TskHndl *pTsk, OSA_MsgHndl **pMsg)
OSA_tskCheckMsg	utils/osa/src/osa_tsk.c	/^int OSA_tskCheckMsg(OSA_TskHndl *pPrc, OSA_MsgHndl **pMsg)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_MsgHndl **pMsg)
OSA_tskCreate	utils/osa/inc/osa_tsk.h	/^int OSA_tskCreate(OSA_TskHndl *pTsk, OSA_TskFncMain fncMain, Uint32 tskPri, Uint32 tskStackSize, Uint32 initState);$/;"	p	signature:(OSA_TskHndl *pTsk, OSA_TskFncMain fncMain, Uint32 tskPri, Uint32 tskStackSize, Uint32 initState)
OSA_tskCreate	utils/osa/src/osa_tsk.c	/^int OSA_tskCreate(OSA_TskHndl *pPrc, OSA_TskFncMain fncMain, Uint32 tskPri, Uint32 tskStackSize, Uint32 initState)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_TskFncMain fncMain, Uint32 tskPri, Uint32 tskStackSize, Uint32 initState)
OSA_tskDelete	utils/osa/inc/osa_tsk.h	/^int OSA_tskDelete(OSA_TskHndl *pTsk);$/;"	p	signature:(OSA_TskHndl *pTsk)
OSA_tskDelete	utils/osa/src/osa_tsk.c	/^int OSA_tskDelete(OSA_TskHndl *pPrc)$/;"	f	signature:(OSA_TskHndl *pPrc)
OSA_tskFlushMsg	utils/osa/inc/osa_tsk.h	/^int OSA_tskFlushMsg(OSA_TskHndl *pTsk);$/;"	p	signature:(OSA_TskHndl *pTsk)
OSA_tskFlushMsg	utils/osa/src/osa_tsk.c	/^int OSA_tskFlushMsg(OSA_TskHndl *pPrc)$/;"	f	signature:(OSA_TskHndl *pPrc)
OSA_tskGetState	utils/osa/inc/osa_tsk.h	/^Uint32 OSA_tskGetState(OSA_TskHndl *pPrc);$/;"	p	signature:(OSA_TskHndl *pPrc)
OSA_tskGetState	utils/osa/src/osa_tsk.c	/^Uint32 OSA_tskGetState(OSA_TskHndl *pPrc)$/;"	f	signature:(OSA_TskHndl *pPrc)
OSA_tskSendMsg	utils/osa/inc/osa_tsk.h	/^int OSA_tskSendMsg(OSA_TskHndl *pTskTo, OSA_TskHndl *pTskFrom, Uint16 cmd, void *pPrm, Uint16 flags);$/;"	p	signature:(OSA_TskHndl *pTskTo, OSA_TskHndl *pTskFrom, Uint16 cmd, void *pPrm, Uint16 flags)
OSA_tskSendMsg	utils/osa/src/osa_tsk.c	/^int OSA_tskSendMsg(OSA_TskHndl *pPrcTo, OSA_TskHndl *pPrcFrom, Uint16 cmd, void *pPrm, Uint16 flags)$/;"	f	signature:(OSA_TskHndl *pPrcTo, OSA_TskHndl *pPrcFrom, Uint16 cmd, void *pPrm, Uint16 flags)
OSA_tskSetState	utils/osa/inc/osa_tsk.h	/^int    OSA_tskSetState(OSA_TskHndl *pPrc, Uint32 curState);$/;"	p	signature:(OSA_TskHndl *pPrc, Uint32 curState)
OSA_tskSetState	utils/osa/src/osa_tsk.c	/^int OSA_tskSetState(OSA_TskHndl *pPrc, Uint32 curState)$/;"	f	signature:(OSA_TskHndl *pPrc, Uint32 curState)
OSA_tskTestMain	utils/osa/src/osa_test.c	/^int OSA_tskTestMain(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
OSA_tskThrMain	utils/osa/src/osa_tsk.c	/^void *OSA_tskThrMain(void *pPrm)$/;"	f	signature:(void *pPrm)
OSA_tskWaitCmd	utils/osa/inc/osa_tsk.h	/^int OSA_tskWaitCmd(OSA_TskHndl *pTsk, OSA_MsgHndl **pMsg, Uint16 waitCmd);$/;"	p	signature:(OSA_TskHndl *pTsk, OSA_MsgHndl **pMsg, Uint16 waitCmd)
OSA_tskWaitCmd	utils/osa/src/osa_tsk.c	/^int OSA_tskWaitCmd(OSA_TskHndl *pPrc, OSA_MsgHndl **pMsg, Uint16 waitCmd)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_MsgHndl **pMsg, Uint16 waitCmd)
OSA_tskWaitMsg	utils/osa/inc/osa_tsk.h	/^int OSA_tskWaitMsg(OSA_TskHndl *pTsk, OSA_MsgHndl **pMsg);$/;"	p	signature:(OSA_TskHndl *pTsk, OSA_MsgHndl **pMsg)
OSA_tskWaitMsg	utils/osa/src/osa_tsk.c	/^int OSA_tskWaitMsg(OSA_TskHndl *pPrc, OSA_MsgHndl **pMsg)$/;"	f	signature:(OSA_TskHndl *pPrc, OSA_MsgHndl **pMsg)
OSA_waitMsecs	utils/osa/inc/osa.h	/^void   OSA_waitMsecs(Uint32 msecs);$/;"	p	signature:(Uint32 msecs)
OSA_waitMsecs	utils/osa/src/osa.c	/^void   OSA_waitMsecs(Uint32 msecs)$/;"	f	signature:(Uint32 msecs)
OrtpLogFunc	utils/ortp/inc/ortp/ortp.h	/^typedef void (*OrtpLogFunc)(OrtpLogLevel lev, const char *fmt, va_list args);$/;"	t
OrtpLogFunc	utils/ortp/src/ortp.h	/^typedef void (*OrtpLogFunc)(OrtpLogLevel lev, const char *fmt, va_list args);$/;"	t
OrtpLogLevel	utils/ortp/inc/ortp/ortp.h	/^} OrtpLogLevel;$/;"	t	typeref:enum:__anon15
OrtpLogLevel	utils/ortp/src/ortp.h	/^} OrtpLogLevel;$/;"	t	typeref:enum:__anon17
PACKAGE_BUGREPORT	utils/ortp/src/ortp-config.h	86;"	d
PACKAGE_NAME	utils/ortp/src/ortp-config.h	89;"	d
PACKAGE_STRING	utils/ortp/src/ortp-config.h	92;"	d
PACKAGE_TARNAME	utils/ortp/src/ortp-config.h	95;"	d
PACKAGE_VERSION	utils/ortp/src/ortp-config.h	98;"	d
PATTERN_LENGTH	utils/ortp/src/avprofile.c	38;"	d	file:
PATTERN_LENGTH	utils/ortp/src/avprofile.c	49;"	d	file:
PAUSE_FAILURE	utils/osa/inc/pause.h	50;"	d
PAUSE_SUCCESS	utils/osa/inc/pause.h	45;"	d
PAYLOADTYPE_H	utils/ortp/inc/ortp/payloadtype.h	21;"	d
PAYLOAD_AUDIO_CONTINUOUS	utils/ortp/inc/ortp/payloadtype.h	40;"	d
PAYLOAD_AUDIO_PACKETIZED	utils/ortp/inc/ortp/payloadtype.h	41;"	d
PAYLOAD_OTHER	utils/ortp/inc/ortp/payloadtype.h	43;"	d
PAYLOAD_TYPE_ALLOCATED	utils/ortp/inc/ortp/payloadtype.h	26;"	d
PAYLOAD_TYPE_AUDIO	utils/com/inc/rtpsend.h	26;"	d
PAYLOAD_TYPE_PRIV1	utils/ortp/inc/ortp/payloadtype.h	28;"	d
PAYLOAD_TYPE_PRIV2	utils/ortp/inc/ortp/payloadtype.h	29;"	d
PAYLOAD_TYPE_PRIV3	utils/ortp/inc/ortp/payloadtype.h	30;"	d
PAYLOAD_TYPE_USER_FLAG_0	utils/ortp/inc/ortp/payloadtype.h	32;"	d
PAYLOAD_TYPE_USER_FLAG_1	utils/ortp/inc/ortp/payloadtype.h	33;"	d
PAYLOAD_TYPE_USER_FLAG_2	utils/ortp/inc/ortp/payloadtype.h	34;"	d
PAYLOAD_TYPE_VIDEO	utils/com/inc/rtpsend.h	25;"	d
PAYLOAD_VIDEO	utils/ortp/inc/ortp/payloadtype.h	42;"	d
POINTER_TO_INT	utils/ortp/src/utils.h	56;"	d
POSIXTIMER_INTERVAL	utils/ortp/src/ortp-config.h	101;"	d
Parameters	network/inc/command.h	/^	}Parameters;$/;"	m	struct:_ReturnPack	typeref:union:_ReturnPack::__anon7	access:public
Parameters	network/inc/command.h	/^	}Parameters;$/;"	m	struct:_ServerPack	typeref:union:_ServerPack::__anon1	access:public
Pause_Handle	utils/osa/inc/pause.h	/^typedef Pause_Obj *Pause_Handle;$/;"	t
Pause_Obj	utils/osa/inc/pause.h	/^typedef struct Pause_Obj {$/;"	s
Pause_Obj	utils/osa/inc/pause.h	/^} Pause_Obj;$/;"	t	typeref:struct:Pause_Obj
Pause_Obj::cond	utils/osa/inc/pause.h	/^    pthread_cond_t  cond;$/;"	m	struct:Pause_Obj	access:public
Pause_Obj::mutex	utils/osa/inc/pause.h	/^    pthread_mutex_t mutex;$/;"	m	struct:Pause_Obj	access:public
Pause_Obj::pause	utils/osa/inc/pause.h	/^    int             pause;$/;"	m	struct:Pause_Obj	access:public
Pause_close	utils/osa/inc/pause.h	/^static inline void Pause_close(Pause_Handle hPause)$/;"	f	signature:(Pause_Handle hPause)
Pause_off	utils/osa/inc/pause.h	/^static inline void Pause_off(Pause_Handle hPause)$/;"	f	signature:(Pause_Handle hPause)
Pause_on	utils/osa/inc/pause.h	/^static inline void Pause_on(Pause_Handle hPause)$/;"	f	signature:(Pause_Handle hPause)
Pause_open	utils/osa/inc/pause.h	/^static inline void Pause_open(Pause_Handle hPause)$/;"	f	signature:(Pause_Handle hPause)
Pause_test	utils/osa/inc/pause.h	/^static inline void Pause_test(Pause_Handle hPause)$/;"	f	signature:(Pause_Handle hPause)
PayloadType	utils/ortp/inc/ortp/payloadtype.h	/^typedef struct _PayloadType PayloadType;$/;"	t	typeref:struct:_PayloadType
PayloadType_defined	utils/ortp/inc/ortp/payloadtype.h	58;"	d
PlayPort	network/inc/command.h	/^		}PlayPort;$/;"	m	union:_ServerPack::__anon1	typeref:struct:_ServerPack::__anon1::__anon3	access:public
R	utils/ortp/inc/ortp/telephonyevents.h	/^	uint32_t R:1;$/;"	m	struct:_telephone_event	access:public
RENDEZVOUS_FAILURE	utils/osa/inc/rendezvous.h	46;"	d
RENDEZVOUS_SUCCESS	utils/osa/inc/rendezvous.h	41;"	d
RETURN_PACK_LEN	network/inc/command.h	215;"	d
RTCP_APP	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_APP	= 204$/;"	e	enum:__anon12
RTCP_BYE	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_BYE	= 203,$/;"	e	enum:__anon12
RTCP_BYE_HEADER_SIZE	utils/ortp/inc/ortp/rtcp.h	142;"	d
RTCP_BYE_REASON_MAX_STRING_SIZE	utils/ortp/inc/ortp/rtcp.h	143;"	d
RTCP_COMMON_HEADER_SIZE	utils/ortp/inc/ortp/rtcp.h	30;"	d
RTCP_DEFAULT_REPORT_INTERVAL	utils/ortp/inc/ortp/rtcp.h	165;"	d
RTCP_H	utils/ortp/inc/ortp/rtcp.h	22;"	d
RTCP_MAX_RECV_BUFSIZE	utils/ortp/inc/ortp/rtcp.h	26;"	d
RTCP_REPORT_BLOCK_SIZE	utils/ortp/inc/ortp/rtcp.h	29;"	d
RTCP_RR	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_RR	= 201,$/;"	e	enum:__anon12
RTCP_SDES	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES	= 202,$/;"	e	enum:__anon12
RTCP_SDES_CHUNK_DEFAULT_SIZE	utils/ortp/inc/ortp/rtcp.h	126;"	d
RTCP_SDES_CHUNK_HEADER_SIZE	utils/ortp/inc/ortp/rtcp.h	127;"	d
RTCP_SDES_CNAME	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES_CNAME 	= 1,$/;"	e	enum:__anon13
RTCP_SDES_EMAIL	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES_EMAIL	= 3,$/;"	e	enum:__anon13
RTCP_SDES_END	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES_END		= 0,$/;"	e	enum:__anon13
RTCP_SDES_ITEM_HEADER_SIZE	utils/ortp/inc/ortp/rtcp.h	125;"	d
RTCP_SDES_LOC	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES_LOC		= 5,$/;"	e	enum:__anon13
RTCP_SDES_MAX	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES_MAX		= 9$/;"	e	enum:__anon13
RTCP_SDES_MAX_STRING_SIZE	utils/ortp/inc/ortp/rtcp.h	124;"	d
RTCP_SDES_NAME	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES_NAME	= 2,$/;"	e	enum:__anon13
RTCP_SDES_NOTE	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES_NOTE	= 7,$/;"	e	enum:__anon13
RTCP_SDES_PHONE	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES_PHONE	= 4,$/;"	e	enum:__anon13
RTCP_SDES_PRIV	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES_PRIV		= 8,$/;"	e	enum:__anon13
RTCP_SDES_TOOL	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SDES_TOOL	= 6,$/;"	e	enum:__anon13
RTCP_SENDER_INFO_SIZE	utils/ortp/inc/ortp/rtcp.h	28;"	d
RTCP_SR	utils/ortp/inc/ortp/rtcp.h	/^    RTCP_SR	= 200,$/;"	e	enum:__anon12
RTCP_SSRC_FIELD_SIZE	utils/ortp/inc/ortp/rtcp.h	31;"	d
RTPMOD_H	utils/ortp/src/rtpmod.h	22;"	d
RTPSESSION_H	utils/ortp/inc/ortp/rtpsession.h	21;"	d
RTPTIMER_H	utils/ortp/src/rtptimer.h	21;"	d
RTP_CALLBACK_TABLE_MAX_ENTRIES	utils/ortp/inc/ortp/rtpsignaltable.h	23;"	d
RTP_DEFAULT_JITTER_TIME	utils/ortp/inc/ortp/rtp.h	29;"	d
RTP_FIXED_HEADER_SIZE	utils/ortp/inc/ortp/rtp.h	28;"	d
RTP_H	utils/ortp/inc/ortp/rtp.h	22;"	d
RTP_PROFILE_MAX_PAYLOADS	utils/ortp/inc/ortp/payloadtype.h	65;"	d
RTP_SEQ_IS_GREATER	utils/ortp/src/rtpmod.c	24;"	d	file:
RTP_SESSION_BLOCKING_MODE	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_BLOCKING_MODE=1<<3, \/* in blocking mode *\/$/;"	e	enum:__anon11
RTP_SESSION_IN_SCHEDULER	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_IN_SCHEDULER=1<<6,	\/* the rtp session is in the scheduler list *\/$/;"	e	enum:__anon11
RTP_SESSION_RECVONLY	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_RECVONLY,$/;"	e	enum:__anon10
RTP_SESSION_RECV_NOT_STARTED	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_RECV_NOT_STARTED=1<<4,	\/* the application has not started to try to recv *\/$/;"	e	enum:__anon11
RTP_SESSION_RECV_SYNC	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_RECV_SYNC=1,	\/* the rtp session is synchronising in the incoming stream *\/$/;"	e	enum:__anon11
RTP_SESSION_SCHEDULED	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_SCHEDULED=1<<2, \/* the rtp session has to be scheduled *\/$/;"	e	enum:__anon11
RTP_SESSION_SENDONLY	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_SENDONLY,$/;"	e	enum:__anon10
RTP_SESSION_SENDRECV	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_SENDRECV$/;"	e	enum:__anon10
RTP_SESSION_SEND_NOT_STARTED	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_SEND_NOT_STARTED=1<<5,  \/* the application has not started to send something *\/$/;"	e	enum:__anon11
RTP_SESSION_SEND_SYNC	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_SEND_SYNC=1<<1, \/* the rtp session is synchronising in the outgoing stream *\/$/;"	e	enum:__anon11
RTP_SESSION_USING_EXT_SOCKETS	utils/ortp/inc/ortp/rtpsession.h	/^	RTP_SESSION_USING_EXT_SOCKETS=1<<7 \/* the session is using externaly supplied sockets *\/$/;"	e	enum:__anon11
RTP_TIMER_RUNNING	utils/ortp/src/rtptimer.h	38;"	d
RTP_TIMER_STOPPED	utils/ortp/src/rtptimer.h	39;"	d
RTP_TIMESTAMP_IS_NEWER_THAN	utils/ortp/inc/ortp/rtp.h	75;"	d
RTP_TIMESTAMP_IS_STRICTLY_NEWER_THAN	utils/ortp/inc/ortp/rtp.h	78;"	d
Rendezvous_Handle	utils/osa/inc/rendezvous.h	/^typedef Rendezvous_Obj *Rendezvous_Handle;$/;"	t
Rendezvous_Obj	utils/osa/inc/rendezvous.h	/^typedef struct Rendezvous_Obj {$/;"	s
Rendezvous_Obj	utils/osa/inc/rendezvous.h	/^} Rendezvous_Obj;$/;"	t	typeref:struct:Rendezvous_Obj
Rendezvous_Obj::cond	utils/osa/inc/rendezvous.h	/^    pthread_cond_t  cond;$/;"	m	struct:Rendezvous_Obj	access:public
Rendezvous_Obj::count	utils/osa/inc/rendezvous.h	/^    int             count;$/;"	m	struct:Rendezvous_Obj	access:public
Rendezvous_Obj::mutex	utils/osa/inc/rendezvous.h	/^    pthread_mutex_t mutex;$/;"	m	struct:Rendezvous_Obj	access:public
Rendezvous_Obj::orig	utils/osa/inc/rendezvous.h	/^    int             orig;$/;"	m	struct:Rendezvous_Obj	access:public
Rendezvous_close	utils/osa/inc/rendezvous.h	/^static inline void Rendezvous_close(Rendezvous_Handle hRv)$/;"	f	signature:(Rendezvous_Handle hRv)
Rendezvous_force	utils/osa/inc/rendezvous.h	/^static inline void Rendezvous_force(Rendezvous_Handle hRv)$/;"	f	signature:(Rendezvous_Handle hRv)
Rendezvous_meet	utils/osa/inc/rendezvous.h	/^static inline void Rendezvous_meet(Rendezvous_Handle hRv)$/;"	f	signature:(Rendezvous_Handle hRv)
Rendezvous_open	utils/osa/inc/rendezvous.h	/^static inline void Rendezvous_open(Rendezvous_Handle hRv, int count)$/;"	f	signature:(Rendezvous_Handle hRv, int count)
Rendezvous_reset	utils/osa/inc/rendezvous.h	/^static inline void Rendezvous_reset(Rendezvous_Handle hRv)$/;"	f	signature:(Rendezvous_Handle hRv)
Resolution	network/inc/command.h	/^		}Resolution;$/;"	m	union:_ReturnPack::__anon7	typeref:struct:_ReturnPack::__anon7::__anon8	access:public
Resolution	network/inc/command.h	/^		}Resolution;$/;"	m	union:_ServerPack::__anon1	typeref:struct:_ServerPack::__anon1::__anon4	access:public
ReturnCMD	network/inc/command.h	/^}ReturnCMD;$/;"	t	typeref:enum:_ReturnCMD
ReturnPack	network/inc/command.h	/^}ReturnPack;$/;"	t	typeref:struct:_ReturnPack
RtcpStream	utils/ortp/inc/ortp/rtpsession.h	/^} RtcpStream;$/;"	t	typeref:struct:_RtcpStream
RtpCallback	utils/ortp/inc/ortp/rtpsignaltable.h	/^typedef void (*RtpCallback)(struct _RtpSession *, ...);$/;"	t
RtpProfile	utils/ortp/inc/ortp/payloadtype.h	/^typedef struct _RtpProfile RtpProfile;$/;"	t	typeref:struct:_RtpProfile
RtpScheduler	utils/ortp/src/scheduler.h	/^typedef struct _RtpScheduler RtpScheduler;$/;"	t	typeref:struct:_RtpScheduler
RtpSession	utils/ortp/inc/ortp/rtpsession.h	/^typedef struct _RtpSession RtpSession;$/;"	t	typeref:struct:_RtpSession
RtpSessionFlags	utils/ortp/inc/ortp/rtpsession.h	/^}RtpSessionFlags;$/;"	t	typeref:enum:__anon11
RtpSessionMode	utils/ortp/inc/ortp/rtpsession.h	/^} RtpSessionMode;$/;"	t	typeref:enum:__anon10
RtpSignalTable	utils/ortp/inc/ortp/rtpsignaltable.h	/^typedef struct _RtpSignalTable RtpSignalTable;$/;"	t	typeref:struct:_RtpSignalTable
RtpStream	utils/ortp/inc/ortp/rtpsession.h	/^}RtpStream;$/;"	t	typeref:struct:_RtpStream
RtpTimer	utils/ortp/src/rtptimer.h	/^typedef struct _RtpTimer RtpTimer;$/;"	t	typeref:struct:_RtpTimer
RtpTimerFunc	utils/ortp/src/rtptimer.h	/^typedef void (*RtpTimerFunc)(void);$/;"	t
SCHEDULER_H	utils/ortp/src/scheduler.h	21;"	d
SERVERIF_H	network/inc/serverIf.h	2;"	d
SERVER_H_	network/inc/server.h	2;"	d
SERVER_PACK_LEN	network/inc/command.h	214;"	d
SESSIONSET_H	utils/ortp/inc/ortp/sessionset.h	21;"	d
SESSION_TYPE_AUDIO	utils/com/inc/rtpsend.h	43;"	d
SESSION_TYPE_VIDEO	utils/com/inc/rtpsend.h	42;"	d
SOCKET_BUFFER	utils/ortp/inc/ortp/port.h	71;"	d
SOCKET_OPTION_VALUE	utils/ortp/inc/ortp/port.h	140;"	d
SOCKET_OPTION_VALUE	utils/ortp/inc/ortp/port.h	70;"	d
STDC_HEADERS	utils/ortp/src/ortp-config.h	104;"	d
STORAGE_FILE_LEN	core/inc/common.h	39;"	d
STORAGE_FULLPATH_LEN	core/inc/common.h	41;"	d
STORAGE_PATH_LEN	core/inc/common.h	40;"	d
STORAGE_ROOT_PATH	core/inc/common.h	38;"	d
STR_UTILS_H	utils/ortp/inc/ortp/str_utils.h	21;"	d
SUCCESS	core/inc/common.h	59;"	d
SYS_CONFIG_FILE	core/inc/common.h	35;"	d
ServerCMD	network/inc/command.h	/^}ServerCMD;$/;"	t	typeref:enum:_ServerCMD
ServerEnv	network/inc/serverIf.h	/^}ServerEnv;$/;"	t	typeref:struct:_ServerEnv
ServerPack	network/inc/command.h	/^}ServerPack;$/;"	t	typeref:struct:_ServerPack
SessionElement	core/inc/session.h	/^}SessionElement;$/;"	t	typeref:struct:_SessionElement
SessionObj	utils/com/src/rtpsend.c	/^}SessionObj;$/;"	t	typeref:struct:_sessionObj	file:
SessionPair	core/src/session.c	/^}SessionPair;$/;"	t	typeref:struct:sessionPair	file:
SessionSet	utils/ortp/inc/ortp/sessionset.h	/^typedef struct _SessionSet SessionSet;$/;"	t	typeref:struct:_SessionSet
TCP_CMD_HEADER_LEN	network/inc/command.h	34;"	d
TCP_CMD_HEADER_STR	network/inc/command.h	/^static uint8_t TCP_CMD_HEADER_STR[TCP_CMD_HEADER_LEN] = { 0xAA,0xA1,0xA2,0xA3,0xA4,0xA5,0xA6,0xFF };$/;"	v
TCP_THREAD_STACK_SIZE	network/inc/serverIf.h	6;"	d
TELEPHONYEVENTS_H	utils/ortp/inc/ortp/telephonyevents.h	21;"	d
TELEPHONY_EVENTS_ALLOCATED_SIZE	utils/ortp/inc/ortp/telephonyevents.h	76;"	d
TEV_DTMF_0	utils/ortp/inc/ortp/telephonyevents.h	79;"	d
TEV_DTMF_1	utils/ortp/inc/ortp/telephonyevents.h	80;"	d
TEV_DTMF_2	utils/ortp/inc/ortp/telephonyevents.h	81;"	d
TEV_DTMF_3	utils/ortp/inc/ortp/telephonyevents.h	82;"	d
TEV_DTMF_4	utils/ortp/inc/ortp/telephonyevents.h	83;"	d
TEV_DTMF_5	utils/ortp/inc/ortp/telephonyevents.h	84;"	d
TEV_DTMF_6	utils/ortp/inc/ortp/telephonyevents.h	85;"	d
TEV_DTMF_7	utils/ortp/inc/ortp/telephonyevents.h	86;"	d
TEV_DTMF_8	utils/ortp/inc/ortp/telephonyevents.h	87;"	d
TEV_DTMF_9	utils/ortp/inc/ortp/telephonyevents.h	88;"	d
TEV_DTMF_A	utils/ortp/inc/ortp/telephonyevents.h	91;"	d
TEV_DTMF_B	utils/ortp/inc/ortp/telephonyevents.h	92;"	d
TEV_DTMF_C	utils/ortp/inc/ortp/telephonyevents.h	93;"	d
TEV_DTMF_D	utils/ortp/inc/ortp/telephonyevents.h	94;"	d
TEV_DTMF_POUND	utils/ortp/inc/ortp/telephonyevents.h	90;"	d
TEV_DTMF_STAR	utils/ortp/inc/ortp/telephonyevents.h	89;"	d
TEV_FLASH	utils/ortp/inc/ortp/telephonyevents.h	95;"	d
THREAD_FAILURE	core/inc/common.h	64;"	d
THREAD_SUCCESS	core/inc/common.h	63;"	d
TIME_INTERVAL	utils/ortp/src/posixtimer.c	97;"	d	file:
TIME_IS_NEWER_THAN	utils/ortp/inc/ortp/rtp.h	81;"	d
TIME_IS_STRICTLY_NEWER_THAN	utils/ortp/inc/ortp/rtp.h	83;"	d
TIME_OUT_DELAY	network/inc/command.h	31;"	d
TIME_RESOLUTION	utils/ortp/src/posixtimer.c	98;"	d	file:
TIME_TIMEOUT	utils/ortp/src/posixtimer.c	99;"	d	file:
TIME_WITH_SYS_TIME	utils/ortp/src/ortp-config.h	107;"	d
TRUE	core/inc/common.h	70;"	d
TRUE	utils/ortp/inc/ortp/port.h	163;"	d
TRUE	utils/ortp/inc/ortp/port.h	165;"	d
TRUE	utils/osa/inc/osa.h	25;"	d
TRUE	utils/osa/inc/pause.h	21;"	d
TYPE	utils/ortp/src/avprofile.c	34;"	d	file:
TYPE	utils/ortp/src/avprofile.c	45;"	d	file:
ThreadEnv	core/inc/common.h	/^}ThreadEnv;$/;"	t	typeref:struct:_threadEnv
ThreadMgr	core/src/main.c	/^}ThreadMgr;$/;"	t	typeref:struct:_threadMgr	file:
TimeEvent	utils/ortp/src/posixtimer.c	/^HANDLE   TimeEvent;$/;"	v
UDP_MAX_SIZE	utils/ortp/inc/ortp/rtp.h	27;"	d
USE_SENDMSG	utils/ortp/src/rtpsession.c	38;"	d	file:
UTILS_H	utils/ortp/src/utils.h	28;"	d
Uint16	utils/osa/inc/osa.h	/^typedef unsigned short Uint16;          \/\/\/< Unsigned 16-bit integer$/;"	t
Uint32	utils/osa/inc/osa.h	/^typedef unsigned int Uint32;            \/\/\/< Unsigned 32-bit integer$/;"	t
Uint64	utils/osa/inc/osa.h	/^typedef unsigned long long Uint64;      \/\/\/< Unsigned 64-bit integer$/;"	t
Uint8	utils/osa/inc/osa.h	/^typedef unsigned char Uint8;            \/\/\/< Unsigned  8-bit integer$/;"	t
VAUDIO_ENCODE_H	core/inc/audioEncode.h	2;"	d
VIDEO_ENCODE_H	core/inc/videoEncode.h	2;"	d
VIDEO_ENCODE_THR	core/src/main.c	14;"	d	file:
VIDEO_RESOLUTION_CIF	core/inc/common.h	49;"	d
VIDEO_RESOLUTION_D1	core/inc/common.h	50;"	d
VIDEO_SYSTEM_NTSC	core/inc/common.h	47;"	d
VIDEO_SYSTEM_PAL	core/inc/common.h	46;"	d
VIDEO_TIME_STAMP_INC	utils/com/inc/rtpsend.h	33;"	d
VIDEO_TIME_STAMP_INC_STD	utils/com/inc/rtpsend.h	32;"	d
WIN_cond_broadcast	utils/ortp/inc/ortp/port.h	/^int WIN_cond_broadcast(ortp_cond_t * cond);$/;"	p	signature:(ortp_cond_t * cond)
WIN_cond_broadcast	utils/ortp/src/port.c	/^int WIN_cond_broadcast(ortp_cond_t * hCond)$/;"	f	signature:(ortp_cond_t * hCond)
WIN_cond_destroy	utils/ortp/inc/ortp/port.h	/^int WIN_cond_destroy(ortp_cond_t * cond);$/;"	p	signature:(ortp_cond_t * cond)
WIN_cond_destroy	utils/ortp/src/port.c	/^int WIN_cond_destroy(ortp_cond_t * hCond)$/;"	f	signature:(ortp_cond_t * hCond)
WIN_cond_init	utils/ortp/inc/ortp/port.h	/^int WIN_cond_init(ortp_cond_t *cond, void *attr_unused);$/;"	p	signature:(ortp_cond_t *cond, void *attr_unused)
WIN_cond_init	utils/ortp/src/port.c	/^int WIN_cond_init(ortp_cond_t *cond, void *attr)$/;"	f	signature:(ortp_cond_t *cond, void *attr)
WIN_cond_signal	utils/ortp/inc/ortp/port.h	/^int WIN_cond_signal(ortp_cond_t * cond);$/;"	p	signature:(ortp_cond_t * cond)
WIN_cond_signal	utils/ortp/src/port.c	/^int WIN_cond_signal(ortp_cond_t * hCond)$/;"	f	signature:(ortp_cond_t * hCond)
WIN_cond_wait	utils/ortp/inc/ortp/port.h	/^int WIN_cond_wait(ortp_cond_t * cond, ortp_mutex_t * mutex);$/;"	p	signature:(ortp_cond_t * cond, ortp_mutex_t * mutex)
WIN_cond_wait	utils/ortp/src/port.c	/^int WIN_cond_wait(ortp_cond_t* hCond, ortp_mutex_t * hMutex)$/;"	f	signature:(ortp_cond_t* hCond, ortp_mutex_t * hMutex)
WIN_mutex_destroy	utils/ortp/inc/ortp/port.h	/^int WIN_mutex_destroy(ortp_mutex_t *mutex);$/;"	p	signature:(ortp_mutex_t *mutex)
WIN_mutex_destroy	utils/ortp/src/port.c	/^int WIN_mutex_destroy(ortp_mutex_t * hMutex)$/;"	f	signature:(ortp_mutex_t * hMutex)
WIN_mutex_init	utils/ortp/inc/ortp/port.h	/^int WIN_mutex_init(ortp_mutex_t *m, void *attr_unused);$/;"	p	signature:(ortp_mutex_t *m, void *attr_unused)
WIN_mutex_init	utils/ortp/src/port.c	/^int WIN_mutex_init(ortp_mutex_t *mutex, void *attr)$/;"	f	signature:(ortp_mutex_t *mutex, void *attr)
WIN_mutex_lock	utils/ortp/inc/ortp/port.h	/^int WIN_mutex_lock(ortp_mutex_t *mutex);$/;"	p	signature:(ortp_mutex_t *mutex)
WIN_mutex_lock	utils/ortp/src/port.c	/^int WIN_mutex_lock(ortp_mutex_t * hMutex)$/;"	f	signature:(ortp_mutex_t * hMutex)
WIN_mutex_unlock	utils/ortp/inc/ortp/port.h	/^int WIN_mutex_unlock(ortp_mutex_t *mutex);$/;"	p	signature:(ortp_mutex_t *mutex)
WIN_mutex_unlock	utils/ortp/src/port.c	/^int WIN_mutex_unlock(ortp_mutex_t * hMutex)$/;"	f	signature:(ortp_mutex_t * hMutex)
WIN_thread_create	utils/ortp/inc/ortp/port.h	/^int WIN_thread_create(ortp_thread_t *t, void *attr_unused, void *(*func)(void*), void *arg); $/;"	p	signature:(ortp_thread_t *t, void *attr_unused, void *(*func)(void*), void *arg)
WIN_thread_create	utils/ortp/src/port.c	/^int WIN_thread_create(ortp_thread_t *th, void *attr, void * (*func)(void *), void *data)$/;"	f	signature:(ortp_thread_t *th, void *attr, void * (*func)(void *), void *data)
WIN_thread_join	utils/ortp/inc/ortp/port.h	/^int WIN_thread_join(ortp_thread_t thread, void **unused);$/;"	p	signature:(ortp_thread_t thread, void **unused)
WIN_thread_join	utils/ortp/src/port.c	/^int WIN_thread_join(ortp_thread_t hThread, void **unused)$/;"	f	signature:(ortp_thread_t hThread, void **unused)
WaitPoint	utils/ortp/inc/ortp/rtpsession.h	/^} WaitPoint;$/;"	t	typeref:struct:_WaitPoint
ZERO_PATTERN	utils/ortp/src/avprofile.c	37;"	d	file:
ZERO_PATTERN	utils/ortp/src/avprofile.c	48;"	d	file:
_AlarmStatePack	network/inc/command.h	/^typedef struct _AlarmStatePack$/;"	s
_AlarmStatePack::cmdHeader	network/inc/command.h	/^	uint8_t cmdHeader[TCP_CMD_HEADER_LEN];$/;"	m	struct:_AlarmStatePack	access:public
_AlarmStatePack::number	network/inc/command.h	/^	int number;$/;"	m	struct:_AlarmStatePack	access:public
_AlarmStatePack::state	network/inc/command.h	/^	int state;$/;"	m	struct:_AlarmStatePack	access:public
_COMMON_H	core/inc/common.h	13;"	d
_ClientEnv	network/inc/serverIf.h	/^typedef struct _ClientEnv$/;"	s
_ClientEnv::m_Index	network/inc/serverIf.h	/^	int m_Index;$/;"	m	struct:_ClientEnv	access:public
_ClientEnv::m_Ip	network/inc/serverIf.h	/^    char  m_Ip[20];$/;"	m	struct:_ClientEnv	access:public
_ClientEnv::m_Socket	network/inc/serverIf.h	/^	int   m_Socket;$/;"	m	struct:_ClientEnv	access:public
_ClientEnv::m_Thr	network/inc/serverIf.h	/^	OSA_ThrHndl m_Thr;$/;"	m	struct:_ClientEnv	access:public
_EResolution	network/inc/command.h	/^typedef enum _EResolution$/;"	g
_ExitState	core/inc/common.h	/^typedef enum _ExitState$/;"	g
_FIFOUTIL_H	utils/osa/inc/fifoutil.h	20;"	d
_JitterControl	utils/ortp/inc/ortp/rtpsession.h	/^typedef struct _JitterControl$/;"	s
_JitterControl::adapt_jitt_comp_ts	utils/ortp/inc/ortp/rtpsession.h	/^	int adapt_jitt_comp_ts;$/;"	m	struct:_JitterControl	access:public
_JitterControl::adaptive	utils/ortp/inc/ortp/rtpsession.h	/^	bool_t adaptive;$/;"	m	struct:_JitterControl	access:public
_JitterControl::corrective_slide	utils/ortp/inc/ortp/rtpsession.h	/^	int corrective_slide;$/;"	m	struct:_JitterControl	access:public
_JitterControl::corrective_step	utils/ortp/inc/ortp/rtpsession.h	/^	int corrective_step;$/;"	m	struct:_JitterControl	access:public
_JitterControl::count	utils/ortp/inc/ortp/rtpsession.h	/^	int count;$/;"	m	struct:_JitterControl	access:public
_JitterControl::inter_jitter	utils/ortp/inc/ortp/rtpsession.h	/^	float inter_jitter;	\/* interarrival jitter as defined in the RFC *\/$/;"	m	struct:_JitterControl	access:public
_JitterControl::jitt_comp	utils/ortp/inc/ortp/rtpsession.h	/^	int jitt_comp;   \/* the user jitt_comp in miliseconds*\/$/;"	m	struct:_JitterControl	access:public
_JitterControl::jitt_comp_ts	utils/ortp/inc/ortp/rtpsession.h	/^	int jitt_comp_ts; \/* the jitt_comp converted in rtp time (same unit as timestamp) *\/$/;"	m	struct:_JitterControl	access:public
_JitterControl::jitter	utils/ortp/inc/ortp/rtpsession.h	/^	float jitter;$/;"	m	struct:_JitterControl	access:public
_JitterControl::olddiff	utils/ortp/inc/ortp/rtpsession.h	/^	int olddiff;$/;"	m	struct:_JitterControl	access:public
_JitterControl::slide	utils/ortp/inc/ortp/rtpsession.h	/^	float slide;$/;"	m	struct:_JitterControl	access:public
_OList	utils/ortp/src/utils.h	/^struct _OList {$/;"	s
_OList::data	utils/ortp/src/utils.h	/^	void *data;$/;"	m	struct:_OList	access:public
_OList::next	utils/ortp/src/utils.h	/^	struct _OList *next;$/;"	m	struct:_OList	typeref:struct:_OList::_OList	access:public
_OList::prev	utils/ortp/src/utils.h	/^	struct _OList *prev;$/;"	m	struct:_OList	typeref:struct:_OList::_OList	access:public
_OSA_BUF_H_	utils/osa/inc/osa_buf.h	4;"	d
_OSA_DEBUG_H_	utils/osa/inc/osa_debug.h	3;"	d
_OSA_FILE_H_	utils/osa/inc/osa_file.h	4;"	d
_OSA_FLG_H_	utils/osa/inc/osa_flg.h	4;"	d
_OSA_H_	utils/osa/inc/osa.h	4;"	d
_OSA_IPC_	utils/osa/inc/osa_ipc.h	3;"	d
_OSA_MBX_H_	utils/osa/inc/osa_mbx.h	4;"	d
_OSA_MSGQ_H_	utils/osa/inc/osa_msgq.h	4;"	d
_OSA_MUTEX_H_	utils/osa/inc/osa_mutex.h	4;"	d
_OSA_PRF_H_	utils/osa/inc/osa_prf.h	4;"	d
_OSA_QUE_H_	utils/osa/inc/osa_que.h	4;"	d
_OSA_SEM_H_	utils/osa/inc/osa_sem.h	4;"	d
_OSA_THR_H_	utils/osa/inc/osa_thr.h	4;"	d
_OSA_TSK_H_	utils/osa/inc/osa_tsk.h	4;"	d
_PAUSE_H	utils/osa/inc/pause.h	16;"	d
_PayloadType	utils/ortp/inc/ortp/payloadtype.h	/^struct _PayloadType$/;"	s
_PayloadType::bits_per_sample	utils/ortp/inc/ortp/payloadtype.h	/^	char bits_per_sample;		\/* in case of continuous audio data *\/$/;"	m	struct:_PayloadType	access:public
_PayloadType::clock_rate	utils/ortp/inc/ortp/payloadtype.h	/^	int clock_rate;$/;"	m	struct:_PayloadType	access:public
_PayloadType::flags	utils/ortp/inc/ortp/payloadtype.h	/^	int flags;$/;"	m	struct:_PayloadType	access:public
_PayloadType::mime_type	utils/ortp/inc/ortp/payloadtype.h	/^	char *mime_type;$/;"	m	struct:_PayloadType	access:public
_PayloadType::normal_bitrate	utils/ortp/inc/ortp/payloadtype.h	/^	int normal_bitrate;	\/*in bit\/s *\/$/;"	m	struct:_PayloadType	access:public
_PayloadType::pattern_length	utils/ortp/inc/ortp/payloadtype.h	/^	int pattern_length;$/;"	m	struct:_PayloadType	access:public
_PayloadType::recv_fmtp	utils/ortp/inc/ortp/payloadtype.h	/^	char *recv_fmtp; \/* various format parameters for the incoming stream *\/$/;"	m	struct:_PayloadType	access:public
_PayloadType::send_fmtp	utils/ortp/inc/ortp/payloadtype.h	/^	char *send_fmtp; \/* various format parameters for the outgoing stream *\/$/;"	m	struct:_PayloadType	access:public
_PayloadType::type	utils/ortp/inc/ortp/payloadtype.h	/^	int type;$/;"	m	struct:_PayloadType	access:public
_PayloadType::user_data	utils/ortp/inc/ortp/payloadtype.h	/^	void *user_data;$/;"	m	struct:_PayloadType	access:public
_PayloadType::zero_pattern	utils/ortp/inc/ortp/payloadtype.h	/^	char *zero_pattern;$/;"	m	struct:_PayloadType	access:public
_RENDEZVOUS_H	utils/osa/inc/rendezvous.h	19;"	d
_RTPSEND_H	utils/com/inc/rtpsend.h	20;"	d
_ReturnCMD	network/inc/command.h	/^typedef enum _ReturnCMD$/;"	g
_ReturnPack	network/inc/command.h	/^typedef struct _ReturnPack$/;"	s
_ReturnPack::Parameters	network/inc/command.h	/^	}Parameters;$/;"	m	struct:_ReturnPack	typeref:union:_ReturnPack::__anon7	access:public
_ReturnPack::__anon7::Alarm	network/inc/command.h	/^		}Alarm;$/;"	m	union:_ReturnPack::__anon7	typeref:struct:_ReturnPack::__anon7::__anon9	access:public
_ReturnPack::__anon7::Resolution	network/inc/command.h	/^		}Resolution;$/;"	m	union:_ReturnPack::__anon7	typeref:struct:_ReturnPack::__anon7::__anon8	access:public
_ReturnPack::__anon7::__anon8::resolution	network/inc/command.h	/^			EResolution resolution;$/;"	m	struct:_ReturnPack::__anon7::__anon8	access:public
_ReturnPack::__anon7::__anon9::state	network/inc/command.h	/^			uint8_t state;$/;"	m	struct:_ReturnPack::__anon7::__anon9	access:public
_ReturnPack::cmdHeader	network/inc/command.h	/^	uint8_t cmdHeader[TCP_CMD_HEADER_LEN];$/;"	m	struct:_ReturnPack	access:public
_ReturnPack::returnCMD	network/inc/command.h	/^	ReturnCMD returnCMD;$/;"	m	struct:_ReturnPack	access:public
_RtcpStream	utils/ortp/inc/ortp/rtpsession.h	/^typedef struct _RtcpStream$/;"	s
_RtcpStream::cached_mp	utils/ortp/inc/ortp/rtpsession.h	/^	mblk_t *cached_mp;$/;"	m	struct:_RtcpStream	access:public
_RtcpStream::rem_addr	utils/ortp/inc/ortp/rtpsession.h	/^	struct sockaddr_in rem_addr;$/;"	m	struct:_RtcpStream	typeref:struct:_RtcpStream::sockaddr_in	access:public
_RtcpStream::rem_addr	utils/ortp/inc/ortp/rtpsession.h	/^	struct sockaddr_storage rem_addr;$/;"	m	struct:_RtcpStream	typeref:struct:_RtcpStream::sockaddr_storage	access:public
_RtcpStream::rem_addrlen	utils/ortp/inc/ortp/rtpsession.h	/^	int rem_addrlen;$/;"	m	struct:_RtcpStream	access:public
_RtcpStream::socket	utils/ortp/inc/ortp/rtpsession.h	/^	ortp_socket_t socket;$/;"	m	struct:_RtcpStream	access:public
_RtcpStream::sockfamily	utils/ortp/inc/ortp/rtpsession.h	/^	int sockfamily;$/;"	m	struct:_RtcpStream	access:public
_RtpProfile	utils/ortp/inc/ortp/payloadtype.h	/^struct _RtpProfile$/;"	s
_RtpProfile::name	utils/ortp/inc/ortp/payloadtype.h	/^	char *name;$/;"	m	struct:_RtpProfile	access:public
_RtpProfile::payload	utils/ortp/inc/ortp/payloadtype.h	/^	PayloadType *payload[RTP_PROFILE_MAX_PAYLOADS];$/;"	m	struct:_RtpProfile	access:public
_RtpScheduler	utils/ortp/src/scheduler.h	/^struct _RtpScheduler {$/;"	s
_RtpScheduler::all_max	utils/ortp/src/scheduler.h	/^	int		all_max;		\/* the highest pos in the all mask *\/$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::all_sessions	utils/ortp/src/scheduler.h	/^	SessionSet	all_sessions;  \/* mask of scheduled sessions *\/$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::e_max	utils/ortp/src/scheduler.h	/^	int		e_max;$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::e_sessions	utils/ortp/src/scheduler.h	/^	SessionSet	e_sessions;	\/* mask of session that have error event *\/$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::list	utils/ortp/src/scheduler.h	/^	RtpSession *list;	\/* list of scheduled sessions*\/$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::lock	utils/ortp/src/scheduler.h	/^	ortp_mutex_t	lock;$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::max_sessions	utils/ortp/src/scheduler.h	/^	int max_sessions;		\/* the number of position in the masks *\/$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::r_max	utils/ortp/src/scheduler.h	/^	int		r_max;$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::r_sessions	utils/ortp/src/scheduler.h	/^	SessionSet  r_sessions;		\/* mask of sessions that have a recv event *\/$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::thread	utils/ortp/src/scheduler.h	/^	ortp_thread_t thread;$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::thread_running	utils/ortp/src/scheduler.h	/^	int thread_running;$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::time_	utils/ortp/src/scheduler.h	/^	uint32_t time_;       \/*number of miliseconds elapsed since the start of the thread *\/$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::timer	utils/ortp/src/scheduler.h	/^	struct _RtpTimer *timer;$/;"	m	struct:_RtpScheduler	typeref:struct:_RtpScheduler::_RtpTimer	access:public
_RtpScheduler::timer_inc	utils/ortp/src/scheduler.h	/^	uint32_t timer_inc;	\/* the timer increment in milisec *\/$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::unblock_select_cond	utils/ortp/src/scheduler.h	/^	ortp_cond_t   unblock_select_cond;$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::w_max	utils/ortp/src/scheduler.h	/^	int 		w_max;$/;"	m	struct:_RtpScheduler	access:public
_RtpScheduler::w_sessions	utils/ortp/src/scheduler.h	/^	SessionSet	w_sessions;		\/* mask of sessions that have a send event *\/$/;"	m	struct:_RtpScheduler	access:public
_RtpSession	utils/ortp/inc/ortp/rtpsession.h	/^struct _RtpSession$/;"	s
_RtpSession::contributing_sources	utils/ortp/inc/ortp/rtpsession.h	/^	queue_t contributing_sources;$/;"	m	struct:_RtpSession	access:public
_RtpSession::current_tev	utils/ortp/inc/ortp/rtpsession.h	/^	mblk_t *current_tev;		\/* the pending telephony events *\/$/;"	m	struct:_RtpSession	access:public
_RtpSession::flags	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t flags;$/;"	m	struct:_RtpSession	access:public
_RtpSession::hw_recv_pt	utils/ortp/inc/ortp/rtpsession.h	/^	int hw_recv_pt; \/* recv payload type before jitter buffer *\/$/;"	m	struct:_RtpSession	access:public
_RtpSession::last_recv_time	utils/ortp/inc/ortp/rtpsession.h	/^	struct timeval last_recv_time; \/* Time of receiving the RTP\/RTCP packet. *\/$/;"	m	struct:_RtpSession	typeref:struct:_RtpSession::timeval	access:public
_RtpSession::lock	utils/ortp/inc/ortp/rtpsession.h	/^	ortp_mutex_t lock;$/;"	m	struct:_RtpSession	access:public
_RtpSession::mask_pos	utils/ortp/inc/ortp/rtpsession.h	/^	int mask_pos;	\/* the position in the scheduler mask of RtpSession *\/$/;"	m	struct:_RtpSession	access:public
_RtpSession::mode	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSessionMode mode;$/;"	m	struct:_RtpSession	access:public
_RtpSession::next	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSession *next;	\/* next RtpSession, when the session are enqueued by the scheduler *\/$/;"	m	struct:_RtpSession	access:public
_RtpSession::on_network_error	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_network_error;$/;"	m	struct:_RtpSession	access:public
_RtpSession::on_payload_type_changed	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_payload_type_changed;$/;"	m	struct:_RtpSession	access:public
_RtpSession::on_rtcp_bye	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_rtcp_bye;$/;"	m	struct:_RtpSession	access:public
_RtpSession::on_ssrc_changed	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_ssrc_changed;$/;"	m	struct:_RtpSession	access:public
_RtpSession::on_telephone_event	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_telephone_event;$/;"	m	struct:_RtpSession	access:public
_RtpSession::on_telephone_event_packet	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_telephone_event_packet;$/;"	m	struct:_RtpSession	access:public
_RtpSession::on_timestamp_jump	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_timestamp_jump;$/;"	m	struct:_RtpSession	access:public
_RtpSession::profile	utils/ortp/inc/ortp/rtpsession.h	/^	RtpProfile *profile;$/;"	m	struct:_RtpSession	access:public
_RtpSession::recv_buf_size	utils/ortp/inc/ortp/rtpsession.h	/^	int recv_buf_size;$/;"	m	struct:_RtpSession	access:public
_RtpSession::recv_pt	utils/ortp/inc/ortp/rtpsession.h	/^	int recv_pt;\/* recv payload type *\/$/;"	m	struct:_RtpSession	access:public
_RtpSession::recv_ssrc	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t recv_ssrc;$/;"	m	struct:_RtpSession	access:public
_RtpSession::recv_wp	utils/ortp/inc/ortp/rtpsession.h	/^	WaitPoint recv_wp;$/;"	m	struct:_RtpSession	access:public
_RtpSession::rtcp	utils/ortp/inc/ortp/rtpsession.h	/^	RtcpStream rtcp;$/;"	m	struct:_RtpSession	access:public
_RtpSession::rtp	utils/ortp/inc/ortp/rtpsession.h	/^	RtpStream rtp;$/;"	m	struct:_RtpSession	access:public
_RtpSession::sched	utils/ortp/inc/ortp/rtpsession.h	/^	struct _RtpScheduler *sched;$/;"	m	struct:_RtpSession	typeref:struct:_RtpSession::_RtpScheduler	access:public
_RtpSession::sd	utils/ortp/inc/ortp/rtpsession.h	/^	mblk_t *sd;$/;"	m	struct:_RtpSession	access:public
_RtpSession::send_pt	utils/ortp/inc/ortp/rtpsession.h	/^	int send_pt;\/* sent payload type *\/$/;"	m	struct:_RtpSession	access:public
_RtpSession::send_ssrc	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t send_ssrc;$/;"	m	struct:_RtpSession	access:public
_RtpSession::send_wp	utils/ortp/inc/ortp/rtpsession.h	/^	WaitPoint send_wp;$/;"	m	struct:_RtpSession	access:public
_RtpSession::signal_tables	utils/ortp/inc/ortp/rtpsession.h	/^	struct _OList *signal_tables;$/;"	m	struct:_RtpSession	typeref:struct:_RtpSession::_OList	access:public
_RtpSession::telephone_events_pt	utils/ortp/inc/ortp/rtpsession.h	/^	int telephone_events_pt;	\/* the payload type used for telephony events *\/$/;"	m	struct:_RtpSession	access:public
_RtpSession::user_data	utils/ortp/inc/ortp/rtpsession.h	/^	void * user_data;$/;"	m	struct:_RtpSession	access:public
_RtpSignalTable	utils/ortp/inc/ortp/rtpsignaltable.h	/^struct _RtpSignalTable$/;"	s
_RtpSignalTable::callback	utils/ortp/inc/ortp/rtpsignaltable.h	/^	RtpCallback callback[RTP_CALLBACK_TABLE_MAX_ENTRIES];$/;"	m	struct:_RtpSignalTable	access:public
_RtpSignalTable::count	utils/ortp/inc/ortp/rtpsignaltable.h	/^	int count;$/;"	m	struct:_RtpSignalTable	access:public
_RtpSignalTable::session	utils/ortp/inc/ortp/rtpsignaltable.h	/^	struct _RtpSession *session;$/;"	m	struct:_RtpSignalTable	typeref:struct:_RtpSignalTable::_RtpSession	access:public
_RtpSignalTable::signal_name	utils/ortp/inc/ortp/rtpsignaltable.h	/^	const char *signal_name;$/;"	m	struct:_RtpSignalTable	access:public
_RtpSignalTable::user_data	utils/ortp/inc/ortp/rtpsignaltable.h	/^	unsigned long user_data[RTP_CALLBACK_TABLE_MAX_ENTRIES];$/;"	m	struct:_RtpSignalTable	access:public
_RtpStream	utils/ortp/inc/ortp/rtpsession.h	/^typedef struct _RtpStream$/;"	s
_RtpStream::cached_mp	utils/ortp/inc/ortp/rtpsession.h	/^	mblk_t *cached_mp;$/;"	m	struct:_RtpStream	access:public
_RtpStream::hwrcv_diff_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t hwrcv_diff_ts;$/;"	m	struct:_RtpStream	access:public
_RtpStream::hwrcv_extseq	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t hwrcv_extseq; \/* last received on socket extended sequence number *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::hwrcv_seq_at_last_SR	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t hwrcv_seq_at_last_SR;$/;"	m	struct:_RtpStream	access:public
_RtpStream::hwrcv_since_last_SR	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t hwrcv_since_last_SR;$/;"	m	struct:_RtpStream	access:public
_RtpStream::jittctl	utils/ortp/inc/ortp/rtpsession.h	/^	JitterControl jittctl;$/;"	m	struct:_RtpStream	access:public
_RtpStream::last_rcv_SR_time	utils/ortp/inc/ortp/rtpsession.h	/^	struct timeval last_rcv_SR_time;   \/* time at which last SR was received  *\/$/;"	m	struct:_RtpStream	typeref:struct:_RtpStream::timeval	access:public
_RtpStream::last_rcv_SR_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t last_rcv_SR_ts;     \/* NTP timestamp (middle 32 bits) of last received SR *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::last_rtcp_report_snt_r	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t last_rtcp_report_snt_r;	\/* the time of the last rtcp report sent, in recv timestamp unit *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::last_rtcp_report_snt_s	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t last_rtcp_report_snt_s;	\/* the time of the last rtcp report sent, in send timestamp unit *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::loc_port	utils/ortp/inc/ortp/rtpsession.h	/^	int loc_port;$/;"	m	struct:_RtpStream	access:public
_RtpStream::max_rq_size	utils/ortp/inc/ortp/rtpsession.h	/^	int max_rq_size;$/;"	m	struct:_RtpStream	access:public
_RtpStream::rcv_diff_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_diff_ts;	\/* difference between the first user timestamp and first stream timestamp *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::rcv_last_app_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_last_app_ts; \/* the last application timestamp asked by the application *\/	$/;"	m	struct:_RtpStream	access:public
_RtpStream::rcv_last_ret_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_last_ret_ts; \/* the timestamp of the last sample returned (only for continuous audio)*\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::rcv_last_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_last_ts;	\/* the last stream timestamp got by the application *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::rcv_query_ts_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_query_ts_offset;	\/* the first user timestamp asked by the application *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::rcv_time_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_time_offset; \/*the scheduler time when the application ask for its first timestamp*\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::rcv_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_ts;			\/* to be unused *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::rcv_ts_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_ts_offset;  \/* the first stream timestamp *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::rem_addr	utils/ortp/inc/ortp/rtpsession.h	/^	struct sockaddr_in rem_addr;$/;"	m	struct:_RtpStream	typeref:struct:_RtpStream::sockaddr_in	access:public
_RtpStream::rem_addr	utils/ortp/inc/ortp/rtpsession.h	/^	struct sockaddr_storage rem_addr;$/;"	m	struct:_RtpStream	typeref:struct:_RtpStream::sockaddr_storage	access:public
_RtpStream::rem_addrlen	utils/ortp/inc/ortp/rtpsession.h	/^	int rem_addrlen;$/;"	m	struct:_RtpStream	access:public
_RtpStream::rq	utils/ortp/inc/ortp/rtpsession.h	/^	queue_t rq;$/;"	m	struct:_RtpStream	access:public
_RtpStream::rtcp_report_snt_interval	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rtcp_report_snt_interval; \/* the interval in timestamp unit between rtcp report sent *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::snd_last_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t snd_last_ts;	\/* the last stream timestamp sended *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::snd_rand_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t snd_rand_offset;	\/* a random number added to the user offset to make the stream timestamp*\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::snd_seq	utils/ortp/inc/ortp/rtpsession.h	/^	uint16_t snd_seq; \/* send sequence number *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::snd_time_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t snd_time_offset;\/*the scheduler time when the application send its first timestamp*\/	$/;"	m	struct:_RtpStream	access:public
_RtpStream::snd_ts_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t snd_ts_offset;	\/* the first application timestamp sent by the application *\/$/;"	m	struct:_RtpStream	access:public
_RtpStream::socket	utils/ortp/inc/ortp/rtpsession.h	/^	ortp_socket_t socket;$/;"	m	struct:_RtpStream	access:public
_RtpStream::sockfamily	utils/ortp/inc/ortp/rtpsession.h	/^	int sockfamily;$/;"	m	struct:_RtpStream	access:public
_RtpStream::stats	utils/ortp/inc/ortp/rtpsession.h	/^	rtp_stats_t stats;$/;"	m	struct:_RtpStream	access:public
_RtpStream::tev_rq	utils/ortp/inc/ortp/rtpsession.h	/^	queue_t tev_rq;$/;"	m	struct:_RtpStream	access:public
_RtpStream::time_jump	utils/ortp/inc/ortp/rtpsession.h	/^	int time_jump;$/;"	m	struct:_RtpStream	access:public
_RtpStream::ts_jump	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t ts_jump;$/;"	m	struct:_RtpStream	access:public
_RtpTimer	utils/ortp/src/rtptimer.h	/^struct _RtpTimer$/;"	s
_RtpTimer::interval	utils/ortp/src/rtptimer.h	/^	struct timeval interval;$/;"	m	struct:_RtpTimer	typeref:struct:_RtpTimer::timeval	access:public
_RtpTimer::state	utils/ortp/src/rtptimer.h	/^	int state;$/;"	m	struct:_RtpTimer	access:public
_RtpTimer::timer_do	utils/ortp/src/rtptimer.h	/^	RtpTimerFunc timer_do;$/;"	m	struct:_RtpTimer	access:public
_RtpTimer::timer_init	utils/ortp/src/rtptimer.h	/^	RtpTimerFunc timer_init;$/;"	m	struct:_RtpTimer	access:public
_RtpTimer::timer_uninit	utils/ortp/src/rtptimer.h	/^	RtpTimerFunc timer_uninit;$/;"	m	struct:_RtpTimer	access:public
_SESSION_H_	core/inc/session.h	2;"	d
_ServerCMD	network/inc/command.h	/^typedef enum _ServerCMD$/;"	g
_ServerEnv	network/inc/serverIf.h	/^typedef struct _ServerEnv$/;"	s
_ServerEnv::m_Client	network/inc/serverIf.h	/^	ClientEnv m_Client[CLIENTNUM]; $/;"	m	struct:_ServerEnv	access:public
_ServerEnv::m_ListenThr	network/inc/serverIf.h	/^	OSA_ThrHndl m_ListenThr;$/;"	m	struct:_ServerEnv	access:public
_ServerEnv::m_Socket	network/inc/serverIf.h	/^	int m_Socket;$/;"	m	struct:_ServerEnv	access:public
_ServerEnv::m_clientCount	network/inc/serverIf.h	/^	int m_clientCount;$/;"	m	struct:_ServerEnv	access:public
_ServerPack	network/inc/command.h	/^typedef struct _ServerPack $/;"	s
_ServerPack::Parameters	network/inc/command.h	/^	}Parameters;$/;"	m	struct:_ServerPack	typeref:union:_ServerPack::__anon1	access:public
_ServerPack::__anon1::Alarm	network/inc/command.h	/^		}Alarm;$/;"	m	union:_ServerPack::__anon1	typeref:struct:_ServerPack::__anon1::__anon6	access:public
_ServerPack::__anon1::Bitrate	network/inc/command.h	/^		}Bitrate;$/;"	m	union:_ServerPack::__anon1	typeref:struct:_ServerPack::__anon1::__anon5	access:public
_ServerPack::__anon1::ListenPort	network/inc/command.h	/^		}ListenPort;$/;"	m	union:_ServerPack::__anon1	typeref:struct:_ServerPack::__anon1::__anon2	access:public
_ServerPack::__anon1::PlayPort	network/inc/command.h	/^		}PlayPort;$/;"	m	union:_ServerPack::__anon1	typeref:struct:_ServerPack::__anon1::__anon3	access:public
_ServerPack::__anon1::Resolution	network/inc/command.h	/^		}Resolution;$/;"	m	union:_ServerPack::__anon1	typeref:struct:_ServerPack::__anon1::__anon4	access:public
_ServerPack::__anon1::__anon2::audioport	network/inc/command.h	/^			int audioport;$/;"	m	struct:_ServerPack::__anon1::__anon2	access:public
_ServerPack::__anon1::__anon2::videoport	network/inc/command.h	/^			int videoport;$/;"	m	struct:_ServerPack::__anon1::__anon2	access:public
_ServerPack::__anon1::__anon3::chId	network/inc/command.h	/^			uint8_t chId;$/;"	m	struct:_ServerPack::__anon1::__anon3	access:public
_ServerPack::__anon1::__anon4::resolution	network/inc/command.h	/^			EResolution resolution;$/;"	m	struct:_ServerPack::__anon1::__anon4	access:public
_ServerPack::__anon1::__anon5::bitrate	network/inc/command.h	/^			int bitrate;$/;"	m	struct:_ServerPack::__anon1::__anon5	access:public
_ServerPack::__anon1::__anon6::chId	network/inc/command.h	/^			uint8_t chId;$/;"	m	struct:_ServerPack::__anon1::__anon6	access:public
_ServerPack::cmdHeader	network/inc/command.h	/^	uint8_t cmdHeader[TCP_CMD_HEADER_LEN];$/;"	m	struct:_ServerPack	access:public
_ServerPack::serverCMD	network/inc/command.h	/^	ServerCMD serverCMD;$/;"	m	struct:_ServerPack	access:public
_SessionElement	core/inc/session.h	/^typedef struct _SessionElement$/;"	s
_SessionElement::buffer	core/inc/session.h	/^    unsigned char *buffer;$/;"	m	struct:_SessionElement	access:public
_SessionElement::chId	core/inc/session.h	/^    unsigned char chId;$/;"	m	struct:_SessionElement	access:public
_SessionElement::command	core/inc/session.h	/^    int command;$/;"	m	struct:_SessionElement	access:public
_SessionElement::dataType	core/inc/session.h	/^    unsigned char dataType; $/;"	m	struct:_SessionElement	access:public
_SessionElement::len	core/inc/session.h	/^    uint32_t len;$/;"	m	struct:_SessionElement	access:public
_SessionSet	utils/ortp/inc/ortp/sessionset.h	/^struct _SessionSet$/;"	s
_SessionSet::rtpset	utils/ortp/inc/ortp/sessionset.h	/^	ortp_fd_set rtpset;$/;"	m	struct:_SessionSet	access:public
_TI_STD_TYPES	utils/osa/inc/osa.h	19;"	d
_WINSOCKAPI_	utils/ortp/inc/ortp/port.h	90;"	d
_WaitPoint	utils/ortp/inc/ortp/rtpsession.h	/^typedef struct _WaitPoint$/;"	s
_WaitPoint::cond	utils/ortp/inc/ortp/rtpsession.h	/^	ortp_cond_t  cond;$/;"	m	struct:_WaitPoint	access:public
_WaitPoint::lock	utils/ortp/inc/ortp/rtpsession.h	/^	ortp_mutex_t lock;$/;"	m	struct:_WaitPoint	access:public
_WaitPoint::time	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t time;$/;"	m	struct:_WaitPoint	access:public
_WaitPoint::wakeup	utils/ortp/inc/ortp/rtpsession.h	/^	bool_t wakeup;$/;"	m	struct:_WaitPoint	access:public
__anon14::fds_bits	utils/ortp/inc/ortp/sessionset.h	/^    ortp__fd_mask fds_bits[ORTP__FD_SETSIZE \/ ORTP__NFDBITS];$/;"	m	struct:__anon14	access:public
__anon16::one	utils/ortp/src/utils.h	/^	uint32_t one;$/;"	m	union:__anon16	access:public
__anon16::split	utils/ortp/src/utils.h	/^	dwsplit_t split;$/;"	m	union:__anon16	access:public
__anon18::id	utils/osa/inc/osa_ipc.h	/^  int id;$/;"	m	struct:__anon18	access:public
__anon18::ptr	utils/osa/inc/osa_ipc.h	/^  char *ptr;$/;"	m	struct:__anon18	access:public
__anon19::id	utils/osa/inc/osa_ipc.h	/^  int id;$/;"	m	struct:__anon19	access:public
__anon20::id	utils/osa/inc/osa_ipc.h	/^  int id;$/;"	m	struct:__anon20	access:public
__anon20::maxVal	utils/osa/inc/osa_ipc.h	/^  int maxVal;$/;"	m	struct:__anon20	access:public
__anon20::members	utils/osa/inc/osa_ipc.h	/^  int members;$/;"	m	struct:__anon20	access:public
__anon21::data	utils/osa/inc/osa_ipc.h	/^  Uint8 data[OSA_IPC_MBX_MSG_SIZE_MAX];$/;"	m	struct:__anon21	access:public
__anon21::type	utils/osa/inc/osa_ipc.h	/^  long  type;$/;"	m	struct:__anon21	access:public
__anon22::cond	utils/osa/inc/osa_sem.h	/^  pthread_cond_t  cond;$/;"	m	struct:__anon22	access:public
__anon22::count	utils/osa/inc/osa_sem.h	/^  Uint32 count;$/;"	m	struct:__anon22	access:public
__anon22::lock	utils/osa/inc/osa_sem.h	/^  pthread_mutex_t lock;$/;"	m	struct:__anon22	access:public
__anon22::maxCount	utils/osa/inc/osa_sem.h	/^  Uint32 maxCount;$/;"	m	struct:__anon22	access:public
__anon23::cond	utils/osa/inc/osa_flg.h	/^  pthread_cond_t  cond;$/;"	m	struct:__anon23	access:public
__anon23::lock	utils/osa/inc/osa_flg.h	/^  pthread_mutex_t lock;$/;"	m	struct:__anon23	access:public
__anon23::pattern	utils/osa/inc/osa_flg.h	/^  Uint32 pattern;$/;"	m	struct:__anon23	access:public
__anon24::hndl	utils/osa/inc/osa_thr.h	/^  pthread_t      hndl;$/;"	m	struct:__anon24	access:public
__anon25::lock	utils/osa/inc/osa_mutex.h	/^  pthread_mutex_t lock;$/;"	m	struct:__anon25	access:public
__anon26::count	utils/osa/inc/osa_buf.h	/^  int count;$/;"	m	struct:__anon26	access:public
__anon26::flags	utils/osa/inc/osa_buf.h	/^  int flags;$/;"	m	struct:__anon26	access:public
__anon26::physAddr	utils/osa/inc/osa_buf.h	/^  void *physAddr;$/;"	m	struct:__anon26	access:public
__anon26::size	utils/osa/inc/osa_buf.h	/^  int size;$/;"	m	struct:__anon26	access:public
__anon26::timestamp	utils/osa/inc/osa_buf.h	/^  int timestamp;$/;"	m	struct:__anon26	access:public
__anon26::virtAddr	utils/osa/inc/osa_buf.h	/^  void *virtAddr;$/;"	m	struct:__anon26	access:public
__anon27::bufInfo	utils/osa/inc/osa_buf.h	/^  OSA_BufInfo bufInfo[OSA_BUF_NUM_MAX];$/;"	m	struct:__anon27	access:public
__anon27::curReaders	utils/osa/inc/osa_buf.h	/^  int curReaders[OSA_BUF_NUM_MAX];$/;"	m	struct:__anon27	access:public
__anon27::emptyQue	utils/osa/inc/osa_buf.h	/^  OSA_QueHndl emptyQue;$/;"	m	struct:__anon27	access:public
__anon27::fullQue	utils/osa/inc/osa_buf.h	/^  OSA_QueHndl fullQue;$/;"	m	struct:__anon27	access:public
__anon27::numBuf	utils/osa/inc/osa_buf.h	/^  int numBuf;$/;"	m	struct:__anon27	access:public
__anon27::numReaders	utils/osa/inc/osa_buf.h	/^  int numReaders;$/;"	m	struct:__anon27	access:public
__anon27::readerLock	utils/osa/inc/osa_buf.h	/^  OSA_MutexHndl readerLock;$/;"	m	struct:__anon27	access:public
__anon28::bufPhyAddr	utils/osa/inc/osa_buf.h	/^  void *bufPhyAddr[OSA_BUF_NUM_MAX];$/;"	m	struct:__anon28	access:public
__anon28::bufVirtAddr	utils/osa/inc/osa_buf.h	/^  void *bufVirtAddr[OSA_BUF_NUM_MAX];  $/;"	m	struct:__anon28	access:public
__anon28::numBuf	utils/osa/inc/osa_buf.h	/^  int numBuf;$/;"	m	struct:__anon28	access:public
__anon28::numReaders	utils/osa/inc/osa_buf.h	/^  int numReaders;$/;"	m	struct:__anon28	access:public
__anon29::ackMbx	utils/osa/inc/osa_mbx.h	/^  OSA_MsgqHndl ackMbx;    \/\/\/< ACK mailbox$/;"	m	struct:__anon29	access:public
__anon29::rcvMbx	utils/osa/inc/osa_mbx.h	/^  OSA_MsgqHndl rcvMbx;    \/\/\/< Receive mailbox$/;"	m	struct:__anon29	access:public
__anon30::condRd	utils/osa/inc/osa_msgq.h	/^  pthread_cond_t  condRd;$/;"	m	struct:__anon30	access:public
__anon30::condWr	utils/osa/inc/osa_msgq.h	/^  pthread_cond_t  condWr;$/;"	m	struct:__anon30	access:public
__anon30::count	utils/osa/inc/osa_msgq.h	/^  Uint32 count;$/;"	m	struct:__anon30	access:public
__anon30::curRd	utils/osa/inc/osa_msgq.h	/^  Uint32 curRd;$/;"	m	struct:__anon30	access:public
__anon30::curWr	utils/osa/inc/osa_msgq.h	/^  Uint32 curWr;$/;"	m	struct:__anon30	access:public
__anon30::len	utils/osa/inc/osa_msgq.h	/^  Uint32 len;$/;"	m	struct:__anon30	access:public
__anon30::lock	utils/osa/inc/osa_msgq.h	/^  pthread_mutex_t lock;$/;"	m	struct:__anon30	access:public
__anon30::queue	utils/osa/inc/osa_msgq.h	/^  struct OSA_MsgHndl *queue[OSA_MSGQ_LEN_MAX];$/;"	m	struct:__anon30	typeref:struct:__anon30::OSA_MsgHndl	access:public
__anon31::condRd	utils/osa/inc/osa_que.h	/^  pthread_cond_t  condRd;$/;"	m	struct:__anon31	access:public
__anon31::condWr	utils/osa/inc/osa_que.h	/^  pthread_cond_t  condWr;$/;"	m	struct:__anon31	access:public
__anon31::count	utils/osa/inc/osa_que.h	/^  Uint32 count;$/;"	m	struct:__anon31	access:public
__anon31::curRd	utils/osa/inc/osa_que.h	/^  Uint32 curRd;$/;"	m	struct:__anon31	access:public
__anon31::curWr	utils/osa/inc/osa_que.h	/^  Uint32 curWr;$/;"	m	struct:__anon31	access:public
__anon31::len	utils/osa/inc/osa_que.h	/^  Uint32 len;$/;"	m	struct:__anon31	access:public
__anon31::lock	utils/osa/inc/osa_que.h	/^  pthread_mutex_t lock;$/;"	m	struct:__anon31	access:public
__anon31::queue	utils/osa/inc/osa_que.h	/^  Int32 *queue;$/;"	m	struct:__anon31	access:public
__anon32::count	utils/osa/inc/osa_prf.h	/^  Uint32 count;$/;"	m	struct:__anon32	access:public
__anon32::curTime	utils/osa/inc/osa_prf.h	/^  Uint32 curTime;$/;"	m	struct:__anon32	access:public
__anon32::curValue	utils/osa/inc/osa_prf.h	/^  Uint32 curValue;$/;"	m	struct:__anon32	access:public
__anon32::maxTime	utils/osa/inc/osa_prf.h	/^  Uint32 maxTime;$/;"	m	struct:__anon32	access:public
__anon32::maxValue	utils/osa/inc/osa_prf.h	/^  Uint32 maxValue;$/;"	m	struct:__anon32	access:public
__anon32::minTime	utils/osa/inc/osa_prf.h	/^  Uint32 minTime;$/;"	m	struct:__anon32	access:public
__anon32::minValue	utils/osa/inc/osa_prf.h	/^  Uint32 minValue;$/;"	m	struct:__anon32	access:public
__anon32::totalTime	utils/osa/inc/osa_prf.h	/^  Uint32 totalTime;$/;"	m	struct:__anon32	access:public
__anon32::totalValue	utils/osa/inc/osa_prf.h	/^  Uint32 totalValue;$/;"	m	struct:__anon32	access:public
__anon33::rsv	utils/osa/inc/osa_prf.h	/^  int rsv;$/;"	m	struct:__anon33	access:public
__log_file	utils/ortp/src/ortp.c	/^static FILE *__log_file=0;$/;"	v	file:
__ortp_log_mask	utils/ortp/src/ortp.c	/^unsigned int __ortp_log_mask=ORTP_MESSAGE|ORTP_WARNING|ORTP_ERROR|ORTP_FATAL;$/;"	v
__ortp_logv_out	utils/ortp/src/ortp.c	/^static void __ortp_logv_out(OrtpLogLevel lev, const char *fmt, va_list args);$/;"	p	file:	signature:(OrtpLogLevel lev, const char *fmt, va_list args)
__ortp_logv_out	utils/ortp/src/ortp.c	/^static void __ortp_logv_out(OrtpLogLevel lev, const char *fmt, va_list args){$/;"	f	file:	signature:(OrtpLogLevel lev, const char *fmt, va_list args)
__ortp_scheduler	utils/ortp/src/ortp.c	/^RtpScheduler *__ortp_scheduler;$/;"	v
__rtp_session_rtcp_process	utils/ortp/src/rtcp.c	/^void __rtp_session_rtcp_process(RtpSession *session){$/;"	f	signature:(RtpSession *session)
_clientMgr	core/src/session.c	/^typedef struct _clientMgr$/;"	s	file:
_clientMgr::clients	core/src/session.c	/^    ClientObj clients[MAX_CLIENT_NUM];$/;"	m	struct:_clientMgr	file:	access:public
_clientObj	core/src/session.c	/^typedef struct _clientObj$/;"	s	file:
_clientObj::clientID	core/src/session.c	/^    int clientID;$/;"	m	struct:_clientObj	file:	access:public
_clientObj::flag	core/src/session.c	/^    BOOL flag[MAX_VIDEO_CHANNEL];$/;"	m	struct:_clientObj	file:	access:public
_clientObj::sessionPair	core/src/session.c	/^    SessionPair sessionPair;$/;"	m	struct:_clientObj	file:	access:public
_dwsplit_t	utils/ortp/src/utils.h	/^typedef struct _dwsplit_t{$/;"	s
_dwsplit_t::hi	utils/ortp/src/utils.h	/^	uint16_t hi;$/;"	m	struct:_dwsplit_t	access:public
_dwsplit_t::lo	utils/ortp/src/utils.h	/^	uint16_t lo;$/;"	m	struct:_dwsplit_t	access:public
_q_first	utils/ortp/inc/ortp/str_utils.h	/^	mblk_t _q_first;$/;"	m	struct:_queue	access:public
_q_last	utils/ortp/inc/ortp/str_utils.h	/^	mblk_t _q_last;$/;"	m	struct:_queue	access:public
_queue	utils/ortp/inc/ortp/str_utils.h	/^typedef struct _queue$/;"	s
_queue::_q_first	utils/ortp/inc/ortp/str_utils.h	/^	mblk_t _q_first;$/;"	m	struct:_queue	access:public
_queue::_q_last	utils/ortp/inc/ortp/str_utils.h	/^	mblk_t _q_last;$/;"	m	struct:_queue	access:public
_queue::q_mcount	utils/ortp/inc/ortp/str_utils.h	/^	int q_mcount;	\/*number of packet in the q *\/$/;"	m	struct:_queue	access:public
_sFrameHeader	utils/com/inc/rtpsend.h	/^typedef struct _sFrameHeader$/;"	s
_sFrameHeader::chId	utils/com/inc/rtpsend.h	/^    unsigned char chId;$/;"	m	struct:_sFrameHeader	access:public
_sFrameHeader::cmdHeader	utils/com/inc/rtpsend.h	/^    unsigned char cmdHeader[CMD_HEADER_LEN];$/;"	m	struct:_sFrameHeader	access:public
_sFrameHeader::dataType	utils/com/inc/rtpsend.h	/^    unsigned char dataType; $/;"	m	struct:_sFrameHeader	access:public
_sFrameHeader::len	utils/com/inc/rtpsend.h	/^    uint32_t len;$/;"	m	struct:_sFrameHeader	access:public
_sFrameHeader::timestamp	utils/com/inc/rtpsend.h	/^    uint32_t timestamp;$/;"	m	struct:_sFrameHeader	access:public
_sessionObj	utils/com/src/rtpsend.c	/^typedef struct _sessionObj$/;"	s	file:
_sessionObj::curTimeStamp	utils/com/src/rtpsend.c	/^    uint32_t    curTimeStamp;$/;"	m	struct:_sessionObj	file:	access:public
_sessionObj::pSession	utils/com/src/rtpsend.c	/^    RtpSession *pSession;$/;"	m	struct:_sessionObj	file:	access:public
_sessionObj::timeStampInc	utils/com/src/rtpsend.c	/^    uint32_t    timeStampInc;$/;"	m	struct:_sessionObj	file:	access:public
_strdup_vprintf	utils/ortp/src/ortp.c	/^static char * _strdup_vprintf(const char *fmt, va_list ap)$/;"	f	file:	signature:(const char *fmt, va_list ap)
_telephone_event	utils/ortp/inc/ortp/telephonyevents.h	/^struct _telephone_event$/;"	s
_telephone_event::E	utils/ortp/inc/ortp/telephonyevents.h	/^	uint32_t E:1;$/;"	m	struct:_telephone_event	access:public
_telephone_event::R	utils/ortp/inc/ortp/telephonyevents.h	/^	uint32_t R:1;$/;"	m	struct:_telephone_event	access:public
_telephone_event::duration	utils/ortp/inc/ortp/telephonyevents.h	/^	uint32_t duration:16;$/;"	m	struct:_telephone_event	access:public
_telephone_event::event	utils/ortp/inc/ortp/telephonyevents.h	/^	uint32_t event:8;$/;"	m	struct:_telephone_event	access:public
_telephone_event::volume	utils/ortp/inc/ortp/telephonyevents.h	/^	uint32_t volume:6;$/;"	m	struct:_telephone_event	access:public
_threadEnv	core/inc/common.h	/^typedef struct _threadEnv$/;"	s
_threadEnv::rendezvousCleanup	core/inc/common.h	/^    Rendezvous_Obj rendezvousCleanup;$/;"	m	struct:_threadEnv	access:public
_threadEnv::rendezvousInit	core/inc/common.h	/^    Rendezvous_Obj rendezvousInit;$/;"	m	struct:_threadEnv	access:public
_threadMgr	core/src/main.c	/^typedef struct _threadMgr$/;"	s	file:
_threadMgr::hThread	core/src/main.c	/^	OSA_ThrHndl hThread[NUM_OF_THREADS];$/;"	m	struct:_threadMgr	file:	access:public
_threadMgr::threadEnv	core/src/main.c	/^    ThreadEnv   threadEnv;$/;"	m	struct:_threadMgr	file:	access:public
ackMbx	utils/osa/inc/osa_mbx.h	/^  OSA_MsgqHndl ackMbx;    \/\/\/< ACK mailbox$/;"	m	struct:__anon29	access:public
adapt_jitt_comp_ts	utils/ortp/inc/ortp/rtpsession.h	/^	int adapt_jitt_comp_ts;$/;"	m	struct:_JitterControl	access:public
adaptive	utils/ortp/inc/ortp/rtpsession.h	/^	bool_t adaptive;$/;"	m	struct:_JitterControl	access:public
add_client	core/inc/session.h	/^int add_client( char *destIp, int videoPort, int audioPort );$/;"	p	signature:( char *destIp, int videoPort, int audioPort )
add_client	core/src/session.c	/^int add_client( char *destIp, int base_video_port, int base_audio_port )$/;"	f	signature:( char *destIp, int base_video_port, int base_audio_port )
add_new_tcp_process_thr	network/inc/serverIf.h	/^int add_new_tcp_process_thr( ClientEnv * enp );$/;"	p	signature:( ClientEnv * enp )
add_new_tcp_process_thr	network/src/serverIf.c	/^int add_new_tcp_process_thr( ClientEnv * enp )$/;"	f	signature:( ClientEnv * enp )
all_max	utils/ortp/src/scheduler.h	/^	int		all_max;		\/* the highest pos in the all mask *\/$/;"	m	struct:_RtpScheduler	access:public
all_sessions	utils/ortp/src/scheduler.h	/^	SessionSet	all_sessions;  \/* mask of scheduled sessions *\/$/;"	m	struct:_RtpScheduler	access:public
alloc_sessionID	utils/com/src/rtpsend.c	/^int alloc_sessionID()$/;"	f
allocb	utils/ortp/inc/ortp/str_utils.h	/^mblk_t *allocb(int size, int unused);$/;"	p	signature:(int size, int unused)
allocb	utils/ortp/src/str_utils.c	/^mblk_t *allocb(int size, int pri)$/;"	f	signature:(int size, int pri)
allocb_with_buf	utils/ortp/inc/ortp/str_utils.h	/^mblk_t *allocb_with_buf(char *buf, int size, int pri, void (*freefn)(void*) );$/;"	p	signature:(char *buf, int size, int pri, void (*freefn)(void*) )
allocb_with_buf	utils/ortp/src/str_utils.c	/^mblk_t *allocb_with_buf(char *buf, int size, int pri, void (*freefn)(void*) )$/;"	f	signature:(char *buf, int size, int pri, void (*freefn)(void*) )
appendb	utils/ortp/inc/ortp/str_utils.h	/^mblk_t * appendb(mblk_t *mp, const char *data, int size, bool_t pad);$/;"	p	signature:(mblk_t *mp, const char *data, int size, bool_t pad)
appendb	utils/ortp/src/str_utils.c	/^mblk_t * appendb(mblk_t *mp, const char *data, int size, bool_t pad){$/;"	f	signature:(mblk_t *mp, const char *data, int size, bool_t pad)
arg	utils/ortp/src/port.c	/^	void * arg;$/;"	m	struct:thread_param	file:	access:public
array	utils/osa/src/osa_ipc.c	/^  unsigned short  *array;$/;"	m	union:semun	file:	access:public
audioBitRate	core/inc/common.h	/^    int audioBitRate;$/;"	m	struct:GlobalData	access:public
audioChannels	core/inc/common.h	/^    int audioChannels;$/;"	m	struct:GlobalData	access:public
audioEncodeThrFxn	core/inc/audioEncode.h	/^void* audioEncodeThrFxn(void *arg);$/;"	p	signature:(void *arg)
audioEncodeThrFxn	core/src/audioEncode.c	/^void* audioEncodeThrFxn(void *arg)$/;"	f	signature:(void *arg)
audioFlag	core/inc/common.h	/^    BOOL audioFlag[MAX_VIDEO_CHANNEL];   \/\/ indicate which channel need send audio$/;"	m	struct:GlobalData	access:public
audioIDs	core/src/session.c	/^    int audioIDs[MAX_VIDEO_CHANNEL\/CHS_PER_SESSION];$/;"	m	struct:sessionPair	file:	access:public
audioport	network/inc/command.h	/^			int audioport;$/;"	m	struct:_ServerPack::__anon1::__anon2	access:public
av_profile	utils/ortp/src/avprofile.c	/^RtpProfile av_profile;$/;"	v
av_profile_init	utils/ortp/src/avprofile.c	/^void av_profile_init(RtpProfile *profile)$/;"	f	signature:(RtpProfile *profile)
av_profile_init	utils/ortp/src/ortp.c	/^extern void av_profile_init(RtpProfile *profile);$/;"	p	file:	signature:(RtpProfile *profile)
b_cont	utils/ortp/inc/ortp/str_utils.h	/^	struct msgb *b_cont;$/;"	m	struct:msgb	typeref:struct:msgb::msgb	access:public
b_datap	utils/ortp/inc/ortp/str_utils.h	/^	struct datab *b_datap;$/;"	m	struct:msgb	typeref:struct:msgb::datab	access:public
b_next	utils/ortp/inc/ortp/str_utils.h	/^	struct msgb *b_next;$/;"	m	struct:msgb	typeref:struct:msgb::msgb	access:public
b_prev	utils/ortp/inc/ortp/str_utils.h	/^	struct msgb *b_prev;$/;"	m	struct:msgb	typeref:struct:msgb::msgb	access:public
b_rptr	utils/ortp/inc/ortp/str_utils.h	/^	char *b_rptr;$/;"	m	struct:msgb	access:public
b_wptr	utils/ortp/inc/ortp/str_utils.h	/^	char *b_wptr;$/;"	m	struct:msgb	access:public
bad	utils/ortp/inc/ortp/rtp.h	/^	uint64_t bad;			\/* packets that did not appear to be RTP *\/$/;"	m	struct:rtp_stats	access:public
bitrate	core/inc/common.h	/^    int  bitrate;               \/\/ bitrate$/;"	m	struct:GlobalData	access:public
bitrate	network/inc/command.h	/^			int bitrate;$/;"	m	struct:_ServerPack::__anon1::__anon5	access:public
bitsPerSample	core/inc/common.h	/^    int bitsPerSample;$/;"	m	struct:GlobalData	access:public
bits_per_sample	utils/ortp/inc/ortp/payloadtype.h	/^	char bits_per_sample;		\/* in case of continuous audio data *\/$/;"	m	struct:_PayloadType	access:public
bool_t	utils/ortp/inc/ortp/port.h	/^typedef unsigned char bool_t;$/;"	t
buf	utils/osa/src/osa_ipc.c	/^  struct semid_ds *buf;$/;"	m	union:semun	typeref:struct:semun::semid_ds	file:	access:public
bufInfo	utils/osa/inc/osa_buf.h	/^  OSA_BufInfo bufInfo[OSA_BUF_NUM_MAX];$/;"	m	struct:__anon27	access:public
bufPhyAddr	utils/osa/inc/osa_buf.h	/^  void *bufPhyAddr[OSA_BUF_NUM_MAX];$/;"	m	struct:__anon28	access:public
bufVirtAddr	utils/osa/inc/osa_buf.h	/^  void *bufVirtAddr[OSA_BUF_NUM_MAX];  $/;"	m	struct:__anon28	access:public
buffer	core/inc/session.h	/^    unsigned char *buffer;$/;"	m	struct:_SessionElement	access:public
cached_mp	utils/ortp/inc/ortp/rtpsession.h	/^	mblk_t *cached_mp;$/;"	m	struct:_RtcpStream	access:public
cached_mp	utils/ortp/inc/ortp/rtpsession.h	/^	mblk_t *cached_mp;$/;"	m	struct:_RtpStream	access:public
callback	utils/ortp/inc/ortp/rtpsignaltable.h	/^	RtpCallback callback[RTP_CALLBACK_TABLE_MAX_ENTRIES];$/;"	m	struct:_RtpSignalTable	access:public
canWrite	utils/ortp/src/payloadtype.c	/^static bool_t canWrite(PayloadType *pt){$/;"	f	file:	signature:(PayloadType *pt)
cc	utils/ortp/inc/ortp/rtp.h	/^	uint16_t cc:4;$/;"	m	struct:rtp_header	access:public
ch	utils/ortp/inc/ortp/rtcp.h	/^	rtcp_common_header_t ch;$/;"	m	struct:rtcp_bye	access:public
ch	utils/ortp/inc/ortp/rtcp.h	/^	rtcp_common_header_t ch;$/;"	m	struct:rtcp_rr	access:public
ch	utils/ortp/inc/ortp/rtcp.h	/^	rtcp_common_header_t ch;$/;"	m	struct:rtcp_sr	access:public
chId	core/inc/session.h	/^    unsigned char chId;$/;"	m	struct:_SessionElement	access:public
chId	network/inc/command.h	/^			uint8_t chId;$/;"	m	struct:_ServerPack::__anon1::__anon3	access:public
chId	network/inc/command.h	/^			uint8_t chId;$/;"	m	struct:_ServerPack::__anon1::__anon6	access:public
chId	utils/com/inc/rtpsend.h	/^    unsigned char chId;$/;"	m	struct:_sFrameHeader	access:public
channels	core/src/session.c	/^	int channels;$/;"	m	struct:sessionPair	file:	access:public
check_channel	core/src/session.c	/^BOOL check_channel( int clientID, int chId)$/;"	f	signature:( int clientID, int chId)
clean_tcp_listen_thread	network/inc/server.h	/^int clean_tcp_listen_thread();$/;"	p	signature:()
clean_tcp_listen_thread	network/src/server.c	/^int clean_tcp_listen_thread()$/;"	f
clientID	core/src/session.c	/^    int clientID;$/;"	m	struct:_clientObj	file:	access:public
clients	core/src/session.c	/^    ClientObj clients[MAX_CLIENT_NUM];$/;"	m	struct:_clientMgr	file:	access:public
clock_rate	utils/ortp/inc/ortp/payloadtype.h	/^	int clock_rate;$/;"	m	struct:_PayloadType	access:public
close_channel	core/inc/session.h	/^int close_channel( int clientID, int chId );$/;"	p	signature:( int clientID, int chId )
close_channel	core/src/session.c	/^int close_channel( int clientID, int chId )$/;"	f	signature:( int clientID, int chId )
close_socket	utils/ortp/inc/ortp/port.h	/^int close_socket(ortp_socket_t sock);$/;"	p	signature:(ortp_socket_t sock)
close_socket	utils/ortp/src/port.c	/^int close_socket(ortp_socket_t sock){$/;"	f	signature:(ortp_socket_t sock)
cmd	utils/osa/inc/osa_msgq.h	/^  Uint16        cmd;$/;"	m	struct:OSA_MsgHndl	access:public
cmdHeader	network/inc/command.h	/^	uint8_t cmdHeader[TCP_CMD_HEADER_LEN];$/;"	m	struct:_AlarmStatePack	access:public
cmdHeader	network/inc/command.h	/^	uint8_t cmdHeader[TCP_CMD_HEADER_LEN];$/;"	m	struct:_ReturnPack	access:public
cmdHeader	network/inc/command.h	/^	uint8_t cmdHeader[TCP_CMD_HEADER_LEN];$/;"	m	struct:_ServerPack	access:public
cmdHeader	utils/com/inc/rtpsend.h	/^    unsigned char cmdHeader[CMD_HEADER_LEN];$/;"	m	struct:_sFrameHeader	access:public
command	core/inc/session.h	/^    int command;$/;"	m	struct:_SessionElement	access:public
concatb	utils/ortp/inc/ortp/str_utils.h	/^mblk_t *concatb(mblk_t *mp, mblk_t *newm);$/;"	p	signature:(mblk_t *mp, mblk_t *newm)
concatb	utils/ortp/src/str_utils.c	/^mblk_t *concatb(mblk_t *mp, mblk_t *newm){$/;"	f	signature:(mblk_t *mp, mblk_t *newm)
cond	utils/ortp/inc/ortp/rtpsession.h	/^	ortp_cond_t  cond;$/;"	m	struct:_WaitPoint	access:public
cond	utils/osa/inc/osa_flg.h	/^  pthread_cond_t  cond;$/;"	m	struct:__anon23	access:public
cond	utils/osa/inc/osa_sem.h	/^  pthread_cond_t  cond;$/;"	m	struct:__anon22	access:public
cond	utils/osa/inc/pause.h	/^    pthread_cond_t  cond;$/;"	m	struct:Pause_Obj	access:public
cond	utils/osa/inc/rendezvous.h	/^    pthread_cond_t  cond;$/;"	m	struct:Rendezvous_Obj	access:public
condRd	utils/osa/inc/osa_msgq.h	/^  pthread_cond_t  condRd;$/;"	m	struct:__anon30	access:public
condRd	utils/osa/inc/osa_que.h	/^  pthread_cond_t  condRd;$/;"	m	struct:__anon31	access:public
condWr	utils/osa/inc/osa_msgq.h	/^  pthread_cond_t  condWr;$/;"	m	struct:__anon30	access:public
condWr	utils/osa/inc/osa_que.h	/^  pthread_cond_t  condWr;$/;"	m	struct:__anon31	access:public
content	utils/ortp/inc/ortp/rtcp.h	/^	char content[1];	$/;"	m	struct:sdes_item	access:public
content	utils/ortp/inc/ortp/rtcp.h	/^	char content[1];$/;"	m	struct:rtcp_bye_reason	access:public
contributing_sources	utils/ortp/inc/ortp/rtpsession.h	/^	queue_t contributing_sources;$/;"	m	struct:_RtpSession	access:public
copyb	utils/ortp/inc/ortp/str_utils.h	/^mblk_t *copyb(mblk_t *mp);$/;"	p	signature:(mblk_t *mp)
copyb	utils/ortp/src/str_utils.c	/^mblk_t *copyb(mblk_t *mp)$/;"	f	signature:(mblk_t *mp)
copymsg	utils/ortp/inc/ortp/str_utils.h	/^mblk_t *copymsg(mblk_t *mp);$/;"	p	signature:(mblk_t *mp)
copymsg	utils/ortp/src/str_utils.c	/^mblk_t *copymsg(mblk_t *mp)$/;"	f	signature:(mblk_t *mp)
corrective_slide	utils/ortp/inc/ortp/rtpsession.h	/^	int corrective_slide;$/;"	m	struct:_JitterControl	access:public
corrective_step	utils/ortp/inc/ortp/rtpsession.h	/^	int corrective_step;$/;"	m	struct:_JitterControl	access:public
count	utils/ortp/inc/ortp/rtpsession.h	/^	int count;$/;"	m	struct:_JitterControl	access:public
count	utils/ortp/inc/ortp/rtpsignaltable.h	/^	int count;$/;"	m	struct:_RtpSignalTable	access:public
count	utils/osa/inc/osa_buf.h	/^  int count;$/;"	m	struct:__anon26	access:public
count	utils/osa/inc/osa_msgq.h	/^  Uint32 count;$/;"	m	struct:__anon30	access:public
count	utils/osa/inc/osa_prf.h	/^  Uint32 count;$/;"	m	struct:__anon32	access:public
count	utils/osa/inc/osa_que.h	/^  Uint32 count;$/;"	m	struct:__anon31	access:public
count	utils/osa/inc/osa_sem.h	/^  Uint32 count;$/;"	m	struct:__anon22	access:public
count	utils/osa/inc/rendezvous.h	/^    int             count;$/;"	m	struct:Rendezvous_Obj	access:public
create_and_bind	utils/ortp/src/rtpsession.c	/^static ortp_socket_t create_and_bind(const char *addr, int port, int *sock_family){$/;"	f	file:	signature:(const char *addr, int port, int *sock_family)
create_and_bind_random	utils/ortp/src/rtpsession.c	/^static ortp_socket_t create_and_bind_random(const char *localip, int *sock_family, int *port){$/;"	f	file:	signature:(const char *localip, int *sock_family, int *port)
create_rtp_session	utils/com/inc/rtpsend.h	/^int create_rtp_session(char * ipStr,int port,int sessionType);$/;"	p	signature:(char * ipStr,int port,int sessionType)
create_rtp_session	utils/com/src/rtpsend.c	/^int create_rtp_session( char *ipStr, int port, int sessionType )$/;"	f	signature:( char *ipStr, int port, int sessionType )
csrc	utils/ortp/inc/ortp/rtcp.h	/^	uint32_t csrc;$/;"	m	struct:sdes_chunk	access:public
csrc	utils/ortp/inc/ortp/rtp.h	/^	uint32_t csrc[16];$/;"	m	struct:rtp_header	access:public
cum_num_packet_lost	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t cum_num_packet_lost:24; \/*cumulative number of packet lost*\/$/;"	m	struct:report_block	access:public
cum_packet_loss	utils/ortp/inc/ortp/rtp.h	/^	uint64_t cum_packet_loss; \/* cumulative number of packet lost *\/$/;"	m	struct:rtp_stats	access:public
cur	utils/ortp/src/posixtimer.c	/^static struct timeval orig,cur;$/;"	v	typeref:struct:	file:
curRd	utils/osa/inc/osa_msgq.h	/^  Uint32 curRd;$/;"	m	struct:__anon30	access:public
curRd	utils/osa/inc/osa_que.h	/^  Uint32 curRd;$/;"	m	struct:__anon31	access:public
curReaders	utils/osa/inc/osa_buf.h	/^  int curReaders[OSA_BUF_NUM_MAX];$/;"	m	struct:__anon27	access:public
curState	utils/osa/inc/osa_tsk.h	/^  Uint32 curState;          \/\/\/< Task state as defined by user$/;"	m	struct:OSA_TskHndl	access:public
curTime	utils/osa/inc/osa_prf.h	/^  Uint32 curTime;$/;"	m	struct:__anon32	access:public
curTimeStamp	utils/com/src/rtpsend.c	/^    uint32_t    curTimeStamp;$/;"	m	struct:_sessionObj	file:	access:public
curValue	utils/osa/inc/osa_prf.h	/^  Uint32 curValue;$/;"	m	struct:__anon32	access:public
curWr	utils/osa/inc/osa_msgq.h	/^  Uint32 curWr;$/;"	m	struct:__anon30	access:public
curWr	utils/osa/inc/osa_que.h	/^  Uint32 curWr;$/;"	m	struct:__anon31	access:public
current_tev	utils/ortp/inc/ortp/rtpsession.h	/^	mblk_t *current_tev;		\/* the pending telephony events *\/$/;"	m	struct:_RtpSession	access:public
data	utils/ortp/src/utils.h	/^	void *data;$/;"	m	struct:_OList	access:public
data	utils/osa/inc/osa_ipc.h	/^  Uint8 data[OSA_IPC_MBX_MSG_SIZE_MAX];$/;"	m	struct:__anon21	access:public
dataType	core/inc/session.h	/^    unsigned char dataType; $/;"	m	struct:_SessionElement	access:public
dataType	utils/com/inc/rtpsend.h	/^    unsigned char dataType; $/;"	m	struct:_sFrameHeader	access:public
datab	utils/ortp/inc/ortp/str_utils.h	/^typedef struct datab$/;"	s
datab::db_base	utils/ortp/inc/ortp/str_utils.h	/^	char *db_base;$/;"	m	struct:datab	access:public
datab::db_freefn	utils/ortp/inc/ortp/str_utils.h	/^	void (*db_freefn)(void*);$/;"	m	struct:datab	access:public
datab::db_lim	utils/ortp/inc/ortp/str_utils.h	/^	char *db_lim;$/;"	m	struct:datab	access:public
datab::ref_count	utils/ortp/inc/ortp/str_utils.h	/^	int ref_count;$/;"	m	struct:datab	access:public
db_base	utils/ortp/inc/ortp/str_utils.h	/^	char *db_base;$/;"	m	struct:datab	access:public
db_freefn	utils/ortp/inc/ortp/str_utils.h	/^	void (*db_freefn)(void*);$/;"	m	struct:datab	access:public
db_lim	utils/ortp/inc/ortp/str_utils.h	/^	char *db_lim;$/;"	m	struct:datab	access:public
dblk_t	utils/ortp/inc/ortp/str_utils.h	/^} dblk_t;$/;"	t	typeref:struct:datab
del_client	core/inc/session.h	/^int del_client( int clientId );$/;"	p	signature:( int clientId )
del_client	core/src/session.c	/^int del_client( int clientId )$/;"	f	signature:( int clientId )
delay_snc_last_sr	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t delay_snc_last_sr; \/*delay since last sr*\/$/;"	m	struct:report_block	access:public
delete_session_tsk	core/src/session.c	/^int delete_session_tsk( ThreadEnv *envp  )$/;"	f	signature:( ThreadEnv *envp )
discarded	utils/ortp/inc/ortp/rtp.h	/^	uint64_t discarded;		\/* incoming packets discarded because the queue exceeds its max size *\/$/;"	m	struct:rtp_stats	access:public
dupb	utils/ortp/inc/ortp/str_utils.h	/^mblk_t *dupb(mblk_t *m);$/;"	p	signature:(mblk_t *m)
dupb	utils/ortp/src/str_utils.c	/^mblk_t *dupb(mblk_t *mp)$/;"	f	signature:(mblk_t *mp)
dupmsg	utils/ortp/inc/ortp/str_utils.h	/^mblk_t	*dupmsg(mblk_t* m);$/;"	p	signature:(mblk_t* m)
dupmsg	utils/ortp/src/str_utils.c	/^mblk_t	*dupmsg(mblk_t* m)$/;"	f	signature:(mblk_t* m)
duration	utils/ortp/inc/ortp/telephonyevents.h	/^	uint32_t duration:16;$/;"	m	struct:_telephone_event	access:public
dwsplit_t	utils/ortp/src/utils.h	/^} dwsplit_t;$/;"	t	typeref:struct:_dwsplit_t
e_max	utils/ortp/src/scheduler.h	/^	int		e_max;$/;"	m	struct:_RtpScheduler	access:public
e_sessions	utils/ortp/src/scheduler.h	/^	SessionSet	e_sessions;	\/* mask of session that have error event *\/$/;"	m	struct:_RtpScheduler	access:public
emptyQue	utils/osa/inc/osa_buf.h	/^  OSA_QueHndl emptyQue;$/;"	m	struct:__anon27	access:public
event	utils/ortp/inc/ortp/telephonyevents.h	/^	uint32_t event:8;$/;"	m	struct:_telephone_event	access:public
ext_high_seq_num_rec	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t ext_high_seq_num_rec; \/*extended highest sequence number received *\/$/;"	m	struct:report_block	access:public
extbit	utils/ortp/inc/ortp/rtp.h	/^	uint16_t extbit:1;$/;"	m	struct:rtp_header	access:public
fds_bits	utils/ortp/inc/ortp/sessionset.h	/^    ortp__fd_mask fds_bits[ORTP__FD_SETSIZE \/ ORTP__NFDBITS];$/;"	m	struct:__anon14	access:public
flag	core/src/session.c	/^    BOOL flag[MAX_VIDEO_CHANNEL];$/;"	m	struct:_clientObj	file:	access:public
flags	utils/ortp/inc/ortp/payloadtype.h	/^	int flags;$/;"	m	struct:_PayloadType	access:public
flags	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t flags;$/;"	m	struct:_RtpSession	access:public
flags	utils/osa/inc/osa_buf.h	/^  int flags;$/;"	m	struct:__anon26	access:public
flags	utils/osa/inc/osa_msgq.h	/^  Uint16        flags;$/;"	m	struct:OSA_MsgHndl	access:public
flushq	utils/ortp/inc/ortp/str_utils.h	/^void flushq(queue_t *q, int how);$/;"	p	signature:(queue_t *q, int how)
flushq	utils/ortp/src/str_utils.c	/^void flushq(queue_t *q, int how)$/;"	f	signature:(queue_t *q, int how)
fncMain	utils/osa/inc/osa_tsk.h	/^  OSA_TskFncMain fncMain;   \/\/\/< Task Main, this function is entered when a message is received by the process$/;"	m	struct:OSA_TskHndl	access:public
fraction_lost	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t fraction_lost:8;$/;"	m	struct:report_block	access:public
freeb	utils/ortp/inc/ortp/str_utils.h	/^void freeb(mblk_t *m);$/;"	p	signature:(mblk_t *m)
freeb	utils/ortp/src/str_utils.c	/^void freeb(mblk_t *mp)$/;"	f	signature:(mblk_t *mp)
freemsg	utils/ortp/inc/ortp/str_utils.h	/^void freemsg(mblk_t *mp);$/;"	p	signature:(mblk_t *mp)
freemsg	utils/ortp/src/str_utils.c	/^void freemsg(mblk_t *mp)$/;"	f	signature:(mblk_t *mp)
fullQue	utils/osa/inc/osa_buf.h	/^  OSA_QueHndl fullQue;$/;"	m	struct:__anon27	access:public
func	utils/ortp/src/port.c	/^	void * (*func)(void *);$/;"	m	struct:thread_param	file:	access:public
gOSA_TEST_strMainMenu	utils/osa/src/osa_test.c	/^char gOSA_TEST_strMainMenu[] =$/;"	v
gOSA_TEST_strMenu	utils/osa/src/osa_test.c	/^char gOSA_TEST_strMenu[] =$/;"	v
gOSA_testMbx	utils/osa/src/osa_test.c	/^OSA_MbxHndl gOSA_testMbx;$/;"	v
gOSA_testPseq	utils/osa/src/osa_test.c	/^OSA_TskHndl gOSA_testPseq;$/;"	v
gOSA_testPstA	utils/osa/src/osa_test.c	/^OSA_TskHndl gOSA_testPstA;$/;"	v
gOSA_testPstB	utils/osa/src/osa_test.c	/^OSA_TskHndl gOSA_testPstB;$/;"	v
gOSA_testPstC	utils/osa/src/osa_test.c	/^OSA_TskHndl gOSA_testPstC;$/;"	v
g_NetBackSessionFifo	core/src/session.c	/^FifoUtil_Obj g_NetBackSessionFifo;$/;"	v
g_NetSessionFifos	core/src/session.c	/^FifoUtil_Obj g_NetSessionFifos[MAX_VIDEO_CHANNEL \/ CHS_PER_SESSION];$/;"	v
g_clients	core/src/session.c	/^ClientMgr g_clients;$/;"	v
g_exitState	core/src/main.c	/^ExitState g_exitState;$/;"	v
g_rtpSessionMgr	utils/com/src/rtpsend.c	/^SessionObj g_rtpSessionMgr[MAX_SESSION_NUM];$/;"	v
g_serverEnp	network/src/server.c	/^static ServerEnv g_serverEnp;$/;"	v	file:
g_ssrc	utils/com/src/rtpsend.c	/^char *g_ssrc;$/;"	v
g_threadMgr	core/src/main.c	/^ThreadMgr g_threadMgr;$/;"	v
gai_strerrorA	utils/ortp/src/port.c	/^char * WSAAPI gai_strerrorA(int errnum){$/;"	f	signature:(int errnum)
gbl	core/src/main.c	/^GlobalData gbl = {0};$/;"	v
gblCheckAudioChannel	core/inc/common.h	/^static inline BOOL gblCheckAudioChannel( int chId )$/;"	f	signature:( int chId )
gblCheckVideoChannel	core/inc/common.h	/^static inline BOOL gblCheckVideoChannel( int chId )$/;"	f	signature:( int chId )
gblClearQuit	core/inc/common.h	/^static inline void gblClearQuit(void)$/;"	f	signature:(void)
gblCloseAudioChannel	core/inc/common.h	/^static inline void gblCloseAudioChannel( int chId )$/;"	f	signature:( int chId )
gblCloseVideoChannel	core/inc/common.h	/^static inline void gblCloseVideoChannel( int chId )$/;"	f	signature:( int chId )
gblGetAudBitRate	core/inc/common.h	/^static inline int gblGetAudBitRate()$/;"	f	signature:()
gblGetAudBitsPerSample	core/inc/common.h	/^static inline int gblGetAudBitsPerSample()$/;"	f	signature:()
gblGetAudChannels	core/inc/common.h	/^static inline int gblGetAudChannels()$/;"	f	signature:()
gblGetAudSampleRate	core/inc/common.h	/^static inline int gblGetAudSampleRate()$/;"	f	signature:()
gblGetBitRate	core/inc/common.h	/^static inline int gblGetBitRate()$/;"	f	signature:()
gblGetExitState	core/inc/common.h	/^static inline ExitState gblGetExitState()$/;"	f	signature:()
gblGetHeight	core/inc/common.h	/^static inline int gblGetHeight()$/;"	f	signature:()
gblGetQuit	core/inc/common.h	/^static inline int gblGetQuit(void)$/;"	f	signature:(void)
gblGetResolution	core/inc/common.h	/^static inline int gblGetResolution()$/;"	f	signature:()
gblGetStorePath	core/inc/common.h	/^static inline char *gblGetStorePath()$/;"	f	signature:()
gblGetSysMode	core/inc/common.h	/^static inline int gblGetSysMode()$/;"	f	signature:()
gblGetVideoChannels	core/inc/common.h	/^static inline int gblGetVideoChannels()$/;"	f	signature:()
gblGetWidth	core/inc/common.h	/^static inline int gblGetWidth()$/;"	f	signature:()
gblOpenAudioChannel	core/inc/common.h	/^static inline void gblOpenAudioChannel( int chId )$/;"	f	signature:( int chId )
gblOpenVideoChannel	core/inc/common.h	/^static inline void gblOpenVideoChannel( int chId )$/;"	f	signature:( int chId )
gblSetAudioParam	core/inc/common.h	/^static  inline void gblSetAudioParam(int aud_sampleRate,int aud_bitsPerSample,int aud_channels,int aud_bitRate)$/;"	f	signature:(int aud_sampleRate,int aud_bitsPerSample,int aud_channels,int aud_bitRate)
gblSetBitRate	core/inc/common.h	/^static inline void gblSetBitRate( int bitrate )$/;"	f	signature:( int bitrate )
gblSetExitState	core/inc/common.h	/^static inline void gblSetExitState( ExitState state )$/;"	f	signature:( ExitState state )
gblSetQuit	core/inc/common.h	/^static inline void gblSetQuit(void)$/;"	f	signature:(void)
gblSetResolution	core/inc/common.h	/^static inline void gblSetResolution( int resolution )$/;"	f	signature:( int resolution )
gblSetStorePath	core/inc/common.h	/^static inline int gblSetStorePath( char *path )$/;"	f	signature:( char *path )
gblSetSysMode	core/inc/common.h	/^static inline void gblSetSysMode( int sysmode )$/;"	f	signature:( int sysmode )
gblSetVideoChannels	core/inc/common.h	/^static inline int gblSetVideoChannels( int num)$/;"	f	signature:( int num)
getSocketError	utils/ortp/inc/ortp/port.h	145;"	d
getSocketError	utils/ortp/inc/ortp/port.h	73;"	d
getSocketErrorCode	utils/ortp/inc/ortp/port.h	144;"	d
getSocketErrorCode	utils/ortp/inc/ortp/port.h	74;"	d
getWinSocketError	utils/ortp/inc/ortp/port.h	/^const char *getWinSocketError(int error);$/;"	p	signature:(int error)
getWinSocketError	utils/ortp/src/port.c	/^const char *getWinSocketError(int error)$/;"	f	signature:(int error)
getq	utils/ortp/inc/ortp/str_utils.h	/^mblk_t * getq(queue_t *q);$/;"	p	signature:(queue_t *q)
getq	utils/ortp/src/str_utils.c	/^mblk_t *getq(queue_t *q)$/;"	f	signature:(queue_t *q)
gettimeofday	utils/ortp/inc/ortp/port.h	/^int gettimeofday (struct timeval *tv, void* tz);$/;"	p	signature:(struct timeval *tv, void* tz)
gettimeofday	utils/ortp/src/port.c	/^int gettimeofday (struct timeval *tv, void* tz) $/;"	f	signature:(struct timeval *tv, void* tz)
hThread	core/src/main.c	/^	OSA_ThrHndl hThread[NUM_OF_THREADS];$/;"	m	struct:_threadMgr	file:	access:public
hi	utils/ortp/src/utils.h	/^	uint16_t hi;$/;"	m	struct:_dwsplit_t	access:public
hndl	utils/osa/inc/osa_thr.h	/^  pthread_t      hndl;$/;"	m	struct:__anon24	access:public
hton24	utils/ortp/src/utils.h	74;"	d
hton24	utils/ortp/src/utils.h	76;"	d
hw_recv	utils/ortp/inc/ortp/rtp.h	/^	uint64_t hw_recv;		\/* bytes of payload received *\/$/;"	m	struct:rtp_stats	access:public
hw_recv_pt	utils/ortp/inc/ortp/rtpsession.h	/^	int hw_recv_pt; \/* recv payload type before jitter buffer *\/$/;"	m	struct:_RtpSession	access:public
hwrcv_diff_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t hwrcv_diff_ts;$/;"	m	struct:_RtpStream	access:public
hwrcv_extseq	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t hwrcv_extseq; \/* last received on socket extended sequence number *\/$/;"	m	struct:_RtpStream	access:public
hwrcv_seq_at_last_SR	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t hwrcv_seq_at_last_SR;$/;"	m	struct:_RtpStream	access:public
hwrcv_since_last_SR	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t hwrcv_since_last_SR;$/;"	m	struct:_RtpStream	access:public
id	utils/osa/inc/osa_ipc.h	/^  int id;$/;"	m	struct:__anon18	access:public
id	utils/osa/inc/osa_ipc.h	/^  int id;$/;"	m	struct:__anon19	access:public
id	utils/osa/inc/osa_ipc.h	/^  int id;$/;"	m	struct:__anon20	access:public
inet_aton	utils/ortp/src/port.c	/^	int inet_aton (const char * cp, struct in_addr * addr)$/;"	f	signature:(const char * cp, struct in_addr * addr)
init_random_number_generator	utils/ortp/src/ortp.c	/^static void init_random_number_generator(){$/;"	f	file:
init_session_tsk	core/src/session.c	/^int init_session_tsk()$/;"	f
inline	utils/ortp/inc/ortp/port.h	141;"	d
insq	utils/ortp/inc/ortp/str_utils.h	/^void insq(queue_t *q,mblk_t *emp, mblk_t *mp);$/;"	p	signature:(queue_t *q,mblk_t *emp, mblk_t *mp)
insq	utils/ortp/src/str_utils.c	/^void insq(queue_t *q,mblk_t *emp, mblk_t *mp)$/;"	f	signature:(queue_t *q,mblk_t *emp, mblk_t *mp)
int32_t	utils/ortp/inc/ortp/port.h	/^typedef  int int32_t;$/;"	t
int64_t	utils/ortp/inc/ortp/port.h	/^typedef  __int64 int64_t;$/;"	t
inter_jitter	utils/ortp/inc/ortp/rtpsession.h	/^	float inter_jitter;	\/* interarrival jitter as defined in the RFC *\/$/;"	m	struct:_JitterControl	access:public
interarrival_jitter	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t interarrival_jitter;$/;"	m	struct:report_block	access:public
interval	utils/ortp/src/rtptimer.h	/^	struct timeval interval;$/;"	m	struct:_RtpTimer	typeref:struct:_RtpTimer::timeval	access:public
is_would_block_error	utils/ortp/src/utils.h	81;"	d
is_would_block_error	utils/ortp/src/utils.h	83;"	d
item_type	utils/ortp/inc/ortp/rtcp.h	/^	uint8_t item_type;$/;"	m	struct:sdes_item	access:public
jitt_comp	utils/ortp/inc/ortp/rtpsession.h	/^	int jitt_comp;   \/* the user jitt_comp in miliseconds*\/$/;"	m	struct:_JitterControl	access:public
jitt_comp_ts	utils/ortp/inc/ortp/rtpsession.h	/^	int jitt_comp_ts; \/* the jitt_comp converted in rtp time (same unit as timestamp) *\/$/;"	m	struct:_JitterControl	access:public
jittctl	utils/ortp/inc/ortp/rtpsession.h	/^	JitterControl jittctl;$/;"	m	struct:_RtpStream	access:public
jitter	utils/ortp/inc/ortp/rtpsession.h	/^	float jitter;$/;"	m	struct:_JitterControl	access:public
jitter_control_adaptive_enabled	utils/ortp/src/jitterctl.h	35;"	d
jitter_control_dump_stats	utils/ortp/src/jitterctl.c	/^void jitter_control_dump_stats(JitterControl *ctl){$/;"	f	signature:(JitterControl *ctl)
jitter_control_enable_adaptive	utils/ortp/src/jitterctl.c	/^void jitter_control_enable_adaptive(JitterControl *ctl, bool_t val){$/;"	f	signature:(JitterControl *ctl, bool_t val)
jitter_control_enable_adaptive	utils/ortp/src/jitterctl.h	/^void jitter_control_enable_adaptive(JitterControl *ctl, bool_t val);$/;"	p	signature:(JitterControl *ctl, bool_t val)
jitter_control_init	utils/ortp/src/jitterctl.c	/^void jitter_control_init(JitterControl *ctl, int base_jiitt_time, PayloadType *payload){$/;"	f	signature:(JitterControl *ctl, int base_jiitt_time, PayloadType *payload)
jitter_control_init	utils/ortp/src/jitterctl.h	/^void jitter_control_init(JitterControl *ctl, int base_jiitt_time, PayloadType *pt);$/;"	p	signature:(JitterControl *ctl, int base_jiitt_time, PayloadType *pt)
jitter_control_new_packet	utils/ortp/src/jitterctl.c	/^void jitter_control_new_packet(JitterControl *ctl, uint32_t packet_ts, uint32_t cur_str_ts, int32_t * slide, int32_t *safe_delay){$/;"	f	signature:(JitterControl *ctl, uint32_t packet_ts, uint32_t cur_str_ts, int32_t * slide, int32_t *safe_delay)
jitter_control_new_packet	utils/ortp/src/jitterctl.h	/^void jitter_control_new_packet(JitterControl *ctl, uint32_t packet_ts, uint32_t cur_str_ts,$/;"	p	signature:(JitterControl *ctl, uint32_t packet_ts, uint32_t cur_str_ts, int32_t * slide, int32_t *safe_delay)
jitter_control_set_payload	utils/ortp/src/jitterctl.c	/^void jitter_control_set_payload(JitterControl *ctl, PayloadType *pt){$/;"	f	signature:(JitterControl *ctl, PayloadType *pt)
jitter_control_set_payload	utils/ortp/src/jitterctl.h	/^void jitter_control_set_payload(JitterControl *ctl, PayloadType *pt);$/;"	p	signature:(JitterControl *ctl, PayloadType *pt)
last_rcv_SR_time	utils/ortp/inc/ortp/rtpsession.h	/^	struct timeval last_rcv_SR_time;   \/* time at which last SR was received  *\/$/;"	m	struct:_RtpStream	typeref:struct:_RtpStream::timeval	access:public
last_rcv_SR_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t last_rcv_SR_ts;     \/* NTP timestamp (middle 32 bits) of last received SR *\/$/;"	m	struct:_RtpStream	access:public
last_recv_time	utils/ortp/inc/ortp/rtpsession.h	/^	struct timeval last_recv_time; \/* Time of receiving the RTP\/RTCP packet. *\/$/;"	m	struct:_RtpSession	typeref:struct:_RtpSession::timeval	access:public
last_rtcp_report_snt_r	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t last_rtcp_report_snt_r;	\/* the time of the last rtcp report sent, in recv timestamp unit *\/$/;"	m	struct:_RtpStream	access:public
last_rtcp_report_snt_s	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t last_rtcp_report_snt_s;	\/* the time of the last rtcp report sent, in send timestamp unit *\/$/;"	m	struct:_RtpStream	access:public
late_ticks	utils/ortp/src/posixtimer.c	/^int      late_ticks;$/;"	v
len	core/inc/session.h	/^    uint32_t len;$/;"	m	struct:_SessionElement	access:public
len	utils/com/inc/rtpsend.h	/^    uint32_t len;$/;"	m	struct:_sFrameHeader	access:public
len	utils/ortp/inc/ortp/rtcp.h	/^	uint8_t len;$/;"	m	struct:rtcp_bye_reason	access:public
len	utils/ortp/inc/ortp/rtcp.h	/^	uint8_t len;$/;"	m	struct:sdes_item	access:public
len	utils/osa/inc/osa_msgq.h	/^  Uint32 len;$/;"	m	struct:__anon30	access:public
len	utils/osa/inc/osa_que.h	/^  Uint32 len;$/;"	m	struct:__anon31	access:public
length	utils/ortp/inc/ortp/rtcp.h	/^        uint16_t length:16;$/;"	m	struct:rtcp_common_header	access:public
list	utils/ortp/src/scheduler.h	/^	RtpSession *list;	\/* list of scheduled sessions*\/$/;"	m	struct:_RtpScheduler	access:public
listenThrFxn	network/src/server.c	/^static void *listenThrFxn( void * arg);$/;"	p	file:	signature:( void * arg)
listenThrFxn	network/src/server.c	/^void *listenThrFxn( void * arg)$/;"	f	signature:( void * arg)
lo	utils/ortp/src/utils.h	/^	uint16_t lo;$/;"	m	struct:_dwsplit_t	access:public
loc_port	utils/ortp/inc/ortp/rtpsession.h	/^	int loc_port;$/;"	m	struct:_RtpStream	access:public
lock	utils/ortp/inc/ortp/rtpsession.h	/^	ortp_mutex_t lock;$/;"	m	struct:_RtpSession	access:public
lock	utils/ortp/inc/ortp/rtpsession.h	/^	ortp_mutex_t lock;$/;"	m	struct:_WaitPoint	access:public
lock	utils/ortp/src/scheduler.h	/^	ortp_mutex_t	lock;$/;"	m	struct:_RtpScheduler	access:public
lock	utils/osa/inc/osa_flg.h	/^  pthread_mutex_t lock;$/;"	m	struct:__anon23	access:public
lock	utils/osa/inc/osa_msgq.h	/^  pthread_mutex_t lock;$/;"	m	struct:__anon30	access:public
lock	utils/osa/inc/osa_mutex.h	/^  pthread_mutex_t lock;$/;"	m	struct:__anon25	access:public
lock	utils/osa/inc/osa_que.h	/^  pthread_mutex_t lock;$/;"	m	struct:__anon31	access:public
lock	utils/osa/inc/osa_sem.h	/^  pthread_mutex_t lock;$/;"	m	struct:__anon22	access:public
lsr	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t lsr; \/*last SR *\/$/;"	m	struct:report_block	access:public
m_Client	network/inc/serverIf.h	/^	ClientEnv m_Client[CLIENTNUM]; $/;"	m	struct:_ServerEnv	access:public
m_Index	network/inc/serverIf.h	/^	int m_Index;$/;"	m	struct:_ClientEnv	access:public
m_Ip	network/inc/serverIf.h	/^    char  m_Ip[20];$/;"	m	struct:_ClientEnv	access:public
m_ListenThr	network/inc/serverIf.h	/^	OSA_ThrHndl m_ListenThr;$/;"	m	struct:_ServerEnv	access:public
m_Socket	network/inc/serverIf.h	/^	int   m_Socket;$/;"	m	struct:_ClientEnv	access:public
m_Socket	network/inc/serverIf.h	/^	int m_Socket;$/;"	m	struct:_ServerEnv	access:public
m_Thr	network/inc/serverIf.h	/^	OSA_ThrHndl m_Thr;$/;"	m	struct:_ClientEnv	access:public
m_clientCount	network/inc/serverIf.h	/^	int m_clientCount;$/;"	m	struct:_ServerEnv	access:public
main	core/src/main.c	/^int main()$/;"	f
markbit	utils/ortp/inc/ortp/rtp.h	/^	uint16_t markbit:1;$/;"	m	struct:rtp_header	access:public
mask_pos	utils/ortp/inc/ortp/rtpsession.h	/^	int mask_pos;	\/* the position in the scheduler mask of RtpSession *\/$/;"	m	struct:_RtpSession	access:public
maxCount	utils/osa/inc/osa_sem.h	/^  Uint32 maxCount;$/;"	m	struct:__anon22	access:public
maxTime	utils/osa/inc/osa_prf.h	/^  Uint32 maxTime;$/;"	m	struct:__anon32	access:public
maxVal	utils/osa/inc/osa_ipc.h	/^  int maxVal;$/;"	m	struct:__anon20	access:public
maxValue	utils/osa/inc/osa_prf.h	/^  Uint32 maxValue;$/;"	m	struct:__anon32	access:public
max_rq_size	utils/ortp/inc/ortp/rtpsession.h	/^	int max_rq_size;$/;"	m	struct:_RtpStream	access:public
max_sessions	utils/ortp/src/scheduler.h	/^	int max_sessions;		\/* the number of position in the masks *\/$/;"	m	struct:_RtpScheduler	access:public
mblk_init	utils/ortp/inc/ortp/str_utils.h	/^void mblk_init(mblk_t *mp);$/;"	p	signature:(mblk_t *mp)
mblk_init	utils/ortp/src/str_utils.c	/^void mblk_init(mblk_t *mp)$/;"	f	signature:(mblk_t *mp)
mblk_t	utils/ortp/inc/ortp/str_utils.h	/^} mblk_t;$/;"	t	typeref:struct:msgb
mbxHndl	utils/osa/inc/osa_tsk.h	/^  OSA_MbxHndl mbxHndl;      \/\/\/< Mailbox handle$/;"	m	struct:OSA_TskHndl	access:public
members	utils/osa/inc/osa_ipc.h	/^  int members;$/;"	m	struct:__anon20	access:public
mime_type	utils/ortp/inc/ortp/payloadtype.h	/^	char *mime_type;$/;"	m	struct:_PayloadType	access:public
minTime	utils/osa/inc/osa_prf.h	/^  Uint32 minTime;$/;"	m	struct:__anon32	access:public
minValue	utils/osa/inc/osa_prf.h	/^  Uint32 minValue;$/;"	m	struct:__anon32	access:public
mode	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSessionMode mode;$/;"	m	struct:_RtpSession	access:public
msg_to_buf	utils/ortp/src/rtpsession.c	/^int msg_to_buf (mblk_t * mp, char *buffer, int len)$/;"	f	signature:(mblk_t * mp, char *buffer, int len)
msgappend	utils/ortp/inc/ortp/str_utils.h	/^void msgappend(mblk_t *mp, const char *data, int size, bool_t pad);$/;"	p	signature:(mblk_t *mp, const char *data, int size, bool_t pad)
msgappend	utils/ortp/src/str_utils.c	/^void msgappend(mblk_t *mp, const char *data, int size, bool_t pad){$/;"	f	signature:(mblk_t *mp, const char *data, int size, bool_t pad)
msgb	utils/ortp/inc/ortp/str_utils.h	/^typedef struct msgb$/;"	s
msgb::b_cont	utils/ortp/inc/ortp/str_utils.h	/^	struct msgb *b_cont;$/;"	m	struct:msgb	typeref:struct:msgb::msgb	access:public
msgb::b_datap	utils/ortp/inc/ortp/str_utils.h	/^	struct datab *b_datap;$/;"	m	struct:msgb	typeref:struct:msgb::datab	access:public
msgb::b_next	utils/ortp/inc/ortp/str_utils.h	/^	struct msgb *b_next;$/;"	m	struct:msgb	typeref:struct:msgb::msgb	access:public
msgb::b_prev	utils/ortp/inc/ortp/str_utils.h	/^	struct msgb *b_prev;$/;"	m	struct:msgb	typeref:struct:msgb::msgb	access:public
msgb::b_rptr	utils/ortp/inc/ortp/str_utils.h	/^	char *b_rptr;$/;"	m	struct:msgb	access:public
msgb::b_wptr	utils/ortp/inc/ortp/str_utils.h	/^	char *b_wptr;$/;"	m	struct:msgb	access:public
msgb::reserved1	utils/ortp/inc/ortp/str_utils.h	/^	uint32_t reserved1;$/;"	m	struct:msgb	access:public
msgb::reserved2	utils/ortp/inc/ortp/str_utils.h	/^	uint32_t reserved2;$/;"	m	struct:msgb	access:public
msgdsize	utils/ortp/inc/ortp/str_utils.h	/^int msgdsize(mblk_t *mp);$/;"	p	signature:(mblk_t *mp)
msgdsize	utils/ortp/src/str_utils.c	/^int msgdsize(mblk_t *mp)$/;"	f	signature:(mblk_t *mp)
msgpullup	utils/ortp/inc/ortp/str_utils.h	/^mblk_t * msgpullup(mblk_t *mp,int len);$/;"	p	signature:(mblk_t *mp,int len)
msgpullup	utils/ortp/src/str_utils.c	/^mblk_t * msgpullup(mblk_t *mp,int len)$/;"	f	signature:(mblk_t *mp,int len)
mutex	core/inc/common.h	/^    pthread_mutex_t mutex;               \/\/ Mutex to protect the global data $/;"	m	struct:GlobalData	access:public
mutex	utils/osa/inc/pause.h	/^    pthread_mutex_t mutex;$/;"	m	struct:Pause_Obj	access:public
mutex	utils/osa/inc/rendezvous.h	/^    pthread_mutex_t mutex;$/;"	m	struct:Rendezvous_Obj	access:public
name	utils/ortp/inc/ortp/payloadtype.h	/^	char *name;$/;"	m	struct:_RtpProfile	access:public
next	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSession *next;	\/* next RtpSession, when the session are enqueued by the scheduler *\/$/;"	m	struct:_RtpSession	access:public
next	utils/ortp/src/utils.h	/^	struct _OList *next;$/;"	m	struct:_OList	typeref:struct:_OList::_OList	access:public
normal_bitrate	utils/ortp/inc/ortp/payloadtype.h	/^	int normal_bitrate;	\/*in bit\/s *\/$/;"	m	struct:_PayloadType	access:public
notify_events_ended	utils/ortp/src/telephonyevents.c	/^static void notify_events_ended(RtpSession *session, telephone_event_t *events, int num){$/;"	f	file:	signature:(RtpSession *session, telephone_event_t *events, int num)
ntoh24	utils/ortp/src/utils.h	78;"	d
ntp_timestamp_lsw	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t ntp_timestamp_lsw;$/;"	m	struct:sender_info	access:public
ntp_timestamp_msw	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t ntp_timestamp_msw;$/;"	m	struct:sender_info	access:public
numBuf	utils/osa/inc/osa_buf.h	/^  int numBuf;$/;"	m	struct:__anon27	access:public
numBuf	utils/osa/inc/osa_buf.h	/^  int numBuf;$/;"	m	struct:__anon28	access:public
numReaders	utils/osa/inc/osa_buf.h	/^  int numReaders;$/;"	m	struct:__anon27	access:public
numReaders	utils/osa/inc/osa_buf.h	/^  int numReaders;$/;"	m	struct:__anon28	access:public
number	network/inc/command.h	/^	int number;$/;"	m	struct:_AlarmStatePack	access:public
o_list_append	utils/ortp/src/utils.c	/^OList * o_list_append(OList *elem, void * data){$/;"	f	signature:(OList *elem, void * data)
o_list_append	utils/ortp/src/utils.h	/^OList * o_list_append(OList *elem, void * data);$/;"	p	signature:(OList *elem, void * data)
o_list_free	utils/ortp/src/utils.c	/^OList * o_list_free(OList *list){$/;"	f	signature:(OList *list)
o_list_free	utils/ortp/src/utils.h	/^OList * o_list_free(OList *elem);$/;"	p	signature:(OList *elem)
o_list_new	utils/ortp/src/utils.c	/^OList *o_list_new(void *data){$/;"	f	signature:(void *data)
o_list_next	utils/ortp/src/utils.h	39;"	d
offset0	utils/ortp/src/avprofile.c	/^char offset0=0;$/;"	v
offset0xD5	utils/ortp/src/avprofile.c	/^char offset0xD5=(char)0xD5; $/;"	v
offset127	utils/ortp/src/avprofile.c	/^char offset127=127; $/;"	v
offset_time	utils/ortp/src/posixtimer.c	/^static DWORD offset_time;$/;"	v	file:
olddiff	utils/ortp/inc/ortp/rtpsession.h	/^	int olddiff;$/;"	m	struct:_JitterControl	access:public
on_network_error	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_network_error;$/;"	m	struct:_RtpSession	access:public
on_payload_type_changed	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_payload_type_changed;$/;"	m	struct:_RtpSession	access:public
on_rtcp_bye	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_rtcp_bye;$/;"	m	struct:_RtpSession	access:public
on_ssrc_changed	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_ssrc_changed;$/;"	m	struct:_RtpSession	access:public
on_telephone_event	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_telephone_event;$/;"	m	struct:_RtpSession	access:public
on_telephone_event_packet	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_telephone_event_packet;$/;"	m	struct:_RtpSession	access:public
on_timestamp_jump	utils/ortp/inc/ortp/rtpsession.h	/^	RtpSignalTable on_timestamp_jump;$/;"	m	struct:_RtpSession	access:public
one	utils/ortp/src/utils.h	/^	uint32_t one;$/;"	m	union:__anon16	access:public
open_channel	core/inc/session.h	/^int open_channel( int clientID, int chId );$/;"	p	signature:( int clientID, int chId )
open_channel	core/src/session.c	/^int open_channel( int clientID, int chId )$/;"	f	signature:( int clientID, int chId )
orig	utils/ortp/src/posixtimer.c	/^static struct timeval orig,cur;$/;"	v	typeref:struct:timeval	file:
orig	utils/osa/inc/rendezvous.h	/^    int             orig;$/;"	m	struct:Rendezvous_Obj	access:public
ortp__fd_mask	utils/ortp/inc/ortp/sessionset.h	/^typedef long int ortp__fd_mask;$/;"	t
ortp_allocations	utils/ortp/src/ortp.c	/^int ortp_allocations=0;$/;"	v
ortp_cond_broadcast	utils/ortp/inc/ortp/port.h	123;"	d
ortp_cond_broadcast	utils/ortp/inc/ortp/port.h	66;"	d
ortp_cond_destroy	utils/ortp/inc/ortp/port.h	125;"	d
ortp_cond_destroy	utils/ortp/inc/ortp/port.h	68;"	d
ortp_cond_init	utils/ortp/inc/ortp/port.h	121;"	d
ortp_cond_init	utils/ortp/inc/ortp/port.h	64;"	d
ortp_cond_signal	utils/ortp/inc/ortp/port.h	122;"	d
ortp_cond_signal	utils/ortp/inc/ortp/port.h	65;"	d
ortp_cond_t	utils/ortp/inc/ortp/port.h	/^typedef HANDLE ortp_cond_t;$/;"	t
ortp_cond_t	utils/ortp/inc/ortp/port.h	/^typedef pthread_cond_t ortp_cond_t;$/;"	t
ortp_cond_wait	utils/ortp/inc/ortp/port.h	124;"	d
ortp_cond_wait	utils/ortp/inc/ortp/port.h	67;"	d
ortp_debug	utils/ortp/inc/ortp/ortp.h	/^static inline void ortp_debug(const char *fmt,...)$/;"	f	signature:(const char *fmt,...)
ortp_debug	utils/ortp/inc/ortp/ortp.h	86;"	d
ortp_debug	utils/ortp/src/ortp.h	/^static inline void ortp_debug(const char *fmt,...)$/;"	f	signature:(const char *fmt,...)
ortp_debug	utils/ortp/src/ortp.h	86;"	d
ortp_error	utils/ortp/inc/ortp/ortp.h	/^static inline void ortp_error(const char *fmt,...)$/;"	f	signature:(const char *fmt,...)
ortp_error	utils/ortp/src/ortp.h	/^static inline void ortp_error(const char *fmt,...)$/;"	f	signature:(const char *fmt,...)
ortp_exit	utils/ortp/inc/ortp/ortp.h	/^void ortp_exit();$/;"	p	signature:()
ortp_exit	utils/ortp/src/ortp.c	/^void ortp_exit()$/;"	f
ortp_exit	utils/ortp/src/ortp.h	/^void ortp_exit();$/;"	p	signature:()
ortp_fatal	utils/ortp/inc/ortp/ortp.h	/^static inline void ortp_fatal(const char *fmt,...)$/;"	f	signature:(const char *fmt,...)
ortp_fatal	utils/ortp/src/ortp.h	/^static inline void ortp_fatal(const char *fmt,...)$/;"	f	signature:(const char *fmt,...)
ortp_fd_set	utils/ortp/inc/ortp/sessionset.h	/^  } ortp_fd_set;$/;"	t	typeref:struct:__anon14
ortp_fd_set	utils/ortp/inc/ortp/sessionset.h	/^typedef fd_set ortp_fd_set;$/;"	t
ortp_free	utils/ortp/inc/ortp/port.h	/^void ortp_free(void *ptr);$/;"	p	signature:(void *ptr)
ortp_free	utils/ortp/src/port.c	/^void ortp_free(void* ptr){$/;"	f	signature:(void* ptr)
ortp_get_global_stats	utils/ortp/inc/ortp/ortp.h	/^rtp_stats_t *ortp_get_global_stats();$/;"	p	signature:()
ortp_get_global_stats	utils/ortp/src/ortp.c	/^rtp_stats_t *ortp_get_global_stats(){$/;"	f
ortp_get_global_stats	utils/ortp/src/ortp.h	/^rtp_stats_t *ortp_get_global_stats();$/;"	p	signature:()
ortp_get_scheduler	utils/ortp/src/ortp.c	/^RtpScheduler * ortp_get_scheduler()$/;"	f
ortp_get_scheduler	utils/ortp/src/scheduler.h	/^RtpScheduler * ortp_get_scheduler();$/;"	p	signature:()
ortp_global_stats	utils/ortp/src/ortp.c	/^rtp_stats_t ortp_global_stats;$/;"	v
ortp_global_stats_display	utils/ortp/inc/ortp/ortp.h	/^void ortp_global_stats_display();$/;"	p	signature:()
ortp_global_stats_display	utils/ortp/src/ortp.c	/^void ortp_global_stats_display()$/;"	f
ortp_global_stats_display	utils/ortp/src/ortp.h	/^void ortp_global_stats_display();$/;"	p	signature:()
ortp_global_stats_reset	utils/ortp/inc/ortp/ortp.h	/^void ortp_global_stats_reset();$/;"	p	signature:()
ortp_global_stats_reset	utils/ortp/src/ortp.c	/^void ortp_global_stats_reset(){$/;"	f
ortp_global_stats_reset	utils/ortp/src/ortp.h	/^void ortp_global_stats_reset();$/;"	p	signature:()
ortp_inet_ntoa	utils/ortp/src/rtpsession.c	/^static char * ortp_inet_ntoa(struct sockaddr *addr, int addrlen, char *dest, int destlen){$/;"	f	file:	signature:(struct sockaddr *addr, int addrlen, char *dest, int destlen)
ortp_init	utils/ortp/inc/ortp/ortp.h	/^void ortp_init();$/;"	p	signature:()
ortp_init	utils/ortp/src/ortp.c	/^void ortp_init()$/;"	f
ortp_init	utils/ortp/src/ortp.h	/^void ortp_init();$/;"	p	signature:()
ortp_log	utils/ortp/inc/ortp/ortp.h	/^static inline void ortp_log(OrtpLogLevel lev, const char *fmt,...){$/;"	f	signature:(OrtpLogLevel lev, const char *fmt,...)
ortp_log	utils/ortp/src/ortp.h	/^static inline void ortp_log(OrtpLogLevel lev, const char *fmt,...){$/;"	f	signature:(OrtpLogLevel lev, const char *fmt,...)
ortp_log_level_enabled	utils/ortp/inc/ortp/ortp.h	59;"	d
ortp_log_level_enabled	utils/ortp/src/ortp.h	59;"	d
ortp_logv	utils/ortp/inc/ortp/ortp.h	61;"	d
ortp_logv	utils/ortp/src/ortp.h	61;"	d
ortp_logv_out	utils/ortp/src/ortp.c	/^OrtpLogFunc ortp_logv_out=__ortp_logv_out;$/;"	v
ortp_malloc	utils/ortp/inc/ortp/port.h	172;"	d
ortp_malloc0	utils/ortp/inc/ortp/port.h	/^static inline void * ortp_malloc0(int size){$/;"	f	signature:(int size)
ortp_message	utils/ortp/inc/ortp/ortp.h	/^static inline void ortp_message(const char *fmt,...)$/;"	f	signature:(const char *fmt,...)
ortp_message	utils/ortp/src/ortp.h	/^static inline void ortp_message(const char *fmt,...)$/;"	f	signature:(const char *fmt,...)
ortp_min_version_required	utils/ortp/inc/ortp/ortp.h	/^bool_t ortp_min_version_required(int major, int minor, int micro);$/;"	p	signature:(int major, int minor, int micro)
ortp_min_version_required	utils/ortp/src/ortp.c	/^bool_t ortp_min_version_required(int major, int minor, int micro){$/;"	f	signature:(int major, int minor, int micro)
ortp_min_version_required	utils/ortp/src/ortp.h	/^bool_t ortp_min_version_required(int major, int minor, int micro);$/;"	p	signature:(int major, int minor, int micro)
ortp_mutex_destroy	utils/ortp/inc/ortp/port.h	120;"	d
ortp_mutex_destroy	utils/ortp/inc/ortp/port.h	63;"	d
ortp_mutex_init	utils/ortp/inc/ortp/port.h	117;"	d
ortp_mutex_init	utils/ortp/inc/ortp/port.h	60;"	d
ortp_mutex_lock	utils/ortp/inc/ortp/port.h	118;"	d
ortp_mutex_lock	utils/ortp/inc/ortp/port.h	61;"	d
ortp_mutex_t	utils/ortp/inc/ortp/port.h	/^typedef HANDLE ortp_mutex_t;$/;"	t
ortp_mutex_t	utils/ortp/inc/ortp/port.h	/^typedef pthread_mutex_t ortp_mutex_t;$/;"	t
ortp_mutex_unlock	utils/ortp/inc/ortp/port.h	119;"	d
ortp_mutex_unlock	utils/ortp/inc/ortp/port.h	62;"	d
ortp_new	utils/ortp/inc/ortp/port.h	182;"	d
ortp_new0	utils/ortp/inc/ortp/port.h	183;"	d
ortp_realloc	utils/ortp/inc/ortp/port.h	174;"	d
ortp_rtcp_send	utils/ortp/src/rtcp.c	/^extern int ortp_rtcp_send (RtpSession * session, mblk_t * m);$/;"	p	file:	signature:(RtpSession * session, mblk_t * m)
ortp_rtcp_send	utils/ortp/src/rtpsession.c	/^ortp_rtcp_send (RtpSession * session, mblk_t * m)$/;"	f	signature:(RtpSession * session, mblk_t * m)
ortp_rtcp_send	utils/ortp/src/rtpsession_ext.c	/^extern int ortp_rtcp_send (RtpSession * session, mblk_t * m);$/;"	p	file:	signature:(RtpSession * session, mblk_t * m)
ortp_rtp_send	utils/ortp/src/rtpsession.c	/^ortp_rtp_send (RtpSession * session, mblk_t * m)$/;"	f	file:	signature:(RtpSession * session, mblk_t * m)
ortp_scheduler_init	utils/ortp/inc/ortp/ortp.h	/^void ortp_scheduler_init();$/;"	p	signature:()
ortp_scheduler_init	utils/ortp/src/ortp.c	/^void ortp_scheduler_init()$/;"	f
ortp_scheduler_init	utils/ortp/src/ortp.h	/^void ortp_scheduler_init();$/;"	p	signature:()
ortp_set_log_file	utils/ortp/inc/ortp/ortp.h	/^void ortp_set_log_file(FILE *file);$/;"	p	signature:(FILE *file)
ortp_set_log_file	utils/ortp/src/ortp.c	/^void ortp_set_log_file(FILE *file)$/;"	f	signature:(FILE *file)
ortp_set_log_file	utils/ortp/src/ortp.h	/^void ortp_set_log_file(FILE *file);$/;"	p	signature:(FILE *file)
ortp_set_log_handler	utils/ortp/inc/ortp/ortp.h	/^void ortp_set_log_handler(OrtpLogFunc func);$/;"	p	signature:(OrtpLogFunc func)
ortp_set_log_handler	utils/ortp/src/ortp.c	/^void ortp_set_log_handler(OrtpLogFunc func){$/;"	f	signature:(OrtpLogFunc func)
ortp_set_log_handler	utils/ortp/src/ortp.h	/^void ortp_set_log_handler(OrtpLogFunc func);$/;"	p	signature:(OrtpLogFunc func)
ortp_set_log_level_mask	utils/ortp/inc/ortp/ortp.h	/^void ortp_set_log_level_mask(int levelmask);$/;"	p	signature:(int levelmask)
ortp_set_log_level_mask	utils/ortp/src/ortp.c	/^void ortp_set_log_level_mask(int levelmask){$/;"	f	signature:(int levelmask)
ortp_set_log_level_mask	utils/ortp/src/ortp.h	/^void ortp_set_log_level_mask(int levelmask);$/;"	p	signature:(int levelmask)
ortp_socket_t	utils/ortp/inc/ortp/port.h	/^typedef SOCKET ortp_socket_t;$/;"	t
ortp_socket_t	utils/ortp/inc/ortp/port.h	/^typedef int ortp_socket_t;$/;"	t
ortp_strdup	utils/ortp/inc/ortp/port.h	188;"	d
ortp_strdup_printf	utils/ortp/inc/ortp/port.h	/^char *ortp_strdup_printf(const char *fmt,...);$/;"	p	signature:(const char *fmt,...)
ortp_strdup_printf	utils/ortp/src/ortp.c	/^char *ortp_strdup_printf(const char *fmt,...){$/;"	f	signature:(const char *fmt,...)
ortp_strndup	utils/ortp/inc/ortp/port.h	/^char *ortp_strndup(const char *str,int n);$/;"	p	signature:(const char *str,int n)
ortp_strndup	utils/ortp/src/port.c	/^char *ortp_strndup(const char *str,int n){$/;"	f	signature:(const char *str,int n)
ortp_thread_create	utils/ortp/inc/ortp/port.h	115;"	d
ortp_thread_create	utils/ortp/inc/ortp/port.h	58;"	d
ortp_thread_join	utils/ortp/inc/ortp/port.h	116;"	d
ortp_thread_join	utils/ortp/inc/ortp/port.h	59;"	d
ortp_thread_t	utils/ortp/inc/ortp/port.h	/^typedef HANDLE ortp_thread_t;$/;"	t
ortp_thread_t	utils/ortp/inc/ortp/port.h	/^typedef pthread_t ortp_thread_t;$/;"	t
ortp_warning	utils/ortp/inc/ortp/ortp.h	/^static inline void ortp_warning(const char *fmt,...)$/;"	f	signature:(const char *fmt,...)
ortp_warning	utils/ortp/src/ortp.h	/^static inline void ortp_warning(const char *fmt,...)$/;"	f	signature:(const char *fmt,...)
outoftime	utils/ortp/inc/ortp/rtp.h	/^	uint64_t outoftime;		\/* number of packets that were received too late *\/$/;"	m	struct:rtp_stats	access:public
pFrom	utils/osa/inc/osa_msgq.h	/^  OSA_MsgqHndl *pFrom;  $/;"	m	struct:OSA_MsgHndl	access:public
pPrm	utils/osa/inc/osa_msgq.h	/^  void         *pPrm;$/;"	m	struct:OSA_MsgHndl	access:public
pSession	utils/com/src/rtpsend.c	/^    RtpSession *pSession;$/;"	m	struct:_sessionObj	file:	access:public
pTo	utils/osa/inc/osa_msgq.h	/^  OSA_MsgqHndl *pTo;$/;"	m	struct:OSA_MsgHndl	access:public
packet_recv	utils/ortp/inc/ortp/rtp.h	/^	uint64_t packet_recv;	\/* number of packets received *\/$/;"	m	struct:rtp_stats	access:public
packet_sent	utils/ortp/inc/ortp/rtp.h	/^	uint64_t packet_sent;$/;"	m	struct:rtp_stats	access:public
packet_type	utils/ortp/inc/ortp/rtcp.h	/^        uint16_t packet_type:8;$/;"	m	struct:rtcp_common_header	access:public
padbit	utils/ortp/inc/ortp/rtcp.h	/^        uint16_t padbit:1;$/;"	m	struct:rtcp_common_header	access:public
padbit	utils/ortp/inc/ortp/rtp.h	/^	uint16_t padbit:1;$/;"	m	struct:rtp_header	access:public
pattern	utils/osa/inc/osa_flg.h	/^  Uint32 pattern;$/;"	m	struct:__anon23	access:public
pattern_length	utils/ortp/inc/ortp/payloadtype.h	/^	int pattern_length;$/;"	m	struct:_PayloadType	access:public
pause	utils/osa/inc/pause.h	/^    int             pause;$/;"	m	struct:Pause_Obj	access:public
payload	utils/ortp/inc/ortp/payloadtype.h	/^	PayloadType *payload[RTP_PROFILE_MAX_PAYLOADS];$/;"	m	struct:_RtpProfile	access:public
payload_type_aac	utils/ortp/src/avprofile.c	/^PayloadType payload_type_aac=$/;"	v
payload_type_amr	utils/ortp/src/avprofile.c	/^PayloadType payload_type_amr={$/;"	v
payload_type_amrwb	utils/ortp/src/avprofile.c	/^PayloadType payload_type_amrwb={$/;"	v
payload_type_changed	utils/ortp/src/rtpsession.c	/^static void payload_type_changed(RtpSession *session, PayloadType *pt){$/;"	f	file:	signature:(RtpSession *session, PayloadType *pt)
payload_type_changed_notify	utils/ortp/src/rtpsession.c	/^static void payload_type_changed_notify(RtpSession *session, int paytype){$/;"	f	file:	signature:(RtpSession *session, int paytype)
payload_type_clone	utils/ortp/inc/ortp/payloadtype.h	/^PayloadType *payload_type_clone(PayloadType *payload);$/;"	p	signature:(PayloadType *payload)
payload_type_clone	utils/ortp/src/payloadtype.c	/^PayloadType *payload_type_clone(PayloadType *payload)$/;"	f	signature:(PayloadType *payload)
payload_type_destroy	utils/ortp/inc/ortp/payloadtype.h	/^void payload_type_destroy(PayloadType *pt);$/;"	p	signature:(PayloadType *pt)
payload_type_destroy	utils/ortp/src/payloadtype.c	/^void payload_type_destroy(PayloadType *pt)$/;"	f	signature:(PayloadType *pt)
payload_type_g7231	utils/ortp/src/avprofile.c	/^PayloadType payload_type_g7231=$/;"	v
payload_type_g729	utils/ortp/src/avprofile.c	/^PayloadType payload_type_g729={$/;"	v
payload_type_get_rtpmap	utils/ortp/src/payloadtype.c	/^char *payload_type_get_rtpmap(PayloadType *pt)$/;"	f	signature:(PayloadType *pt)
payload_type_get_user_data	utils/ortp/inc/ortp/payloadtype.h	93;"	d
payload_type_gsm	utils/ortp/src/avprofile.c	/^PayloadType payload_type_gsm=$/;"	v
payload_type_h261	utils/ortp/src/avprofile.c	/^PayloadType payload_type_h261={$/;"	v
payload_type_h263	utils/ortp/src/avprofile.c	/^PayloadType payload_type_h263={$/;"	v
payload_type_h263_1998	utils/ortp/src/avprofile.c	/^PayloadType payload_type_h263_1998={$/;"	v
payload_type_h263_2000	utils/ortp/src/avprofile.c	/^PayloadType payload_type_h263_2000={$/;"	v
payload_type_ilbc	utils/ortp/src/avprofile.c	/^PayloadType payload_type_ilbc={$/;"	v
payload_type_lpc1015	utils/ortp/src/avprofile.c	/^PayloadType payload_type_lpc1015={$/;"	v
payload_type_lpc1016	utils/ortp/src/avprofile.c	/^PayloadType payload_type_lpc1016={$/;"	v
payload_type_mp4v	utils/ortp/src/avprofile.c	/^PayloadType payload_type_mp4v={$/;"	v
payload_type_mpv	utils/ortp/src/avprofile.c	/^PayloadType payload_type_mpv=$/;"	v
payload_type_new	utils/ortp/inc/ortp/payloadtype.h	/^PayloadType *payload_type_new();$/;"	p	signature:()
payload_type_new	utils/ortp/src/payloadtype.c	/^PayloadType *payload_type_new()$/;"	f
payload_type_pcm8000	utils/ortp/src/avprofile.c	/^PayloadType payload_type_pcm8000={$/;"	v
payload_type_pcma8000	utils/ortp/src/avprofile.c	/^PayloadType payload_type_pcma8000={$/;"	v
payload_type_pcmu8000	utils/ortp/src/avprofile.c	/^PayloadType payload_type_pcmu8000={$/;"	v
payload_type_set_flag	utils/ortp/inc/ortp/payloadtype.h	62;"	d
payload_type_set_recv_fmtp	utils/ortp/inc/ortp/payloadtype.h	/^void payload_type_set_recv_fmtp(PayloadType *pt, const char *fmtp);$/;"	p	signature:(PayloadType *pt, const char *fmtp)
payload_type_set_recv_fmtp	utils/ortp/src/payloadtype.c	/^void payload_type_set_recv_fmtp(PayloadType *pt, const char *fmtp){$/;"	f	signature:(PayloadType *pt, const char *fmtp)
payload_type_set_send_fmtp	utils/ortp/inc/ortp/payloadtype.h	/^void payload_type_set_send_fmtp(PayloadType *pt, const char *fmtp);$/;"	p	signature:(PayloadType *pt, const char *fmtp)
payload_type_set_send_fmtp	utils/ortp/src/payloadtype.c	/^void payload_type_set_send_fmtp(PayloadType *pt, const char *fmtp){$/;"	f	signature:(PayloadType *pt, const char *fmtp)
payload_type_set_user_data	utils/ortp/inc/ortp/payloadtype.h	92;"	d
payload_type_speex_nb	utils/ortp/src/avprofile.c	/^PayloadType payload_type_speex_nb={$/;"	v
payload_type_speex_wb	utils/ortp/src/avprofile.c	/^PayloadType payload_type_speex_wb={$/;"	v
payload_type_telephone_event	utils/ortp/src/telephonyevents.c	/^PayloadType	payload_type_telephone_event={$/;"	v
payload_type_truespeech	utils/ortp/src/avprofile.c	/^PayloadType payload_type_truespeech=$/;"	v
payload_type_unset_flag	utils/ortp/inc/ortp/payloadtype.h	63;"	d
paytype	utils/ortp/inc/ortp/rtp.h	/^	uint16_t paytype:7;$/;"	m	struct:rtp_header	access:public
peekq	utils/ortp/inc/ortp/str_utils.h	/^mblk_t * peekq(queue_t *q);$/;"	p	signature:(queue_t *q)
peekq	utils/ortp/src/str_utils.c	/^mblk_t * peekq(queue_t *q){$/;"	f	signature:(queue_t *q)
physAddr	utils/osa/inc/osa_buf.h	/^  void *physAddr;$/;"	m	struct:__anon26	access:public
pipes	utils/osa/inc/fifoutil.h	/^    int pipes[2];$/;"	m	struct:FifoUtil_Obj	access:public
poly32_t	utils/ortp/src/utils.h	/^} poly32_t;$/;"	t	typeref:union:__anon16
posix_timer	utils/ortp/src/posixtimer.c	/^RtpTimer posix_timer={	0,$/;"	v
posix_timer_do	utils/ortp/src/posixtimer.c	/^void posix_timer_do()$/;"	f
posix_timer_init	utils/ortp/src/posixtimer.c	/^void posix_timer_init()$/;"	f
posix_timer_time	utils/ortp/src/posixtimer.c	/^static DWORD posix_timer_time;$/;"	v	file:
posix_timer_time	utils/ortp/src/posixtimer.c	/^static uint32_t posix_timer_time=0;		\/*in milisecond *\/$/;"	v	file:
posix_timer_uninit	utils/ortp/src/posixtimer.c	/^void posix_timer_uninit()$/;"	f
prev	utils/ortp/src/utils.h	/^	struct _OList *prev;$/;"	m	struct:_OList	typeref:struct:_OList::_OList	access:public
profile	utils/ortp/inc/ortp/rtpsession.h	/^	RtpProfile *profile;$/;"	m	struct:_RtpSession	access:public
ptr	utils/osa/inc/osa_ipc.h	/^  char *ptr;$/;"	m	struct:__anon18	access:public
putq	utils/ortp/inc/ortp/str_utils.h	/^void putq(queue_t *q, mblk_t *m);$/;"	p	signature:(queue_t *q, mblk_t *m)
putq	utils/ortp/src/str_utils.c	/^void putq(queue_t *q,mblk_t *mp)$/;"	f	signature:(queue_t *q,mblk_t *mp)
q_mcount	utils/ortp/inc/ortp/str_utils.h	/^	int q_mcount;	\/*number of packet in the q *\/$/;"	m	struct:_queue	access:public
qbegin	utils/ortp/inc/ortp/str_utils.h	115;"	d
qempty	utils/ortp/inc/ortp/str_utils.h	113;"	d
qend	utils/ortp/inc/ortp/str_utils.h	117;"	d
qfirst	utils/ortp/inc/ortp/str_utils.h	114;"	d
qinit	utils/ortp/inc/ortp/str_utils.h	/^void qinit(queue_t *q);$/;"	p	signature:(queue_t *q)
qinit	utils/ortp/src/str_utils.c	/^void qinit(queue_t *q){$/;"	f	signature:(queue_t *q)
qlast	utils/ortp/inc/ortp/str_utils.h	116;"	d
qnext	utils/ortp/inc/ortp/str_utils.h	118;"	d
queue	utils/osa/inc/osa_msgq.h	/^  struct OSA_MsgHndl *queue[OSA_MSGQ_LEN_MAX];$/;"	m	struct:__anon30	typeref:struct:__anon30::OSA_MsgHndl	access:public
queue	utils/osa/inc/osa_que.h	/^  Int32 *queue;$/;"	m	struct:__anon31	access:public
queue_t	utils/ortp/inc/ortp/str_utils.h	/^} queue_t;$/;"	t	typeref:struct:_queue
quit	core/inc/common.h	/^    int  quit;                  \/\/ Global quit flag$/;"	m	struct:GlobalData	access:public
r_max	utils/ortp/src/scheduler.h	/^	int		r_max;$/;"	m	struct:_RtpScheduler	access:public
r_sessions	utils/ortp/src/scheduler.h	/^	SessionSet  r_sessions;		\/* mask of sessions that have a recv event *\/$/;"	m	struct:_RtpScheduler	access:public
random	utils/ortp/inc/ortp/port.h	107;"	d
rb	utils/ortp/inc/ortp/rtcp.h	/^	report_block_t rb[1];$/;"	m	struct:rtcp_rr	access:public
rb	utils/ortp/inc/ortp/rtcp.h	/^	report_block_t rb[1];$/;"	m	struct:rtcp_sr	access:public
rc	utils/ortp/inc/ortp/rtcp.h	/^        uint16_t rc:5;$/;"	m	struct:rtcp_common_header	access:public
rcvMbx	utils/osa/inc/osa_mbx.h	/^  OSA_MsgqHndl rcvMbx;    \/\/\/< Receive mailbox$/;"	m	struct:__anon29	access:public
rcv_diff_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_diff_ts;	\/* difference between the first user timestamp and first stream timestamp *\/$/;"	m	struct:_RtpStream	access:public
rcv_last_app_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_last_app_ts; \/* the last application timestamp asked by the application *\/	$/;"	m	struct:_RtpStream	access:public
rcv_last_ret_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_last_ret_ts; \/* the timestamp of the last sample returned (only for continuous audio)*\/$/;"	m	struct:_RtpStream	access:public
rcv_last_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_last_ts;	\/* the last stream timestamp got by the application *\/$/;"	m	struct:_RtpStream	access:public
rcv_query_ts_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_query_ts_offset;	\/* the first user timestamp asked by the application *\/$/;"	m	struct:_RtpStream	access:public
rcv_time_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_time_offset; \/*the scheduler time when the application ask for its first timestamp*\/$/;"	m	struct:_RtpStream	access:public
rcv_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_ts;			\/* to be unused *\/$/;"	m	struct:_RtpStream	access:public
rcv_ts_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rcv_ts_offset;  \/* the first stream timestamp *\/$/;"	m	struct:_RtpStream	access:public
readEncodedFrameInFile	core/src/videoEncode.c	/^int readEncodedFrameInFile(FILE *fp, int chId)$/;"	f	signature:(FILE *fp, int chId)
readEncodedFrameInFile	core/src/videoEncode.c	/^static int readEncodedFrameInFile(FILE *fp, int chId);$/;"	p	file:	signature:(FILE *fp, int chId)
read_sys_config	core/inc/common.h	/^int read_sys_config();$/;"	p	signature:()
readerLock	utils/osa/inc/osa_buf.h	/^  OSA_MutexHndl readerLock;$/;"	m	struct:__anon27	access:public
recv	utils/ortp/inc/ortp/rtp.h	/^	uint64_t recv; 		\/* bytes of payload received and delivered in time to the application *\/$/;"	m	struct:rtp_stats	access:public
recv_buf_size	utils/ortp/inc/ortp/rtpsession.h	/^	int recv_buf_size;$/;"	m	struct:_RtpSession	access:public
recv_fmtp	utils/ortp/inc/ortp/payloadtype.h	/^	char *recv_fmtp; \/* various format parameters for the incoming stream *\/$/;"	m	struct:_PayloadType	access:public
recv_pt	utils/ortp/inc/ortp/rtpsession.h	/^	int recv_pt;\/* recv payload type *\/$/;"	m	struct:_RtpSession	access:public
recv_ssrc	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t recv_ssrc;$/;"	m	struct:_RtpSession	access:public
recv_wp	utils/ortp/inc/ortp/rtpsession.h	/^	WaitPoint recv_wp;$/;"	m	struct:_RtpSession	access:public
ref_count	utils/ortp/inc/ortp/str_utils.h	/^	int ref_count;$/;"	m	struct:datab	access:public
rem_addr	utils/ortp/inc/ortp/rtpsession.h	/^	struct sockaddr_in rem_addr;$/;"	m	struct:_RtcpStream	typeref:struct:_RtcpStream::sockaddr_in	access:public
rem_addr	utils/ortp/inc/ortp/rtpsession.h	/^	struct sockaddr_in rem_addr;$/;"	m	struct:_RtpStream	typeref:struct:_RtpStream::sockaddr_in	access:public
rem_addr	utils/ortp/inc/ortp/rtpsession.h	/^	struct sockaddr_storage rem_addr;$/;"	m	struct:_RtcpStream	typeref:struct:_RtcpStream::sockaddr_storage	access:public
rem_addr	utils/ortp/inc/ortp/rtpsession.h	/^	struct sockaddr_storage rem_addr;$/;"	m	struct:_RtpStream	typeref:struct:_RtpStream::sockaddr_storage	access:public
rem_addrlen	utils/ortp/inc/ortp/rtpsession.h	/^	int rem_addrlen;$/;"	m	struct:_RtcpStream	access:public
rem_addrlen	utils/ortp/inc/ortp/rtpsession.h	/^	int rem_addrlen;$/;"	m	struct:_RtpStream	access:public
remove_session_obj	utils/com/inc/rtpsend.h	/^int remove_session_obj( int sessionID );$/;"	p	signature:( int sessionID )
remove_session_obj	utils/com/src/rtpsend.c	/^int remove_session_obj( int sessionID )$/;"	f	signature:( int sessionID )
remq	utils/ortp/inc/ortp/str_utils.h	/^void remq(queue_t *q, mblk_t *mp);$/;"	p	signature:(queue_t *q, mblk_t *mp)
remq	utils/ortp/src/str_utils.c	/^void remq(queue_t *q, mblk_t *mp){$/;"	f	signature:(queue_t *q, mblk_t *mp)
rendezvousCleanup	core/inc/common.h	/^    Rendezvous_Obj rendezvousCleanup;$/;"	m	struct:_threadEnv	access:public
rendezvousInit	core/inc/common.h	/^    Rendezvous_Obj rendezvousInit;$/;"	m	struct:_threadEnv	access:public
report_block	utils/ortp/inc/ortp/rtcp.h	/^typedef struct report_block$/;"	s
report_block::cum_num_packet_lost	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t cum_num_packet_lost:24; \/*cumulative number of packet lost*\/$/;"	m	struct:report_block	access:public
report_block::delay_snc_last_sr	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t delay_snc_last_sr; \/*delay since last sr*\/$/;"	m	struct:report_block	access:public
report_block::ext_high_seq_num_rec	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t ext_high_seq_num_rec; \/*extended highest sequence number received *\/$/;"	m	struct:report_block	access:public
report_block::fraction_lost	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t fraction_lost:8;$/;"	m	struct:report_block	access:public
report_block::interarrival_jitter	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t interarrival_jitter;$/;"	m	struct:report_block	access:public
report_block::lsr	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t lsr; \/*last SR *\/$/;"	m	struct:report_block	access:public
report_block::ssrc	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t ssrc;$/;"	m	struct:report_block	access:public
report_block_init	utils/ortp/src/rtcp.c	/^void report_block_init(report_block_t *b, RtpSession *session){$/;"	f	signature:(report_block_t *b, RtpSession *session)
report_block_parse	utils/ortp/src/rtcpparse.c	/^void report_block_parse(RtpSession *session, report_block_t *rb, struct timeval rcv_time_tv)$/;"	f	signature:(RtpSession *session, report_block_t *rb, struct timeval rcv_time_tv)
report_block_t	utils/ortp/inc/ortp/rtcp.h	/^} report_block_t;$/;"	t	typeref:struct:report_block
reserved1	utils/ortp/inc/ortp/str_utils.h	/^	uint32_t reserved1;$/;"	m	struct:msgb	access:public
reserved2	utils/ortp/inc/ortp/str_utils.h	/^	uint32_t reserved2;$/;"	m	struct:msgb	access:public
resolution	core/inc/common.h	/^    int  resolution;            \/\/ Video resolution CIF or D1$/;"	m	struct:GlobalData	access:public
resolution	network/inc/command.h	/^			EResolution resolution;$/;"	m	struct:_ReturnPack::__anon7::__anon8	access:public
resolution	network/inc/command.h	/^			EResolution resolution;$/;"	m	struct:_ServerPack::__anon1::__anon4	access:public
returnCMD	network/inc/command.h	/^	ReturnCMD returnCMD;$/;"	m	struct:_ReturnPack	access:public
return_if_fail	utils/ortp/src/utils.h	51;"	d
return_val_if_fail	utils/ortp/src/utils.h	52;"	d
rq	utils/ortp/inc/ortp/rtpsession.h	/^	queue_t rq;$/;"	m	struct:_RtpStream	access:public
rsv	utils/osa/inc/osa_prf.h	/^  int rsv;$/;"	m	struct:__anon33	access:public
rtcp	utils/ortp/inc/ortp/rtpsession.h	/^	RtcpStream rtcp;$/;"	m	struct:_RtpSession	access:public
rtcp_bye	utils/ortp/inc/ortp/rtcp.h	/^typedef struct rtcp_bye$/;"	s
rtcp_bye::ch	utils/ortp/inc/ortp/rtcp.h	/^	rtcp_common_header_t ch;$/;"	m	struct:rtcp_bye	access:public
rtcp_bye::ssrc	utils/ortp/inc/ortp/rtcp.h	/^	uint32_t ssrc[1];  \/* the bye may contain several ssrc\/csrc *\/$/;"	m	struct:rtcp_bye	access:public
rtcp_bye_get_ssrc	utils/ortp/inc/ortp/rtcp.h	146;"	d
rtcp_bye_reason	utils/ortp/inc/ortp/rtcp.h	/^typedef struct rtcp_bye_reason$/;"	s
rtcp_bye_reason::content	utils/ortp/inc/ortp/rtcp.h	/^	char content[1];$/;"	m	struct:rtcp_bye_reason	access:public
rtcp_bye_reason::len	utils/ortp/inc/ortp/rtcp.h	/^	uint8_t len;$/;"	m	struct:rtcp_bye_reason	access:public
rtcp_bye_reason_t	utils/ortp/inc/ortp/rtcp.h	/^} rtcp_bye_reason_t;$/;"	t	typeref:struct:rtcp_bye_reason
rtcp_bye_set_ssrc	utils/ortp/inc/ortp/rtcp.h	145;"	d
rtcp_bye_t	utils/ortp/inc/ortp/rtcp.h	/^} rtcp_bye_t;$/;"	t	typeref:struct:rtcp_bye
rtcp_common_header	utils/ortp/inc/ortp/rtcp.h	/^typedef struct rtcp_common_header$/;"	s
rtcp_common_header::length	utils/ortp/inc/ortp/rtcp.h	/^        uint16_t length:16;$/;"	m	struct:rtcp_common_header	access:public
rtcp_common_header::packet_type	utils/ortp/inc/ortp/rtcp.h	/^        uint16_t packet_type:8;$/;"	m	struct:rtcp_common_header	access:public
rtcp_common_header::padbit	utils/ortp/inc/ortp/rtcp.h	/^        uint16_t padbit:1;$/;"	m	struct:rtcp_common_header	access:public
rtcp_common_header::rc	utils/ortp/inc/ortp/rtcp.h	/^        uint16_t rc:5;$/;"	m	struct:rtcp_common_header	access:public
rtcp_common_header::version	utils/ortp/inc/ortp/rtcp.h	/^        uint16_t version:2;$/;"	m	struct:rtcp_common_header	access:public
rtcp_common_header_get	utils/ortp/inc/ortp/rtcp.h	68;"	d
rtcp_common_header_get_length	utils/ortp/inc/ortp/rtcp.h	71;"	d
rtcp_common_header_get_packet_type	utils/ortp/inc/ortp/rtcp.h	70;"	d
rtcp_common_header_get_rc	utils/ortp/inc/ortp/rtcp.h	69;"	d
rtcp_common_header_get_version	utils/ortp/inc/ortp/rtcp.h	67;"	d
rtcp_common_header_init	utils/ortp/src/rtcp.c	/^void rtcp_common_header_init(rtcp_common_header_t *ch, RtpSession *s,int type, int rc, int bytes_len){$/;"	f	signature:(rtcp_common_header_t *ch, RtpSession *s,int type, int rc, int bytes_len)
rtcp_common_header_set_length	utils/ortp/inc/ortp/rtcp.h	65;"	d
rtcp_common_header_set_packet_type	utils/ortp/inc/ortp/rtcp.h	64;"	d
rtcp_common_header_set_padbit	utils/ortp/inc/ortp/rtcp.h	62;"	d
rtcp_common_header_set_rc	utils/ortp/inc/ortp/rtcp.h	63;"	d
rtcp_common_header_set_version	utils/ortp/inc/ortp/rtcp.h	61;"	d
rtcp_common_header_t	utils/ortp/inc/ortp/rtcp.h	/^} rtcp_common_header_t;$/;"	t	typeref:struct:rtcp_common_header
rtcp_create_simple_bye_packet	utils/ortp/src/rtcp.c	/^mblk_t *rtcp_create_simple_bye_packet(uint32_t ssrc, const char *reason)$/;"	f	signature:(uint32_t ssrc, const char *reason)
rtcp_create_simple_bye_packet	utils/ortp/src/rtpsession_ext.c	/^extern mblk_t *rtcp_create_simple_bye_packet(uint32_t ssrc, const char *reason);$/;"	p	file:	signature:(uint32_t ssrc, const char *reason)
rtcp_parse	utils/ortp/src/rtcpparse.c	/^void rtcp_parse(RtpSession *session, mblk_t *mp)$/;"	f	signature:(RtpSession *session, mblk_t *mp)
rtcp_parse	utils/ortp/src/rtpsession.c	/^extern void rtcp_parse(RtpSession *session, mblk_t *mp);$/;"	p	file:	signature:(RtpSession *session, mblk_t *mp)
rtcp_recv	utils/ortp/src/rtpsession.c	/^rtcp_recv (RtpSession * session)$/;"	f	file:	signature:(RtpSession * session)
rtcp_recv	utils/ortp/src/rtpsession.c	/^static int rtcp_recv (RtpSession * session);$/;"	p	file:	signature:(RtpSession * session)
rtcp_report_snt_interval	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t rtcp_report_snt_interval; \/* the interval in timestamp unit between rtcp report sent *\/$/;"	m	struct:_RtpStream	access:public
rtcp_rr	utils/ortp/inc/ortp/rtcp.h	/^typedef struct rtcp_rr{$/;"	s
rtcp_rr::ch	utils/ortp/inc/ortp/rtcp.h	/^	rtcp_common_header_t ch;$/;"	m	struct:rtcp_rr	access:public
rtcp_rr::rb	utils/ortp/inc/ortp/rtcp.h	/^	report_block_t rb[1];$/;"	m	struct:rtcp_rr	access:public
rtcp_rr::ssrc	utils/ortp/inc/ortp/rtcp.h	/^	uint32_t ssrc;$/;"	m	struct:rtcp_rr	access:public
rtcp_rr_init	utils/ortp/src/rtcp.c	/^int rtcp_rr_init(RtpSession *session, char *buf, int size){$/;"	f	signature:(RtpSession *session, char *buf, int size)
rtcp_rr_init	utils/ortp/src/rtpsession_ext.c	/^extern int rtcp_rr_init(RtpSession *session, char *buf, int size);$/;"	p	file:	signature:(RtpSession *session, char *buf, int size)
rtcp_rr_t	utils/ortp/inc/ortp/rtcp.h	/^} rtcp_rr_t;$/;"	t	typeref:struct:rtcp_rr
rtcp_sdes_type_t	utils/ortp/inc/ortp/rtcp.h	/^} rtcp_sdes_type_t;$/;"	t	typeref:enum:__anon13
rtcp_sr	utils/ortp/inc/ortp/rtcp.h	/^typedef struct rtcp_sr{$/;"	s
rtcp_sr::ch	utils/ortp/inc/ortp/rtcp.h	/^	rtcp_common_header_t ch;$/;"	m	struct:rtcp_sr	access:public
rtcp_sr::rb	utils/ortp/inc/ortp/rtcp.h	/^	report_block_t rb[1];$/;"	m	struct:rtcp_sr	access:public
rtcp_sr::si	utils/ortp/inc/ortp/rtcp.h	/^	sender_info_t si;$/;"	m	struct:rtcp_sr	access:public
rtcp_sr::ssrc	utils/ortp/inc/ortp/rtcp.h	/^	uint32_t ssrc;$/;"	m	struct:rtcp_sr	access:public
rtcp_sr_init	utils/ortp/src/rtcp.c	/^int rtcp_sr_init(RtpSession *session, char *buf, int size){$/;"	f	signature:(RtpSession *session, char *buf, int size)
rtcp_sr_init	utils/ortp/src/rtpsession_ext.c	/^extern int rtcp_sr_init(RtpSession *session, char *buf, int size);$/;"	p	file:	signature:(RtpSession *session, char *buf, int size)
rtcp_sr_t	utils/ortp/inc/ortp/rtcp.h	/^} rtcp_sr_t;$/;"	t	typeref:struct:rtcp_sr
rtcp_type_t	utils/ortp/inc/ortp/rtcp.h	/^} rtcp_type_t;$/;"	t	typeref:enum:__anon12
rtp	utils/ortp/inc/ortp/rtpsession.h	/^	RtpStream rtp;$/;"	m	struct:_RtpSession	access:public
rtp_add_csrc	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_add_csrc(mblk_t *mp,uint32_t csrc);$/;"	p	signature:(mblk_t *mp,uint32_t csrc)
rtp_add_csrc	utils/ortp/src/rtpsession.c	/^void rtp_add_csrc(mblk_t *mp, uint32_t csrc)$/;"	f	signature:(mblk_t *mp, uint32_t csrc)
rtp_exit	utils/com/inc/rtpsend.h	/^int rtp_exit();$/;"	p	signature:()
rtp_exit	utils/com/src/rtpsend.c	/^int rtp_exit()$/;"	f
rtp_get_markbit	utils/ortp/inc/ortp/rtpsession.h	283;"	d
rtp_get_timestamp	utils/ortp/inc/ortp/rtpsession.h	282;"	d
rtp_getq	utils/ortp/src/rtpmod.c	/^mblk_t *rtp_getq(queue_t *q,uint32_t timestamp, int *rejected)$/;"	f	signature:(queue_t *q,uint32_t timestamp, int *rejected)
rtp_getq	utils/ortp/src/rtpmod.h	/^mblk_t *rtp_getq(queue_t *q,uint32_t timestamp, int *rejected);$/;"	p	signature:(queue_t *q,uint32_t timestamp, int *rejected)
rtp_header	utils/ortp/inc/ortp/rtp.h	/^typedef struct rtp_header$/;"	s
rtp_header::cc	utils/ortp/inc/ortp/rtp.h	/^	uint16_t cc:4;$/;"	m	struct:rtp_header	access:public
rtp_header::csrc	utils/ortp/inc/ortp/rtp.h	/^	uint32_t csrc[16];$/;"	m	struct:rtp_header	access:public
rtp_header::extbit	utils/ortp/inc/ortp/rtp.h	/^	uint16_t extbit:1;$/;"	m	struct:rtp_header	access:public
rtp_header::markbit	utils/ortp/inc/ortp/rtp.h	/^	uint16_t markbit:1;$/;"	m	struct:rtp_header	access:public
rtp_header::padbit	utils/ortp/inc/ortp/rtp.h	/^	uint16_t padbit:1;$/;"	m	struct:rtp_header	access:public
rtp_header::paytype	utils/ortp/inc/ortp/rtp.h	/^	uint16_t paytype:7;$/;"	m	struct:rtp_header	access:public
rtp_header::seq_number	utils/ortp/inc/ortp/rtp.h	/^	uint16_t seq_number;$/;"	m	struct:rtp_header	access:public
rtp_header::ssrc	utils/ortp/inc/ortp/rtp.h	/^	uint32_t ssrc;$/;"	m	struct:rtp_header	access:public
rtp_header::timestamp	utils/ortp/inc/ortp/rtp.h	/^	uint32_t timestamp;$/;"	m	struct:rtp_header	access:public
rtp_header::version	utils/ortp/inc/ortp/rtp.h	/^	uint16_t version:2;$/;"	m	struct:rtp_header	access:public
rtp_header_t	utils/ortp/inc/ortp/rtp.h	/^} rtp_header_t;$/;"	t	typeref:struct:rtp_header
rtp_init	utils/com/inc/rtpsend.h	/^void rtp_init();$/;"	p	signature:()
rtp_init	utils/com/src/rtpsend.c	/^void rtp_init()$/;"	f
rtp_parse	utils/ortp/src/rtpparse.c	/^void rtp_parse(RtpSession *session, mblk_t *mp, uint32_t local_str_ts)$/;"	f	signature:(RtpSession *session, mblk_t *mp, uint32_t local_str_ts)
rtp_parse	utils/ortp/src/rtpsession.c	/^extern void rtp_parse(RtpSession *session, mblk_t *mp, uint32_t local_str_ts);$/;"	p	file:	signature:(RtpSession *session, mblk_t *mp, uint32_t local_str_ts)
rtp_profile_clear_all	utils/ortp/inc/ortp/payloadtype.h	/^void rtp_profile_clear_all(RtpProfile *prof);$/;"	p	signature:(RtpProfile *prof)
rtp_profile_clear_all	utils/ortp/src/payloadtype.c	/^void rtp_profile_clear_all(RtpProfile *obj){$/;"	f	signature:(RtpProfile *obj)
rtp_profile_clear_payload	utils/ortp/inc/ortp/payloadtype.h	105;"	d
rtp_profile_clone	utils/ortp/inc/ortp/payloadtype.h	/^RtpProfile * rtp_profile_clone(RtpProfile *prof);$/;"	p	signature:(RtpProfile *prof)
rtp_profile_clone	utils/ortp/src/payloadtype.c	/^RtpProfile * rtp_profile_clone(RtpProfile *prof)$/;"	f	signature:(RtpProfile *prof)
rtp_profile_clone_full	utils/ortp/inc/ortp/payloadtype.h	/^RtpProfile * rtp_profile_clone_full(RtpProfile *prof);$/;"	p	signature:(RtpProfile *prof)
rtp_profile_clone_full	utils/ortp/src/payloadtype.c	/^RtpProfile * rtp_profile_clone_full(RtpProfile *prof)$/;"	f	signature:(RtpProfile *prof)
rtp_profile_destroy	utils/ortp/inc/ortp/payloadtype.h	/^void rtp_profile_destroy(RtpProfile *prof);$/;"	p	signature:(RtpProfile *prof)
rtp_profile_destroy	utils/ortp/src/payloadtype.c	/^void rtp_profile_destroy(RtpProfile *prof)$/;"	f	signature:(RtpProfile *prof)
rtp_profile_find_payload	utils/ortp/inc/ortp/payloadtype.h	/^PayloadType * rtp_profile_find_payload(RtpProfile *prof,const char *mime,int rate);$/;"	p	signature:(RtpProfile *prof,const char *mime,int rate)
rtp_profile_find_payload	utils/ortp/src/payloadtype.c	/^PayloadType * rtp_profile_find_payload(RtpProfile *prof,const char *mime,int rate)$/;"	f	signature:(RtpProfile *prof,const char *mime,int rate)
rtp_profile_find_payload_number	utils/ortp/inc/ortp/payloadtype.h	/^int rtp_profile_find_payload_number(RtpProfile *prof,const char *mime,int rate);$/;"	p	signature:(RtpProfile *prof,const char *mime,int rate)
rtp_profile_find_payload_number	utils/ortp/src/payloadtype.c	/^int rtp_profile_find_payload_number(RtpProfile*profile,const char *mime,int rate)$/;"	f	signature:(RtpProfile*profile,const char *mime,int rate)
rtp_profile_get_name	utils/ortp/inc/ortp/payloadtype.h	97;"	d
rtp_profile_get_payload	utils/ortp/inc/ortp/payloadtype.h	/^static inline PayloadType * rtp_profile_get_payload(RtpProfile *prof, int index){$/;"	f	signature:(RtpProfile *prof, int index)
rtp_profile_get_payload_from_mime	utils/ortp/inc/ortp/payloadtype.h	/^PayloadType * rtp_profile_get_payload_from_mime(RtpProfile *profile,const char *mime);$/;"	p	signature:(RtpProfile *profile,const char *mime)
rtp_profile_get_payload_from_mime	utils/ortp/src/payloadtype.c	/^PayloadType * rtp_profile_get_payload_from_mime(RtpProfile *profile,const char *mime)$/;"	f	signature:(RtpProfile *profile,const char *mime)
rtp_profile_get_payload_from_rtpmap	utils/ortp/inc/ortp/payloadtype.h	/^PayloadType * rtp_profile_get_payload_from_rtpmap(RtpProfile *profile, const char *rtpmap);$/;"	p	signature:(RtpProfile *profile, const char *rtpmap)
rtp_profile_get_payload_from_rtpmap	utils/ortp/src/payloadtype.c	/^PayloadType * rtp_profile_get_payload_from_rtpmap(RtpProfile *profile, const char *rtpmap)$/;"	f	signature:(RtpProfile *profile, const char *rtpmap)
rtp_profile_get_payload_number_from_mime	utils/ortp/inc/ortp/payloadtype.h	/^int rtp_profile_get_payload_number_from_mime(RtpProfile *profile,const char *mime);$/;"	p	signature:(RtpProfile *profile,const char *mime)
rtp_profile_get_payload_number_from_mime	utils/ortp/src/payloadtype.c	/^int rtp_profile_get_payload_number_from_mime(RtpProfile *profile,const char *mime)$/;"	f	signature:(RtpProfile *profile,const char *mime)
rtp_profile_get_payload_number_from_rtpmap	utils/ortp/inc/ortp/payloadtype.h	/^int rtp_profile_get_payload_number_from_rtpmap(RtpProfile *profile, const char *rtpmap);$/;"	p	signature:(RtpProfile *profile, const char *rtpmap)
rtp_profile_get_payload_number_from_rtpmap	utils/ortp/src/payloadtype.c	/^int rtp_profile_get_payload_number_from_rtpmap(RtpProfile *profile,const char *rtpmap)$/;"	f	signature:(RtpProfile *profile,const char *rtpmap)
rtp_profile_move_payload	utils/ortp/inc/ortp/payloadtype.h	/^int rtp_profile_move_payload(RtpProfile *prof,int oldpos,int newpos);$/;"	p	signature:(RtpProfile *prof,int oldpos,int newpos)
rtp_profile_move_payload	utils/ortp/src/payloadtype.c	/^int rtp_profile_move_payload(RtpProfile *prof,int oldpos,int newpos){$/;"	f	signature:(RtpProfile *prof,int oldpos,int newpos)
rtp_profile_new	utils/ortp/inc/ortp/payloadtype.h	/^RtpProfile * rtp_profile_new(const char *name);$/;"	p	signature:(const char *name)
rtp_profile_new	utils/ortp/src/payloadtype.c	/^RtpProfile * rtp_profile_new(const char *name)$/;"	f	signature:(const char *name)
rtp_profile_set_name	utils/ortp/inc/ortp/payloadtype.h	/^void rtp_profile_set_name(RtpProfile *prof, const char *name);$/;"	p	signature:(RtpProfile *prof, const char *name)
rtp_profile_set_name	utils/ortp/src/payloadtype.c	/^void rtp_profile_set_name(RtpProfile *obj, const char *name){$/;"	f	signature:(RtpProfile *obj, const char *name)
rtp_profile_set_payload	utils/ortp/inc/ortp/payloadtype.h	/^void rtp_profile_set_payload(RtpProfile *prof, int index, PayloadType *pt);$/;"	p	signature:(RtpProfile *prof, int index, PayloadType *pt)
rtp_profile_set_payload	utils/ortp/src/payloadtype.c	/^void rtp_profile_set_payload(RtpProfile *prof, int index, PayloadType *pt){$/;"	f	signature:(RtpProfile *prof, int index, PayloadType *pt)
rtp_putq	utils/ortp/src/rtpmod.c	/^void rtp_putq(queue_t *q, mblk_t *mp)$/;"	f	signature:(queue_t *q, mblk_t *mp)
rtp_putq	utils/ortp/src/rtpmod.h	/^void rtp_putq(queue_t *q, mblk_t *mp);$/;"	p	signature:(queue_t *q, mblk_t *mp)
rtp_recv	utils/ortp/src/rtpsession.c	/^rtp_recv (RtpSession * session, uint32_t user_ts)$/;"	f	file:	signature:(RtpSession * session, uint32_t user_ts)
rtp_scheduler_add_session	utils/ortp/src/scheduler.c	/^void rtp_scheduler_add_session(RtpScheduler *sched, RtpSession *session)$/;"	f	signature:(RtpScheduler *sched, RtpSession *session)
rtp_scheduler_add_session	utils/ortp/src/scheduler.h	/^void rtp_scheduler_add_session(RtpScheduler *sched, RtpSession *session);$/;"	p	signature:(RtpScheduler *sched, RtpSession *session)
rtp_scheduler_destroy	utils/ortp/src/scheduler.c	/^void rtp_scheduler_destroy(RtpScheduler *sched)$/;"	f	signature:(RtpScheduler *sched)
rtp_scheduler_destroy	utils/ortp/src/scheduler.h	/^void rtp_scheduler_destroy(RtpScheduler *sched);$/;"	p	signature:(RtpScheduler *sched)
rtp_scheduler_init	utils/ortp/src/scheduler.c	/^void rtp_scheduler_init(RtpScheduler *sched)$/;"	f	signature:(RtpScheduler *sched)
rtp_scheduler_lock	utils/ortp/src/scheduler.h	63;"	d
rtp_scheduler_new	utils/ortp/src/scheduler.c	/^RtpScheduler * rtp_scheduler_new()$/;"	f
rtp_scheduler_new	utils/ortp/src/scheduler.h	/^RtpScheduler * rtp_scheduler_new();$/;"	p	signature:()
rtp_scheduler_remove_session	utils/ortp/src/scheduler.c	/^void rtp_scheduler_remove_session(RtpScheduler *sched, RtpSession *session)$/;"	f	signature:(RtpScheduler *sched, RtpSession *session)
rtp_scheduler_remove_session	utils/ortp/src/scheduler.h	/^void rtp_scheduler_remove_session(RtpScheduler *sched, RtpSession *session);$/;"	p	signature:(RtpScheduler *sched, RtpSession *session)
rtp_scheduler_schedule	utils/ortp/src/scheduler.c	/^void * rtp_scheduler_schedule(void * psched)$/;"	f	signature:(void * psched)
rtp_scheduler_schedule	utils/ortp/src/scheduler.h	/^void * rtp_scheduler_schedule(void * sched);$/;"	p	signature:(void * sched)
rtp_scheduler_set_timer	utils/ortp/src/scheduler.c	/^void rtp_scheduler_set_timer(RtpScheduler *sched,RtpTimer *timer)$/;"	f	signature:(RtpScheduler *sched,RtpTimer *timer)
rtp_scheduler_set_timer	utils/ortp/src/scheduler.h	/^void rtp_scheduler_set_timer(RtpScheduler *sched,RtpTimer *timer);$/;"	p	signature:(RtpScheduler *sched,RtpTimer *timer)
rtp_scheduler_start	utils/ortp/src/scheduler.c	/^void rtp_scheduler_start(RtpScheduler *sched)$/;"	f	signature:(RtpScheduler *sched)
rtp_scheduler_start	utils/ortp/src/scheduler.h	/^void rtp_scheduler_start(RtpScheduler *sched);$/;"	p	signature:(RtpScheduler *sched)
rtp_scheduler_stop	utils/ortp/src/scheduler.c	/^void rtp_scheduler_stop(RtpScheduler *sched)$/;"	f	signature:(RtpScheduler *sched)
rtp_scheduler_stop	utils/ortp/src/scheduler.h	/^void rtp_scheduler_stop(RtpScheduler *sched);$/;"	p	signature:(RtpScheduler *sched)
rtp_scheduler_unlock	utils/ortp/src/scheduler.h	64;"	d
rtp_send	utils/com/inc/rtpsend.h	/^int rtp_send( int sessionID, char *buffer, int len );$/;"	p	signature:( int sessionID, char *buffer, int len )
rtp_send	utils/com/src/rtpsend.c	/^int rtp_send( int sessionID, char *buffer, int len )$/;"	f	signature:( int sessionID, char *buffer, int len )
rtp_sendmsg	utils/ortp/src/rtpsession.c	/^static int rtp_sendmsg(int sock,mblk_t *m, struct sockaddr *rem_addr, int addr_len){$/;"	f	file:	signature:(int sock,mblk_t *m, struct sockaddr *rem_addr, int addr_len)
rtp_session_adaptive_jitter_compensation_enabled	utils/ortp/inc/ortp/rtpsession.h	/^bool_t rtp_session_adaptive_jitter_compensation_enabled(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_adaptive_jitter_compensation_enabled	utils/ortp/src/jitterctl.c	/^bool_t rtp_session_adaptive_jitter_compensation_enabled(RtpSession *session){$/;"	f	signature:(RtpSession *session)
rtp_session_add_contributing_source	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_add_contributing_source(RtpSession *session, uint32_t csrc, $/;"	p	signature:(RtpSession *session, uint32_t csrc, const char *cname, const char *name, const char *email, const char *phone, const char *loc, const char *tool, const char *note)
rtp_session_add_contributing_source	utils/ortp/src/rtcp.c	/^rtp_session_add_contributing_source(RtpSession *session, uint32_t csrc, $/;"	f	signature:(RtpSession *session, uint32_t csrc, const char *cname, const char *name, const char *email, const char *phone, const char *loc, const char *tool, const char *note)
rtp_session_add_telephone_event	utils/ortp/inc/ortp/telephonyevents.h	/^int rtp_session_add_telephone_event(RtpSession *session,$/;"	p	signature:(RtpSession *session, mblk_t *packet, uint8_t event, int end, uint8_t volume, uint16_t duration)
rtp_session_add_telephone_event	utils/ortp/src/telephonyevents.c	/^int rtp_session_add_telephone_event(RtpSession *session,$/;"	f	signature:(RtpSession *session, mblk_t *packet, uint8_t event, int end, uint8_t volume, uint16_t duration)
rtp_session_bye	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_bye(RtpSession *session, const char *reason);$/;"	p	signature:(RtpSession *session, const char *reason)
rtp_session_bye	utils/ortp/src/rtpsession_ext.c	/^rtp_session_bye(RtpSession *session, const char *reason)$/;"	f	signature:(RtpSession *session, const char *reason)
rtp_session_check_telephone_events	utils/ortp/inc/ortp/telephonyevents.h	/^void rtp_session_check_telephone_events(RtpSession *session, mblk_t *m0);$/;"	p	signature:(RtpSession *session, mblk_t *m0)
rtp_session_check_telephone_events	utils/ortp/src/telephonyevents.c	/^void rtp_session_check_telephone_events(RtpSession *session, mblk_t *m0)$/;"	f	signature:(RtpSession *session, mblk_t *m0)
rtp_session_create_packet	utils/ortp/inc/ortp/rtpsession.h	/^mblk_t * rtp_session_create_packet(RtpSession *session,int header_size, const char *payload, int payload_size);$/;"	p	signature:(RtpSession *session,int header_size, const char *payload, int payload_size)
rtp_session_create_packet	utils/ortp/src/rtpsession.c	/^mblk_t * rtp_session_create_packet(RtpSession *session,int header_size, const char *payload, int payload_size)$/;"	f	signature:(RtpSession *session,int header_size, const char *payload, int payload_size)
rtp_session_create_packet_in_place	utils/ortp/inc/ortp/rtpsession.h	/^mblk_t * rtp_session_create_packet_in_place(RtpSession *session,char *buffer, int size, void (*freefn)(void*) );$/;"	p	signature:(RtpSession *session,char *buffer, int size, void (*freefn)(void*) )
rtp_session_create_packet_in_place	utils/ortp/src/rtpsession.c	/^mblk_t * rtp_session_create_packet_in_place(RtpSession *session,char *buffer, int size, void (*freefn)(void*) )$/;"	f	signature:(RtpSession *session,char *buffer, int size, void (*freefn)(void*) )
rtp_session_create_packet_with_data	utils/ortp/inc/ortp/rtpsession.h	/^mblk_t * rtp_session_create_packet_with_data(RtpSession *session, char *payload, int payload_size, void (*freefn)(void*));$/;"	p	signature:(RtpSession *session, char *payload, int payload_size, void (*freefn)(void*))
rtp_session_create_packet_with_data	utils/ortp/src/rtpsession.c	/^mblk_t * rtp_session_create_packet_with_data(RtpSession *session, char *payload, int payload_size, void (*freefn)(void*))$/;"	f	signature:(RtpSession *session, char *payload, int payload_size, void (*freefn)(void*))
rtp_session_create_rtcp_sdes_packet	utils/ortp/inc/ortp/rtpsession.h	/^mblk_t* rtp_session_create_rtcp_sdes_packet(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_create_rtcp_sdes_packet	utils/ortp/src/rtcp.c	/^mblk_t* rtp_session_create_rtcp_sdes_packet(RtpSession *session)$/;"	f	signature:(RtpSession *session)
rtp_session_create_telephone_event_packet	utils/ortp/inc/ortp/telephonyevents.h	/^mblk_t	*rtp_session_create_telephone_event_packet(RtpSession *session, int start);$/;"	p	signature:(RtpSession *session, int start)
rtp_session_create_telephone_event_packet	utils/ortp/src/telephonyevents.c	/^mblk_t	*rtp_session_create_telephone_event_packet(RtpSession *session, int start)$/;"	f	signature:(RtpSession *session, int start)
rtp_session_destroy	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_destroy(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_destroy	utils/ortp/src/rtpsession.c	/^void rtp_session_destroy (RtpSession * session)$/;"	f	signature:(RtpSession * session)
rtp_session_enable_adaptive_jitter_compensation	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_enable_adaptive_jitter_compensation(RtpSession *session, bool_t val);$/;"	p	signature:(RtpSession *session, bool_t val)
rtp_session_enable_adaptive_jitter_compensation	utils/ortp/src/jitterctl.c	/^void rtp_session_enable_adaptive_jitter_compensation(RtpSession *session, bool_t val){$/;"	f	signature:(RtpSession *session, bool_t val)
rtp_session_flush_sockets	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_flush_sockets(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_flush_sockets	utils/ortp/src/rtpsession.c	/^void rtp_session_flush_sockets(RtpSession *session){$/;"	f	signature:(RtpSession *session)
rtp_session_get_current_recv_ts	utils/ortp/inc/ortp/rtpsession.h	/^uint32_t rtp_session_get_current_recv_ts(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_get_current_recv_ts	utils/ortp/src/rtpsession.c	/^uint32_t rtp_session_get_current_recv_ts(RtpSession *session){$/;"	f	signature:(RtpSession *session)
rtp_session_get_current_send_ts	utils/ortp/inc/ortp/rtpsession.h	/^uint32_t rtp_session_get_current_send_ts(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_get_current_send_ts	utils/ortp/src/rtpsession.c	/^uint32_t rtp_session_get_current_send_ts(RtpSession *session)$/;"	f	signature:(RtpSession *session)
rtp_session_get_data	utils/ortp/inc/ortp/rtpsession.h	/^void *rtp_session_get_data(const RtpSession *session);$/;"	p	signature:(const RtpSession *session)
rtp_session_get_data	utils/ortp/src/rtpsession.c	/^void *rtp_session_get_data(const RtpSession *session){$/;"	f	signature:(const RtpSession *session)
rtp_session_get_last_recv_time	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_get_last_recv_time(RtpSession *session, struct timeval *tv);$/;"	p	signature:(RtpSession *session, struct timeval *tv)
rtp_session_get_last_recv_time	utils/ortp/src/rtpsession_ext.c	/^rtp_session_get_last_recv_time(RtpSession *session, struct timeval *tv)$/;"	f	signature:(RtpSession *session, struct timeval *tv)
rtp_session_get_local_port	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_get_local_port(const RtpSession *session);$/;"	p	signature:(const RtpSession *session)
rtp_session_get_local_port	utils/ortp/src/rtpsession.c	/^int rtp_session_get_local_port(const RtpSession *session){$/;"	f	signature:(const RtpSession *session)
rtp_session_get_profile	utils/ortp/inc/ortp/rtpsession.h	/^RtpProfile *rtp_session_get_profile(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_get_profile	utils/ortp/src/rtpsession.c	/^RtpProfile *rtp_session_get_profile(RtpSession *session){$/;"	f	signature:(RtpSession *session)
rtp_session_get_recv_payload_type	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_get_recv_payload_type(const RtpSession *session);$/;"	p	signature:(const RtpSession *session)
rtp_session_get_recv_payload_type	utils/ortp/src/rtpsession.c	/^int rtp_session_get_recv_payload_type(const RtpSession *session){$/;"	f	signature:(const RtpSession *session)
rtp_session_get_send_payload_type	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_get_send_payload_type(const RtpSession *session);$/;"	p	signature:(const RtpSession *session)
rtp_session_get_send_payload_type	utils/ortp/src/rtpsession.c	/^int rtp_session_get_send_payload_type(const RtpSession *session){$/;"	f	signature:(const RtpSession *session)
rtp_session_get_seq_number	utils/ortp/inc/ortp/rtpsession.h	/^uint16_t rtp_session_get_seq_number(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_get_seq_number	utils/ortp/src/rtpsession.c	/^uint16_t rtp_session_get_seq_number(RtpSession *session){$/;"	f	signature:(RtpSession *session)
rtp_session_get_stats	utils/ortp/inc/ortp/rtpsession.h	245;"	d
rtp_session_init	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_init(RtpSession *session, int mode);$/;"	p	signature:(RtpSession *session, int mode)
rtp_session_init	utils/ortp/src/rtpsession.c	/^rtp_session_init (RtpSession * session, int mode)$/;"	f	signature:(RtpSession * session, int mode)
rtp_session_lock	utils/ortp/inc/ortp/rtpsession.h	185;"	d
rtp_session_make_time_distorsion	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_make_time_distorsion(RtpSession *session, int milisec);$/;"	p	signature:(RtpSession *session, int milisec)
rtp_session_make_time_distorsion	utils/ortp/src/rtpsession.c	/^void rtp_session_make_time_distorsion(RtpSession *session, int milisec)$/;"	f	signature:(RtpSession *session, int milisec)
rtp_session_new	utils/ortp/inc/ortp/rtpsession.h	/^RtpSession *rtp_session_new(int mode);$/;"	p	signature:(int mode)
rtp_session_new	utils/ortp/src/rtpsession.c	/^rtp_session_new (int mode)$/;"	f	signature:(int mode)
rtp_session_process	utils/ortp/src/rtpsession.c	/^void rtp_session_process (RtpSession * session, uint32_t time, RtpScheduler *sched)$/;"	f	signature:(RtpSession * session, uint32_t time, RtpScheduler *sched)
rtp_session_process	utils/ortp/src/scheduler.c	/^extern void rtp_session_process (RtpSession * session, uint32_t time, RtpScheduler *sched);$/;"	p	file:	signature:(RtpSession * session, uint32_t time, RtpScheduler *sched)
rtp_session_read_telephone_event	utils/ortp/inc/ortp/telephonyevents.h	/^int rtp_session_read_telephone_event(RtpSession *session,$/;"	p	signature:(RtpSession *session, mblk_t *packet,telephone_event_t **tab)
rtp_session_read_telephone_event	utils/ortp/src/telephonyevents.c	/^int rtp_session_read_telephone_event(RtpSession *session,$/;"	f	signature:(RtpSession *session, mblk_t *packet,telephone_event_t **tab)
rtp_session_recv_with_ts	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_recv_with_ts(RtpSession *session, char *buffer, int len, uint32_t time, int *have_more);$/;"	p	signature:(RtpSession *session, char *buffer, int len, uint32_t time, int *have_more)
rtp_session_recv_with_ts	utils/ortp/src/rtpsession.c	/^int rtp_session_recv_with_ts (RtpSession * session, char * buffer,$/;"	f	signature:(RtpSession * session, char * buffer, int len, uint32_t time, int * have_more)
rtp_session_recvm_with_ts	utils/ortp/inc/ortp/rtpsession.h	/^mblk_t * rtp_session_recvm_with_ts (RtpSession * session, uint32_t user_ts);$/;"	p	signature:(RtpSession * session, uint32_t user_ts)
rtp_session_recvm_with_ts	utils/ortp/src/rtpsession.c	/^rtp_session_recvm_with_ts (RtpSession * session, uint32_t user_ts)$/;"	f	signature:(RtpSession * session, uint32_t user_ts)
rtp_session_release_sockets	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_release_sockets(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_release_sockets	utils/ortp/src/rtpsession.c	/^void rtp_session_release_sockets(RtpSession *session){$/;"	f	signature:(RtpSession *session)
rtp_session_remove_contributing_sources	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_remove_contributing_sources(RtpSession *session, uint32_t csrc);$/;"	p	signature:(RtpSession *session, uint32_t csrc)
rtp_session_remove_contributing_sources	utils/ortp/src/rtcp.c	/^void rtp_session_remove_contributing_sources(RtpSession *session, uint32_t ssrc)$/;"	f	signature:(RtpSession *session, uint32_t ssrc)
rtp_session_reset	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_reset(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_reset	utils/ortp/src/rtpsession.c	/^void rtp_session_reset (RtpSession * session)$/;"	f	signature:(RtpSession * session)
rtp_session_reset_stats	utils/ortp/inc/ortp/rtpsession.h	246;"	d
rtp_session_rtcp_process	utils/ortp/inc/ortp/rtcp.h	/^void rtp_session_rtcp_process(struct _RtpSession *s);$/;"	p	signature:(struct _RtpSession *s)
rtp_session_rtcp_process	utils/ortp/src/rtcp.c	/^void rtp_session_rtcp_process(RtpSession *session){$/;"	f	signature:(RtpSession *session)
rtp_session_send_dtmf	utils/ortp/inc/ortp/telephonyevents.h	/^int rtp_session_send_dtmf(RtpSession *session, char dtmf, uint32_t userts);$/;"	p	signature:(RtpSession *session, char dtmf, uint32_t userts)
rtp_session_send_dtmf	utils/ortp/src/telephonyevents.c	/^int rtp_session_send_dtmf(RtpSession *session, char dtmf, uint32_t userts)$/;"	f	signature:(RtpSession *session, char dtmf, uint32_t userts)
rtp_session_send_with_ts	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_send_with_ts(RtpSession *session, const char *buffer, int len, uint32_t userts);$/;"	p	signature:(RtpSession *session, const char *buffer, int len, uint32_t userts)
rtp_session_send_with_ts	utils/ortp/src/rtpsession.c	/^rtp_session_send_with_ts (RtpSession * session, const char * buffer, int len,$/;"	f	signature:(RtpSession * session, const char * buffer, int len, uint32_t userts)
rtp_session_sendm_with_ts	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_sendm_with_ts (RtpSession * session, mblk_t *mp, uint32_t userts);$/;"	p	signature:(RtpSession * session, mblk_t *mp, uint32_t userts)
rtp_session_sendm_with_ts	utils/ortp/src/rtpsession.c	/^rtp_session_sendm_with_ts (RtpSession * session, mblk_t *mp, uint32_t timestamp)$/;"	f	signature:(RtpSession * session, mblk_t *mp, uint32_t timestamp)
rtp_session_set_blocking_mode	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_blocking_mode(RtpSession *session, int yesno);$/;"	p	signature:(RtpSession *session, int yesno)
rtp_session_set_blocking_mode	utils/ortp/src/rtpsession.c	/^rtp_session_set_blocking_mode (RtpSession * session, int yesno)$/;"	f	signature:(RtpSession * session, int yesno)
rtp_session_set_data	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_data(RtpSession *session, void *data);$/;"	p	signature:(RtpSession *session, void *data)
rtp_session_set_data	utils/ortp/src/rtpsession.c	/^void rtp_session_set_data(RtpSession *session, void *data){$/;"	f	signature:(RtpSession *session, void *data)
rtp_session_set_flag	utils/ortp/inc/ortp/rtpsession.h	187;"	d
rtp_session_set_jitter_compensation	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_jitter_compensation(RtpSession *session, int milisec);$/;"	p	signature:(RtpSession *session, int milisec)
rtp_session_set_jitter_compensation	utils/ortp/src/jitterctl.c	/^rtp_session_set_jitter_compensation (RtpSession * session, int milisec)$/;"	f	signature:(RtpSession * session, int milisec)
rtp_session_set_local_addr	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_set_local_addr(RtpSession *session,const char *addr, int port);$/;"	p	signature:(RtpSession *session,const char *addr, int port)
rtp_session_set_local_addr	utils/ortp/src/rtpsession.c	/^rtp_session_set_local_addr (RtpSession * session, const char * addr, int port)$/;"	f	signature:(RtpSession * session, const char * addr, int port)
rtp_session_set_payload_type	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_set_payload_type(RtpSession *session, int pt);$/;"	p	signature:(RtpSession *session, int pt)
rtp_session_set_payload_type	utils/ortp/src/rtpsession.c	/^int rtp_session_set_payload_type(RtpSession *session, int pt){$/;"	f	signature:(RtpSession *session, int pt)
rtp_session_set_profile	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_profile(RtpSession *session,RtpProfile *profile);$/;"	p	signature:(RtpSession *session,RtpProfile *profile)
rtp_session_set_profile	utils/ortp/src/rtpsession.c	/^rtp_session_set_profile (RtpSession * session, RtpProfile * profile)$/;"	f	signature:(RtpSession * session, RtpProfile * profile)
rtp_session_set_recv_buf_size	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_recv_buf_size(RtpSession *session, int bufsize);$/;"	p	signature:(RtpSession *session, int bufsize)
rtp_session_set_recv_buf_size	utils/ortp/src/rtpsession.c	/^void rtp_session_set_recv_buf_size(RtpSession *session, int bufsize){$/;"	f	signature:(RtpSession *session, int bufsize)
rtp_session_set_recv_payload_type	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_set_recv_payload_type(RtpSession *session, int pt);$/;"	p	signature:(RtpSession *session, int pt)
rtp_session_set_recv_payload_type	utils/ortp/src/rtpsession.c	/^rtp_session_set_recv_payload_type (RtpSession * session, int paytype)$/;"	f	signature:(RtpSession * session, int paytype)
rtp_session_set_remote_addr	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_set_remote_addr(RtpSession *session,const char *addr, int port);$/;"	p	signature:(RtpSession *session,const char *addr, int port)
rtp_session_set_remote_addr	utils/ortp/src/rtpsession.c	/^rtp_session_set_remote_addr (RtpSession * session, const char * addr, int port)$/;"	f	signature:(RtpSession * session, const char * addr, int port)
rtp_session_set_scheduling_mode	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_scheduling_mode(RtpSession *session, int yesno);$/;"	p	signature:(RtpSession *session, int yesno)
rtp_session_set_scheduling_mode	utils/ortp/src/rtpsession.c	/^rtp_session_set_scheduling_mode (RtpSession * session, int yesno)$/;"	f	signature:(RtpSession * session, int yesno)
rtp_session_set_send_payload_type	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_set_send_payload_type(RtpSession *session, int paytype);$/;"	p	signature:(RtpSession *session, int paytype)
rtp_session_set_send_payload_type	utils/ortp/src/rtpsession.c	/^rtp_session_set_send_payload_type (RtpSession * session, int paytype)$/;"	f	signature:(RtpSession * session, int paytype)
rtp_session_set_seq_number	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_seq_number(RtpSession *session, uint16_t seq);$/;"	p	signature:(RtpSession *session, uint16_t seq)
rtp_session_set_seq_number	utils/ortp/src/rtpsession.c	/^void rtp_session_set_seq_number(RtpSession *session, uint16_t seq){$/;"	f	signature:(RtpSession *session, uint16_t seq)
rtp_session_set_sockets	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_sockets(RtpSession *session, int rtpfd, int rtcpfd);$/;"	p	signature:(RtpSession *session, int rtpfd, int rtcpfd)
rtp_session_set_sockets	utils/ortp/src/rtpsession.c	/^void rtp_session_set_sockets(RtpSession *session, int rtpfd, int rtcpfd)$/;"	f	signature:(RtpSession *session, int rtpfd, int rtcpfd)
rtp_session_set_source_description	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_source_description(RtpSession *session, const char *cname,$/;"	p	signature:(RtpSession *session, const char *cname, const char *name, const char *email, const char *phone, const char *loc, const char *tool, const char *note)
rtp_session_set_source_description	utils/ortp/src/rtcp.c	/^void rtp_session_set_source_description(RtpSession *session, $/;"	f	signature:(RtpSession *session, const char *cname, const char *name, const char *email, const char *phone, const char *loc, const char *tool, const char *note)
rtp_session_set_ssrc	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_ssrc(RtpSession *session, uint32_t ssrc);$/;"	p	signature:(RtpSession *session, uint32_t ssrc)
rtp_session_set_ssrc	utils/ortp/src/rtpsession.c	/^rtp_session_set_ssrc (RtpSession * session, uint32_t ssrc)$/;"	f	signature:(RtpSession * session, uint32_t ssrc)
rtp_session_set_time_jump_limit	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_set_time_jump_limit(RtpSession *session, int miliseconds);$/;"	p	signature:(RtpSession *session, int miliseconds)
rtp_session_set_time_jump_limit	utils/ortp/src/rtpsession.c	/^void rtp_session_set_time_jump_limit(RtpSession *session, int milisecs){$/;"	f	signature:(RtpSession *session, int milisecs)
rtp_session_signal_connect	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_signal_connect(RtpSession *session,const char *signal, RtpCallback cb, unsigned long user_data);$/;"	p	signature:(RtpSession *session,const char *signal, RtpCallback cb, unsigned long user_data)
rtp_session_signal_connect	utils/ortp/src/rtpsession.c	/^rtp_session_signal_connect (RtpSession * session, const char *signal,$/;"	f	signature:(RtpSession * session, const char *signal, RtpCallback cb, unsigned long user_data)
rtp_session_signal_disconnect_by_callback	utils/ortp/inc/ortp/rtpsession.h	/^int rtp_session_signal_disconnect_by_callback(RtpSession *session,const char *signal, RtpCallback cb);$/;"	p	signature:(RtpSession *session,const char *signal, RtpCallback cb)
rtp_session_signal_disconnect_by_callback	utils/ortp/src/rtpsession.c	/^rtp_session_signal_disconnect_by_callback (RtpSession * session, const char *signal,$/;"	f	signature:(RtpSession * session, const char *signal, RtpCallback cb)
rtp_session_telephone_events_supported	utils/ortp/inc/ortp/telephonyevents.h	/^int rtp_session_telephone_events_supported(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_telephone_events_supported	utils/ortp/src/telephonyevents.c	/^int rtp_session_telephone_events_supported(RtpSession *session)$/;"	f	signature:(RtpSession *session)
rtp_session_time_to_ts	utils/ortp/inc/ortp/rtpsession.h	/^uint32_t rtp_session_time_to_ts(RtpSession *session, int time);$/;"	p	signature:(RtpSession *session, int time)
rtp_session_time_to_ts	utils/ortp/src/rtpsession.c	/^uint32_t rtp_session_time_to_ts(RtpSession *session, int time){$/;"	f	signature:(RtpSession *session, int time)
rtp_session_ts_to_time	utils/ortp/inc/ortp/rtpsession.h	/^uint32_t rtp_session_ts_to_time(RtpSession *session,uint32_t timestamp);$/;"	p	signature:(RtpSession *session,uint32_t timestamp)
rtp_session_ts_to_time	utils/ortp/src/rtpsession.c	/^uint32_t rtp_session_ts_to_time (RtpSession * session, uint32_t timestamp)$/;"	f	signature:(RtpSession * session, uint32_t timestamp)
rtp_session_uninit	utils/ortp/inc/ortp/rtpsession.h	/^void rtp_session_uninit(RtpSession *session);$/;"	p	signature:(RtpSession *session)
rtp_session_uninit	utils/ortp/src/rtpsession.c	/^void rtp_session_uninit (RtpSession * session)$/;"	f	signature:(RtpSession * session)
rtp_session_unlock	utils/ortp/inc/ortp/rtpsession.h	186;"	d
rtp_session_unset_flag	utils/ortp/inc/ortp/rtpsession.h	188;"	d
rtp_session_update_payload_type	utils/ortp/src/rtpparse.c	/^extern void rtp_session_update_payload_type(RtpSession * session, int pt);$/;"	p	file:	signature:(RtpSession * session, int pt)
rtp_session_update_payload_type	utils/ortp/src/rtpsession.c	/^void rtp_session_update_payload_type(RtpSession *session, int paytype){$/;"	f	signature:(RtpSession *session, int paytype)
rtp_set_markbit	utils/ortp/inc/ortp/rtpsession.h	275;"	d
rtp_set_payload_type	utils/ortp/inc/ortp/rtpsession.h	280;"	d
rtp_set_seqnumber	utils/ortp/inc/ortp/rtpsession.h	276;"	d
rtp_set_ssrc	utils/ortp/inc/ortp/rtpsession.h	278;"	d
rtp_set_timestamp	utils/ortp/inc/ortp/rtpsession.h	277;"	d
rtp_signal_table_add	utils/ortp/inc/ortp/rtpsignaltable.h	/^int rtp_signal_table_add(RtpSignalTable *table,RtpCallback cb, unsigned long user_data);$/;"	p	signature:(RtpSignalTable *table,RtpCallback cb, unsigned long user_data)
rtp_signal_table_add	utils/ortp/src/rtpsignaltable.c	/^int rtp_signal_table_add(RtpSignalTable *table,RtpCallback cb, unsigned long user_data)$/;"	f	signature:(RtpSignalTable *table,RtpCallback cb, unsigned long user_data)
rtp_signal_table_emit	utils/ortp/inc/ortp/rtpsignaltable.h	/^void rtp_signal_table_emit(RtpSignalTable *table);$/;"	p	signature:(RtpSignalTable *table)
rtp_signal_table_emit	utils/ortp/src/rtpsignaltable.c	/^void rtp_signal_table_emit(RtpSignalTable *table)$/;"	f	signature:(RtpSignalTable *table)
rtp_signal_table_emit2	utils/ortp/inc/ortp/rtpsignaltable.h	/^void rtp_signal_table_emit2(RtpSignalTable *table, unsigned long arg);$/;"	p	signature:(RtpSignalTable *table, unsigned long arg)
rtp_signal_table_emit2	utils/ortp/src/rtpsignaltable.c	/^void rtp_signal_table_emit2(RtpSignalTable *table,unsigned long arg)$/;"	f	signature:(RtpSignalTable *table,unsigned long arg)
rtp_signal_table_emit3	utils/ortp/inc/ortp/rtpsignaltable.h	/^void rtp_signal_table_emit3(RtpSignalTable *table, unsigned long arg1, unsigned long arg2);$/;"	p	signature:(RtpSignalTable *table, unsigned long arg1, unsigned long arg2)
rtp_signal_table_emit3	utils/ortp/src/rtpsignaltable.c	/^void rtp_signal_table_emit3(RtpSignalTable *table, unsigned long arg1, unsigned long arg2)$/;"	f	signature:(RtpSignalTable *table, unsigned long arg1, unsigned long arg2)
rtp_signal_table_init	utils/ortp/inc/ortp/rtpsignaltable.h	/^void rtp_signal_table_init(RtpSignalTable *table,struct _RtpSession *session, const char *signal_name);$/;"	p	signature:(RtpSignalTable *table,struct _RtpSession *session, const char *signal_name)
rtp_signal_table_init	utils/ortp/src/rtpsignaltable.c	/^void rtp_signal_table_init(RtpSignalTable *table,RtpSession *session, const char *signal_name)$/;"	f	signature:(RtpSignalTable *table,RtpSession *session, const char *signal_name)
rtp_signal_table_remove_by_callback	utils/ortp/inc/ortp/rtpsignaltable.h	/^int rtp_signal_table_remove_by_callback(RtpSignalTable *table,RtpCallback cb);$/;"	p	signature:(RtpSignalTable *table,RtpCallback cb)
rtp_signal_table_remove_by_callback	utils/ortp/src/rtpsignaltable.c	/^int rtp_signal_table_remove_by_callback(RtpSignalTable *table,RtpCallback cb)$/;"	f	signature:(RtpSignalTable *table,RtpCallback cb)
rtp_stats	utils/ortp/inc/ortp/rtp.h	/^typedef struct rtp_stats$/;"	s
rtp_stats::bad	utils/ortp/inc/ortp/rtp.h	/^	uint64_t bad;			\/* packets that did not appear to be RTP *\/$/;"	m	struct:rtp_stats	access:public
rtp_stats::cum_packet_loss	utils/ortp/inc/ortp/rtp.h	/^	uint64_t cum_packet_loss; \/* cumulative number of packet lost *\/$/;"	m	struct:rtp_stats	access:public
rtp_stats::discarded	utils/ortp/inc/ortp/rtp.h	/^	uint64_t discarded;		\/* incoming packets discarded because the queue exceeds its max size *\/$/;"	m	struct:rtp_stats	access:public
rtp_stats::hw_recv	utils/ortp/inc/ortp/rtp.h	/^	uint64_t hw_recv;		\/* bytes of payload received *\/$/;"	m	struct:rtp_stats	access:public
rtp_stats::outoftime	utils/ortp/inc/ortp/rtp.h	/^	uint64_t outoftime;		\/* number of packets that were received too late *\/$/;"	m	struct:rtp_stats	access:public
rtp_stats::packet_recv	utils/ortp/inc/ortp/rtp.h	/^	uint64_t packet_recv;	\/* number of packets received *\/$/;"	m	struct:rtp_stats	access:public
rtp_stats::packet_sent	utils/ortp/inc/ortp/rtp.h	/^	uint64_t packet_sent;$/;"	m	struct:rtp_stats	access:public
rtp_stats::recv	utils/ortp/inc/ortp/rtp.h	/^	uint64_t recv; 		\/* bytes of payload received and delivered in time to the application *\/$/;"	m	struct:rtp_stats	access:public
rtp_stats::sent	utils/ortp/inc/ortp/rtp.h	/^	uint64_t sent;		\/* bytes sent *\/$/;"	m	struct:rtp_stats	access:public
rtp_stats::skipped	utils/ortp/inc/ortp/rtp.h	/^	uint64_t skipped;		\/* number of packets skipped (that the application never queried $/;"	m	struct:rtp_stats	access:public
rtp_stats::unavaillable	utils/ortp/inc/ortp/rtp.h	/^	uint64_t unavaillable;	\/* packets not availlable when they were queried *\/$/;"	m	struct:rtp_stats	access:public
rtp_stats_display	utils/ortp/inc/ortp/ortp.h	/^void rtp_stats_display(rtp_stats_t *stats, const char *header);$/;"	p	signature:(rtp_stats_t *stats, const char *header)
rtp_stats_display	utils/ortp/src/ortp.c	/^void rtp_stats_display(rtp_stats_t *stats, const char *header)$/;"	f	signature:(rtp_stats_t *stats, const char *header)
rtp_stats_display	utils/ortp/src/ortp.h	/^void rtp_stats_display(rtp_stats_t *stats, const char *header);$/;"	p	signature:(rtp_stats_t *stats, const char *header)
rtp_stats_reset	utils/ortp/inc/ortp/ortp.h	/^void rtp_stats_reset(rtp_stats_t *stats);$/;"	p	signature:(rtp_stats_t *stats)
rtp_stats_reset	utils/ortp/src/ortp.c	/^void rtp_stats_reset(rtp_stats_t *stats){$/;"	f	signature:(rtp_stats_t *stats)
rtp_stats_reset	utils/ortp/src/ortp.h	/^void rtp_stats_reset(rtp_stats_t *stats);$/;"	p	signature:(rtp_stats_t *stats)
rtp_stats_t	utils/ortp/inc/ortp/rtp.h	/^} rtp_stats_t;$/;"	t	typeref:struct:rtp_stats
rtp_timer_set_interval	utils/ortp/src/rtptimer.c	/^void rtp_timer_set_interval(RtpTimer *timer, struct timeval *interval)$/;"	f	signature:(RtpTimer *timer, struct timeval *interval)
rtp_timer_set_interval	utils/ortp/src/rtptimer.h	/^void rtp_timer_set_interval(RtpTimer *timer, struct timeval *interval);$/;"	p	signature:(RtpTimer *timer, struct timeval *interval)
rtp_timestamp	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t rtp_timestamp;$/;"	m	struct:sender_info	access:public
rtpset	utils/ortp/inc/ortp/sessionset.h	/^	ortp_fd_set rtpset;$/;"	m	struct:_SessionSet	access:public
rtpsignaltable_h	utils/ortp/inc/ortp/rtpsignaltable.h	21;"	d
sampleRate	core/inc/common.h	/^    int sampleRate;$/;"	m	struct:GlobalData	access:public
save_sys_config	core/inc/common.h	/^int save_sys_config();$/;"	p	signature:()
sched	utils/ortp/inc/ortp/rtpsession.h	/^	struct _RtpScheduler *sched;$/;"	m	struct:_RtpSession	typeref:struct:_RtpSession::_RtpScheduler	access:public
sd	utils/ortp/inc/ortp/rtpsession.h	/^	mblk_t *sd;$/;"	m	struct:_RtpSession	access:public
sdes_chunk	utils/ortp/inc/ortp/rtcp.h	/^typedef struct sdes_chunk$/;"	s
sdes_chunk::csrc	utils/ortp/inc/ortp/rtcp.h	/^	uint32_t csrc;$/;"	m	struct:sdes_chunk	access:public
sdes_chunk_append_item	utils/ortp/src/rtcp.c	/^mblk_t * sdes_chunk_append_item(mblk_t *m, rtcp_sdes_type_t sdes_type, const char *content)$/;"	f	signature:(mblk_t *m, rtcp_sdes_type_t sdes_type, const char *content)
sdes_chunk_get_ssrc	utils/ortp/src/rtcp.c	70;"	d	file:
sdes_chunk_new	utils/ortp/src/rtcp.c	/^mblk_t *sdes_chunk_new(uint32_t ssrc){$/;"	f	signature:(uint32_t ssrc)
sdes_chunk_pad	utils/ortp/src/rtcp.c	/^mblk_t * sdes_chunk_pad(mblk_t *m){$/;"	f	signature:(mblk_t *m)
sdes_chunk_set_ssrc	utils/ortp/src/rtcp.c	/^void sdes_chunk_set_ssrc(mblk_t *m, uint32_t ssrc){$/;"	f	signature:(mblk_t *m, uint32_t ssrc)
sdes_chunk_t	utils/ortp/inc/ortp/rtcp.h	/^} sdes_chunk_t;$/;"	t	typeref:struct:sdes_chunk
sdes_item	utils/ortp/inc/ortp/rtcp.h	/^typedef struct sdes_item$/;"	s
sdes_item::content	utils/ortp/inc/ortp/rtcp.h	/^	char content[1];	$/;"	m	struct:sdes_item	access:public
sdes_item::item_type	utils/ortp/inc/ortp/rtcp.h	/^	uint8_t item_type;$/;"	m	struct:sdes_item	access:public
sdes_item::len	utils/ortp/inc/ortp/rtcp.h	/^	uint8_t len;$/;"	m	struct:sdes_item	access:public
sdes_item_t	utils/ortp/inc/ortp/rtcp.h	/^} sdes_item_t;$/;"	t	typeref:struct:sdes_item
sem_arg	utils/osa/src/osa_ipc.c	/^} sem_arg;$/;"	v	typeref:union:semun
semun	utils/osa/src/osa_ipc.c	/^union semun {$/;"	u	file:
semun::array	utils/osa/src/osa_ipc.c	/^  unsigned short  *array;$/;"	m	union:semun	file:	access:public
semun::buf	utils/osa/src/osa_ipc.c	/^  struct semid_ds *buf;$/;"	m	union:semun	typeref:struct:semun::semid_ds	file:	access:public
semun::val	utils/osa/src/osa_ipc.c	/^  int val;$/;"	m	union:semun	file:	access:public
send_fmtp	utils/ortp/inc/ortp/payloadtype.h	/^	char *send_fmtp; \/* various format parameters for the outgoing stream *\/$/;"	m	struct:_PayloadType	access:public
send_pt	utils/ortp/inc/ortp/rtpsession.h	/^	int send_pt;\/* sent payload type *\/$/;"	m	struct:_RtpSession	access:public
send_ssrc	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t send_ssrc;$/;"	m	struct:_RtpSession	access:public
send_to_client	core/src/session.c	/^int send_to_client( SessionElement * arg )$/;"	f	signature:( SessionElement * arg )
send_wp	utils/ortp/inc/ortp/rtpsession.h	/^	WaitPoint send_wp;$/;"	m	struct:_RtpSession	access:public
sender_info	utils/ortp/inc/ortp/rtcp.h	/^typedef struct sender_info$/;"	s
sender_info::ntp_timestamp_lsw	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t ntp_timestamp_lsw;$/;"	m	struct:sender_info	access:public
sender_info::ntp_timestamp_msw	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t ntp_timestamp_msw;$/;"	m	struct:sender_info	access:public
sender_info::rtp_timestamp	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t rtp_timestamp;$/;"	m	struct:sender_info	access:public
sender_info::senders_octet_count	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t senders_octet_count;$/;"	m	struct:sender_info	access:public
sender_info::senders_packet_count	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t senders_packet_count;$/;"	m	struct:sender_info	access:public
sender_info_init	utils/ortp/src/rtcp.c	/^void sender_info_init(sender_info_t *info, RtpSession *session){$/;"	f	signature:(sender_info_t *info, RtpSession *session)
sender_info_t	utils/ortp/inc/ortp/rtcp.h	/^} sender_info_t;$/;"	t	typeref:struct:sender_info
senders_octet_count	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t senders_octet_count;$/;"	m	struct:sender_info	access:public
senders_packet_count	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t senders_packet_count;$/;"	m	struct:sender_info	access:public
sent	utils/ortp/inc/ortp/rtp.h	/^	uint64_t sent;		\/* bytes sent *\/$/;"	m	struct:rtp_stats	access:public
seq_number	utils/ortp/inc/ortp/rtp.h	/^	uint16_t seq_number;$/;"	m	struct:rtp_header	access:public
serverCMD	network/inc/command.h	/^	ServerCMD serverCMD;$/;"	m	struct:_ServerPack	access:public
session	utils/ortp/inc/ortp/rtpsignaltable.h	/^	struct _RtpSession *session;$/;"	m	struct:_RtpSignalTable	typeref:struct:_RtpSignalTable::_RtpSession	access:public
sessionPair	core/src/session.c	/^    SessionPair sessionPair;$/;"	m	struct:_clientObj	file:	access:public
sessionPair	core/src/session.c	/^typedef struct sessionPair$/;"	s	file:
sessionPair::audioIDs	core/src/session.c	/^    int audioIDs[MAX_VIDEO_CHANNEL\/CHS_PER_SESSION];$/;"	m	struct:sessionPair	file:	access:public
sessionPair::channels	core/src/session.c	/^	int channels;$/;"	m	struct:sessionPair	file:	access:public
sessionPair::videoIDs	core/src/session.c	/^    int videoIDs[MAX_VIDEO_CHANNEL\/CHS_PER_SESSION];$/;"	m	struct:sessionPair	file:	access:public
sessionThrFxn	core/inc/session.h	/^void *sessionThrFxn(void *arg);$/;"	p	signature:(void *arg)
sessionThrFxn	core/src/session.c	/^void *sessionThrFxn( void *arg )$/;"	f	signature:( void *arg )
session_set_and	utils/ortp/src/sessionset.c	/^int session_set_and(SessionSet *sched_set, int maxs, SessionSet *user_set, SessionSet *result_set)$/;"	f	signature:(SessionSet *sched_set, int maxs, SessionSet *user_set, SessionSet *result_set)
session_set_clr	utils/ortp/inc/ortp/sessionset.h	96;"	d
session_set_copy	utils/ortp/inc/ortp/sessionset.h	98;"	d
session_set_destroy	utils/ortp/inc/ortp/sessionset.h	/^void session_set_destroy(SessionSet *set);$/;"	p	signature:(SessionSet *set)
session_set_destroy	utils/ortp/src/sessionset.c	/^void session_set_destroy(SessionSet *set)$/;"	f	signature:(SessionSet *set)
session_set_init	utils/ortp/inc/ortp/sessionset.h	93;"	d
session_set_is_set	utils/ortp/inc/ortp/sessionset.h	95;"	d
session_set_new	utils/ortp/inc/ortp/sessionset.h	/^SessionSet * session_set_new();$/;"	p	signature:()
session_set_new	utils/ortp/src/sessionset.c	/^SessionSet * session_set_new()$/;"	f
session_set_select	utils/ortp/inc/ortp/sessionset.h	/^int session_set_select(SessionSet *recvs, SessionSet *sends, SessionSet *errors);$/;"	p	signature:(SessionSet *recvs, SessionSet *sends, SessionSet *errors)
session_set_select	utils/ortp/src/sessionset.c	/^int session_set_select(SessionSet *recvs, SessionSet *sends, SessionSet *errors)$/;"	f	signature:(SessionSet *recvs, SessionSet *sends, SessionSet *errors)
session_set_set	utils/ortp/inc/ortp/sessionset.h	94;"	d
set_non_blocking_socket	utils/ortp/inc/ortp/port.h	/^int set_non_blocking_socket(ortp_socket_t sock);$/;"	p	signature:(ortp_socket_t sock)
set_non_blocking_socket	utils/ortp/src/port.c	/^int set_non_blocking_socket (ortp_socket_t sock)$/;"	f	signature:(ortp_socket_t sock)
si	utils/ortp/inc/ortp/rtcp.h	/^	sender_info_t si;$/;"	m	struct:rtcp_sr	access:public
signal_name	utils/ortp/inc/ortp/rtpsignaltable.h	/^	const char *signal_name;$/;"	m	struct:_RtpSignalTable	access:public
signal_tables	utils/ortp/inc/ortp/rtpsession.h	/^	struct _OList *signal_tables;$/;"	m	struct:_RtpSession	typeref:struct:_RtpSession::_OList	access:public
size	utils/osa/inc/fifoutil.h	/^    size_t size;$/;"	m	struct:FifoUtil_Obj	access:public
size	utils/osa/inc/osa_buf.h	/^  int size;$/;"	m	struct:__anon26	access:public
skipped	utils/ortp/inc/ortp/rtp.h	/^	uint64_t skipped;		\/* number of packets skipped (that the application never queried $/;"	m	struct:rtp_stats	access:public
slide	utils/ortp/inc/ortp/rtpsession.h	/^	float slide;$/;"	m	struct:_JitterControl	access:public
snd_last_ts	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t snd_last_ts;	\/* the last stream timestamp sended *\/$/;"	m	struct:_RtpStream	access:public
snd_rand_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t snd_rand_offset;	\/* a random number added to the user offset to make the stream timestamp*\/$/;"	m	struct:_RtpStream	access:public
snd_seq	utils/ortp/inc/ortp/rtpsession.h	/^	uint16_t snd_seq; \/* send sequence number *\/$/;"	m	struct:_RtpStream	access:public
snd_time_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t snd_time_offset;\/*the scheduler time when the application send its first timestamp*\/	$/;"	m	struct:_RtpStream	access:public
snd_ts_offset	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t snd_ts_offset;	\/* the first application timestamp sent by the application *\/$/;"	m	struct:_RtpStream	access:public
snprintf	utils/ortp/inc/ortp/port.h	147;"	d
socket	utils/ortp/inc/ortp/rtpsession.h	/^	ortp_socket_t socket;$/;"	m	struct:_RtcpStream	access:public
socket	utils/ortp/inc/ortp/rtpsession.h	/^	ortp_socket_t socket;$/;"	m	struct:_RtpStream	access:public
sockfamily	utils/ortp/inc/ortp/rtpsession.h	/^	int sockfamily;$/;"	m	struct:_RtcpStream	access:public
sockfamily	utils/ortp/inc/ortp/rtpsession.h	/^	int sockfamily;$/;"	m	struct:_RtpStream	access:public
split	utils/ortp/src/utils.h	/^	dwsplit_t split;$/;"	m	union:__anon16	access:public
split_and_queue	utils/ortp/src/rtpparse.c	/^void split_and_queue(queue_t *q, int maxrqsz, mblk_t *mp, rtp_header_t *rtp, int *discarded)$/;"	f	signature:(queue_t *q, int maxrqsz, mblk_t *mp, rtp_header_t *rtp, int *discarded)
srandom	utils/ortp/inc/ortp/port.h	106;"	d
ssh_interact_thr	core/src/main.c	/^void* ssh_interact_thr(void* arg)$/;"	f	signature:(void* arg)
ssh_interact_thr	core/src/main.c	/^void* ssh_interact_thr(void* arg);$/;"	p	file:	signature:(void* arg)
ssrc	utils/ortp/inc/ortp/rtcp.h	/^	uint32_t ssrc;$/;"	m	struct:rtcp_rr	access:public
ssrc	utils/ortp/inc/ortp/rtcp.h	/^	uint32_t ssrc;$/;"	m	struct:rtcp_sr	access:public
ssrc	utils/ortp/inc/ortp/rtcp.h	/^	uint32_t ssrc[1];  \/* the bye may contain several ssrc\/csrc *\/$/;"	m	struct:rtcp_bye	access:public
ssrc	utils/ortp/inc/ortp/rtcp.h	/^        uint32_t ssrc;$/;"	m	struct:report_block	access:public
ssrc	utils/ortp/inc/ortp/rtp.h	/^	uint32_t ssrc;$/;"	m	struct:rtp_header	access:public
start_all_threads	core/src/main.c	/^int start_all_threads()$/;"	f
start_all_threads	core/src/main.c	/^static int start_all_threads();$/;"	p	file:
state	network/inc/command.h	/^			uint8_t state;$/;"	m	struct:_ReturnPack::__anon7::__anon9	access:public
state	network/inc/command.h	/^	int state;$/;"	m	struct:_AlarmStatePack	access:public
state	utils/ortp/src/rtptimer.h	/^	int state;$/;"	m	struct:_RtpTimer	access:public
stats	utils/ortp/inc/ortp/rtpsession.h	/^	rtp_stats_t stats;$/;"	m	struct:_RtpStream	access:public
status	utils/osa/inc/osa_msgq.h	/^  int           status;$/;"	m	struct:OSA_MsgHndl	access:public
stop_all_threads	core/src/main.c	/^static void stop_all_threads();$/;"	p	file:
stop_all_threads	core/src/main.c	/^void stop_all_threads()$/;"	f
storePath	core/inc/common.h	/^    char storePath[STORAGE_PATH_LEN]; \/\/ storage path$/;"	m	struct:GlobalData	access:public
strcasecmp	utils/ortp/inc/ortp/port.h	148;"	d
subSessionThrFxn	core/src/session.c	/^void *subSessionThrFxn(void *arg)$/;"	f	signature:(void *arg)
subSessionThreadHndls	core/src/session.c	/^static OSA_ThrHndl subSessionThreadHndls[MAX_VIDEO_CHANNEL \/ CHS_PER_SESSION];$/;"	v	file:
sysmode	core/inc/common.h	/^    int  sysmode;               \/\/ sys mode PAL or NTSC$/;"	m	struct:GlobalData	access:public
tcpServerThrFxn	network/src/serverIf.c	/^void * tcpServerThrFxn( void * arg )$/;"	f	signature:( void * arg )
tcp_listen_thread_start	network/inc/server.h	/^int tcp_listen_thread_start( int localport );$/;"	p	signature:( int localport )
tcp_listen_thread_start	network/src/server.c	/^int tcp_listen_thread_start( int localport )$/;"	f	signature:( int localport )
telephone_event_t	utils/ortp/inc/ortp/telephonyevents.h	/^typedef struct _telephone_event telephone_event_t;$/;"	t	typeref:struct:_telephone_event
telephone_events_pt	utils/ortp/inc/ortp/rtpsession.h	/^	int telephone_events_pt;	\/* the payload type used for telephony events *\/$/;"	m	struct:_RtpSession	access:public
tev_rq	utils/ortp/inc/ortp/rtpsession.h	/^	queue_t tev_rq;$/;"	m	struct:_RtpStream	access:public
thrHndl	utils/osa/inc/osa_tsk.h	/^  OSA_ThrHndl thrHndl;      \/\/\/< OS thread handle$/;"	m	struct:OSA_TskHndl	access:public
thread	utils/ortp/src/scheduler.h	/^	ortp_thread_t thread;$/;"	m	struct:_RtpScheduler	access:public
threadEnv	core/src/main.c	/^    ThreadEnv   threadEnv;$/;"	m	struct:_threadMgr	file:	access:public
thread_param	utils/ortp/src/port.c	/^typedef struct thread_param{$/;"	s	file:
thread_param::arg	utils/ortp/src/port.c	/^	void * arg;$/;"	m	struct:thread_param	file:	access:public
thread_param::func	utils/ortp/src/port.c	/^	void * (*func)(void *);$/;"	m	struct:thread_param	file:	access:public
thread_param_t	utils/ortp/src/port.c	/^}thread_param_t;$/;"	t	typeref:struct:thread_param	file:
thread_running	utils/ortp/src/scheduler.h	/^	int thread_running;$/;"	m	struct:_RtpScheduler	access:public
thread_starter	utils/ortp/src/port.c	/^static DWORD WINAPI thread_starter(void *data){$/;"	f	file:	signature:(void *data)
time	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t time;$/;"	m	struct:_WaitPoint	access:public
timeStampInc	utils/com/src/rtpsend.c	/^    uint32_t    timeStampInc;$/;"	m	struct:_sessionObj	file:	access:public
time_	utils/ortp/src/scheduler.h	/^	uint32_t time_;       \/*number of miliseconds elapsed since the start of the thread *\/$/;"	m	struct:_RtpScheduler	access:public
time_jump	utils/ortp/inc/ortp/rtpsession.h	/^	int time_jump;$/;"	m	struct:_RtpStream	access:public
timer	utils/ortp/src/scheduler.h	/^	struct _RtpTimer *timer;$/;"	m	struct:_RtpScheduler	typeref:struct:_RtpScheduler::_RtpTimer	access:public
timerCb	utils/ortp/src/posixtimer.c	/^void CALLBACK timerCb(UINT uID, UINT uMsg, DWORD dwUser, DWORD dw1, DWORD dw2)$/;"	f	signature:(UINT uID, UINT uMsg, DWORD dwUser, DWORD dw1, DWORD dw2)
timerId	utils/ortp/src/posixtimer.c	/^MMRESULT timerId;$/;"	v
timer_do	utils/ortp/src/rtptimer.h	/^	RtpTimerFunc timer_do;$/;"	m	struct:_RtpTimer	access:public
timer_inc	utils/ortp/src/scheduler.h	/^	uint32_t timer_inc;	\/* the timer increment in milisec *\/$/;"	m	struct:_RtpScheduler	access:public
timer_init	utils/ortp/src/rtptimer.h	/^	RtpTimerFunc timer_init;$/;"	m	struct:_RtpTimer	access:public
timer_uninit	utils/ortp/src/rtptimer.h	/^	RtpTimerFunc timer_uninit;$/;"	m	struct:_RtpTimer	access:public
timestamp	utils/com/inc/rtpsend.h	/^    uint32_t timestamp;$/;"	m	struct:_sFrameHeader	access:public
timestamp	utils/ortp/inc/ortp/rtp.h	/^	uint32_t timestamp;$/;"	m	struct:rtp_header	access:public
timestamp	utils/osa/inc/osa_buf.h	/^  int timestamp;$/;"	m	struct:__anon26	access:public
totalTime	utils/osa/inc/osa_prf.h	/^  Uint32 totalTime;$/;"	m	struct:__anon32	access:public
totalValue	utils/osa/inc/osa_prf.h	/^  Uint32 totalValue;$/;"	m	struct:__anon32	access:public
toto	utils/ortp/src/posixtimer.c	/^RtpTimer toto;$/;"	v
ts_jump	utils/ortp/inc/ortp/rtpsession.h	/^	uint32_t ts_jump;$/;"	m	struct:_RtpStream	access:public
type	utils/ortp/inc/ortp/payloadtype.h	/^	int type;$/;"	m	struct:_PayloadType	access:public
type	utils/osa/inc/osa_ipc.h	/^  long  type;$/;"	m	struct:__anon21	access:public
uint16_t	utils/ortp/inc/ortp/port.h	/^typedef  unsigned short uint16_t;$/;"	t
uint32_t	utils/com/inc/rtpsend.h	/^typedef unsigned int  uint32_t;$/;"	t
uint32_t	utils/ortp/inc/ortp/port.h	/^typedef  unsigned int uint32_t;$/;"	t
uint32_t_random	utils/ortp/src/rtpsession.c	/^static uint32_t uint32_t_random(){$/;"	f	file:
uint64_t	utils/ortp/inc/ortp/port.h	/^typedef  unsigned __int64 uint64_t;$/;"	t
uint8_t	network/inc/command.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	utils/com/inc/rtpsend.h	/^typedef unsigned char uint8_t;$/;"	t
uint8_t	utils/ortp/inc/ortp/port.h	/^typedef  unsigned char uint8_t;$/;"	t
unavaillable	utils/ortp/inc/ortp/rtp.h	/^	uint64_t unavaillable;	\/* packets not availlable when they were queried *\/$/;"	m	struct:rtp_stats	access:public
unblock_select_cond	utils/ortp/src/scheduler.h	/^	ortp_cond_t   unblock_select_cond;$/;"	m	struct:_RtpScheduler	access:public
user_data	utils/ortp/inc/ortp/payloadtype.h	/^	void *user_data;$/;"	m	struct:_PayloadType	access:public
user_data	utils/ortp/inc/ortp/rtpsession.h	/^	void * user_data;$/;"	m	struct:_RtpSession	access:public
user_data	utils/ortp/inc/ortp/rtpsignaltable.h	/^	unsigned long user_data[RTP_CALLBACK_TABLE_MAX_ENTRIES];$/;"	m	struct:_RtpSignalTable	access:public
val	utils/osa/src/osa_ipc.c	/^  int val;$/;"	m	union:semun	file:	access:public
version	utils/ortp/inc/ortp/rtcp.h	/^        uint16_t version:2;$/;"	m	struct:rtcp_common_header	access:public
version	utils/ortp/inc/ortp/rtp.h	/^	uint16_t version:2;$/;"	m	struct:rtp_header	access:public
videoChannels	core/inc/common.h	/^	int  videoChannels;$/;"	m	struct:GlobalData	access:public
videoEncodeInit	core/src/videoEncode.c	/^int videoEncodeInit()$/;"	f
videoEncodeInit	core/src/videoEncode.c	/^static int videoEncodeInit();$/;"	p	file:
videoEncodeThrFxn	core/inc/videoEncode.h	/^void* videoEncodeThrFxn(void *arg);$/;"	p	signature:(void *arg)
videoEncodeThrFxn	core/src/videoEncode.c	/^void* videoEncodeThrFxn(void *arg)$/;"	f	signature:(void *arg)
videoEnocdeDestroy	core/src/videoEncode.c	/^int videoEnocdeDestroy()$/;"	f
videoEnocdeDestroy	core/src/videoEncode.c	/^static int videoEnocdeDestroy();$/;"	p	file:
videoFlag	core/inc/common.h	/^    BOOL videoFlag[MAX_VIDEO_CHANNEL];   \/\/ indicate which channel need send video$/;"	m	struct:GlobalData	access:public
videoIDs	core/src/session.c	/^    int videoIDs[MAX_VIDEO_CHANNEL\/CHS_PER_SESSION];$/;"	m	struct:sessionPair	file:	access:public
video_encoded_frame_buf	core/src/videoEncode.c	/^static unsigned char* video_encoded_frame_buf[MAX_VIDEO_CHANNEL] = {NULL};$/;"	v	file:
video_file_fp	core/src/videoEncode.c	/^static FILE* video_file_fp[MAX_VIDEO_CHANNEL] = {NULL};$/;"	v	file:
videoport	network/inc/command.h	/^			int videoport;$/;"	m	struct:_ServerPack::__anon1::__anon2	access:public
virtAddr	utils/osa/inc/osa_buf.h	/^  void *virtAddr;$/;"	m	struct:__anon26	access:public
volume	utils/ortp/inc/ortp/telephonyevents.h	/^	uint32_t volume:6;$/;"	m	struct:_telephone_event	access:public
vsnprintf	utils/ortp/inc/ortp/port.h	105;"	d
w_max	utils/ortp/src/scheduler.h	/^	int 		w_max;$/;"	m	struct:_RtpScheduler	access:public
w_sessions	utils/ortp/src/scheduler.h	/^	SessionSet	w_sessions;		\/* mask of sessions that have a send event *\/$/;"	m	struct:_RtpScheduler	access:public
wait_point_check	utils/ortp/src/rtpsession.c	/^bool_t wait_point_check(WaitPoint *wp, uint32_t t){$/;"	f	signature:(WaitPoint *wp, uint32_t t)
wait_point_init	utils/ortp/src/rtpsession.c	/^void wait_point_init(WaitPoint *wp){$/;"	f	signature:(WaitPoint *wp)
wait_point_lock	utils/ortp/src/rtpsession.c	60;"	d	file:
wait_point_uninit	utils/ortp/src/rtpsession.c	/^void wait_point_uninit(WaitPoint *wp){$/;"	f	signature:(WaitPoint *wp)
wait_point_unlock	utils/ortp/src/rtpsession.c	61;"	d	file:
wait_point_wakeup	utils/ortp/src/rtpsession.c	82;"	d	file:
wait_point_wakeup_at	utils/ortp/src/rtpsession.c	/^void wait_point_wakeup_at(WaitPoint *wp, uint32_t t, bool_t dosleep){$/;"	f	signature:(WaitPoint *wp, uint32_t t, bool_t dosleep)
wakeup	utils/ortp/inc/ortp/rtpsession.h	/^	bool_t wakeup;$/;"	m	struct:_WaitPoint	access:public
win_timer_close	utils/ortp/src/posixtimer.c	/^void win_timer_close(void)$/;"	f	signature:(void)
win_timer_do	utils/ortp/src/posixtimer.c	/^void win_timer_do(void)$/;"	f	signature:(void)
win_timer_init	utils/ortp/src/posixtimer.c	/^void win_timer_init(void)$/;"	f	signature:(void)
xstrtoi	utils/osa/inc/osa.h	/^int xstrtoi(char *hex);$/;"	p	signature:(char *hex)
xstrtoi	utils/osa/src/osa.c	/^int xstrtoi(char *hex)      \/\/ hex string to integer$/;"	f	signature:(char *hex)
xtod	utils/osa/src/osa.c	/^static char xtod(char c) {$/;"	f	file:	signature:(char c)
zero_pattern	utils/ortp/inc/ortp/payloadtype.h	/^	char *zero_pattern;$/;"	m	struct:_PayloadType	access:public
